{"version":3,"sources":["webpack://mobility-toolbox-js/webpack/universalModuleDefinition","webpack://mobility-toolbox-js/webpack/bootstrap","webpack://mobility-toolbox-js/external \"ol/proj\"","webpack://mobility-toolbox-js/external \"ol/Observable\"","webpack://mobility-toolbox-js/external \"ol/extent\"","webpack://mobility-toolbox-js/external \"ol/style\"","webpack://mobility-toolbox-js/external \"query-string\"","webpack://mobility-toolbox-js/external \"ol/format/GeoJSON\"","webpack://mobility-toolbox-js/external \"ol/geom\"","webpack://mobility-toolbox-js/external \"ol/layer\"","webpack://mobility-toolbox-js/external \"ol/Feature\"","webpack://mobility-toolbox-js/external \"ol/Object\"","webpack://mobility-toolbox-js/external \"ol/layer/Layer\"","webpack://mobility-toolbox-js/external \"mapbox-gl\"","webpack://mobility-toolbox-js/external \"ol/source/Source\"","webpack://mobility-toolbox-js/external \"ol/geom/GeometryType\"","webpack://mobility-toolbox-js/external \"ol/Map\"","webpack://mobility-toolbox-js/external \"ol/control\"","webpack://mobility-toolbox-js/external \"ol/layer/Group\"","webpack://mobility-toolbox-js/external \"uuid\"","webpack://mobility-toolbox-js/external \"ol/source\"","webpack://mobility-toolbox-js/external \"ol/geom/Point\"","webpack://mobility-toolbox-js/./src/common/layers/Layer.js","webpack://mobility-toolbox-js/./src/ol/layers/Layer.js","webpack://mobility-toolbox-js/./src/common/controls/Control.js","webpack://mobility-toolbox-js/./src/common/mixins/MapMixin.js","webpack://mobility-toolbox-js/./src/common/mixins/CopyrightMixin.js","webpack://mobility-toolbox-js/./src/common/utils/removeDuplicate.js","webpack://mobility-toolbox-js/./src/ol/controls/CopyrightControl.js","webpack://mobility-toolbox-js/./src/ol/Map.js","webpack://mobility-toolbox-js/./src/ol/layers/WMSLayer.js","webpack://mobility-toolbox-js/./src/common/utils/getMapboxMapCopyrights.js","webpack://mobility-toolbox-js/./src/common/utils/getMapboxStyleUrl.js","webpack://mobility-toolbox-js/./src/ol/layers/MapboxLayer.js","webpack://mobility-toolbox-js/./src/ol/layers/MapboxStyleLayer.js","webpack://mobility-toolbox-js/./src/common/Tracker.js","webpack://mobility-toolbox-js/./src/common/trackerConfig.js","webpack://mobility-toolbox-js/./src/common/mixins/TrackerLayerMixin.js","webpack://mobility-toolbox-js/./src/ol/layers/TrackerLayer.js","webpack://mobility-toolbox-js/./src/common/timeUtils.js","webpack://mobility-toolbox-js/./src/common/api/api.js","webpack://mobility-toolbox-js/./src/api/stops/StopsAPI.js","webpack://mobility-toolbox-js/./src/api/trajserv/TrajservAPIUtils.js","webpack://mobility-toolbox-js/./src/api/trajserv/TrajservAPI.js","webpack://mobility-toolbox-js/./src/api/tralis/WebSocketConnector.js","webpack://mobility-toolbox-js/./src/api/tralis/TralisAPIUtils.js","webpack://mobility-toolbox-js/./src/api/tralis/TralisAPI.js","webpack://mobility-toolbox-js/./src/common/mixins/TrajservLayerMixin.js","webpack://mobility-toolbox-js/./src/ol/layers/TrajservLayer.js","webpack://mobility-toolbox-js/./src/common/mixins/TralisLayerMixin.js","webpack://mobility-toolbox-js/./src/ol/layers/TralisLayer.js","webpack://mobility-toolbox-js/./src/ol/layers/VectorLayer.js","webpack://mobility-toolbox-js/./src/common/mixins/SearchMixin.js","webpack://mobility-toolbox-js/./src/ol/controls/StopFinderControl.js","webpack://mobility-toolbox-js/./src/mapbox/controls/CopyrightControl.js","webpack://mobility-toolbox-js/./src/mapbox/Map.js","webpack://mobility-toolbox-js/./src/mapbox/utils.js","webpack://mobility-toolbox-js/./src/mapbox/layers/TrackerLayer.js","webpack://mobility-toolbox-js/./src/mapbox/layers/TralisLayer.js","webpack://mobility-toolbox-js/./src/index.js","webpack://mobility-toolbox-js/./src/mapbox/layers/TrajservLayer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Layer","options","defineProperties","isQueryable","copyrights","onClick","children","visible","properties","isBaseLayer","uid","uuid","dfltName","this","toLowerCase","isReactSpatialLayer","writable","set","newCopyrights","arrValue","Array","isArray","undefined","map","clickCallbacks","terminate","dispatchEvent","type","target","stopPropagationDown","stopPropagationUp","stopPropagationSiblings","filter","child","hasChildren","find","layer","unshift","length","splice","Promise","resolve","features","coordinate","callback","Error","includes","push","idx","indexOf","Observable","olLayer","setVisible","olListenersKeys","getLayers","on","evt","element","attributions","Group","getArray","forEach","getSource","setAttributions","unByKey","newOptions","LayerCommon","Control","active","render","newActive","activate","deactivate","parentNode","removeChild","targett","getContainer","createDefaultElement","appendChild","BaseObject","MapMixin","Base","layers","controls","mobilityLayers","mobilityControls","control","addControl","addLayer","position","addMobilityControl","removeMobilityControl","CopyrightMixin","innerHTML","getCopyrights","join","document","createElement","id","assign","style","bottom","right","fontSize","padding","removeDuplicate","array","arrWithoutEmptyValues","val","trim","lowerCasesValues","str","Set","uniqueStr","CopyrightControl","onPostRender","frameState","layerStatesArray","layerState","inView","viewState","getAttributions","concat","un","mixin","Map","defaultControls","attribution","getTargetElement","init","OLMap","WMSLayer","abortController","AbortController","format","GeoJSON","coord","projection","getView","getProjection","resolution","getResolution","getFeatureInfoUrl","info_format","query_layers","getParams","abort","signal","fetch","then","resp","json","data","readFeature","catch","singleClickRef","e","getFeatureInfoAtCoordinate","callClickCallbacks","getMapboxMapCopyrights","sourceCaches","values","sourceCache","used","source","replace","split","getMapboxStyleUrl","apiKey","apiKeyName","styleUrl","parsedStyle","qs","parseUrl","query","stringifyUrl","console","warn","MapboxLayer","mbLayer","OLLayer","Source","mbMap","changed","canvas","getCanvas","getVisible","renderState","display","opacity","getOpacity","rotation","rotateTo","Math","PI","animate","zoom","center","jumpTo","toLonLat","size","getSize","isStyleLoaded","_frame","cancel","_render","err","url","updateAttribution","featureProjection","loadMbMap","resize","getCenter","x","y","createStyleUrl","mapboxgl","attributionControl","boxZoom","container","interactive","fadeDuration","preserveDrawingBuffer","once","loaded","mapboxCanvas","tabIndex","setAttribute","removeAttribute","newAttributions","toString","pixel","project","queryRenderedFeatures","feature","olFeature","off","triggerRepaint","remove","Tracker","opts","interpolate","trajectories","renderedTrajectories","getPixelFromCoordinate","hoverVehicleId","iconScale","width","height","canvasContext","getContext","visibility","sort","clearRect","currTime","Date","now","clear","hoverVehicleImg","hoverVehiclePx","hoverVehicleWidth","hoverVehicleHeight","currResolution","traj","geometry","timeIntervals","timeOffset","start","end","startFrac","endFrac","timeFrac","j","getType","GeomType","POINT","getCoordinate","LINE_STRING","min","geomFrac","getCoordinateAt","endFraction","getFirstCoordinate","getLastCoordinate","error","px","rendered","vehicleImg","imgWidth","imgHeight","floor","drawImage","olEventsKeys","trackerRadiusMapping","0","1","2","3","4","5","6","7","8","9","types","bgColors","textColors","timeSteps","getTypeIndex","matched","RegExp","test","getBgColor","typeIdx","getDelayColor","delayInMs","cancelled","isDelayText","TrackerLayerMixin","isHoverActive","cuurSpeed","speed","isTrackerLayer","defaultStyle","newSpeed","tracker","setFilter","setSort","styleCache","lastUpdateTime","setStyle","props","visibilityRef","stop","destroy","renderTrajectories","startUpdateTime","stopUpdateTime","updateTimeInterval","setInterval","newTime","getTime","setCurrTime","getRefreshTimeInMs","clearInterval","time","filterFc","getTrajectories","ext","buffer","vehicles","containsCoordinate","roundedZoom","round","timeStep","max","text","ctx","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","font","strokeText","fillText","TrackerLayer","view","currentZoom","z","getZoom","getInteracting","vehicle","getVehiclesAtCoordinate","cursor","setHoverVehicleId","getUTCDateString","month","getUTCMonth","day","getUTCDate","getUTCFullYear","getUTCTimeString","date","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","API","path","params","config","urlParams","clone","keys","stringify","response","reject","StopsAPI","featureCollection","translateDates","dates","newDates","year","translateTrajStationsResp","destination","hs","vehicleType","longName","ln","shortName","sn","wheelchairAccessible","wa","bicyclesAllowed","ba","realTime","rt","feedsId","fid","routeIdentifier","rid","bgColor","datacolor","tc","a","operator","operatorUrl","u","operatorTimeZone","tz","f","publisher","publisherUrl","publisherTimeZone","tt","dateNotOperatingDays","dateAdditionalOperatingDays","operatingPeriod","dataStations","sts","notOperatingDays","additionalOperatingDays","backgroundColor","color","stations","stationId","sid","stationName","coordinates","arrivalTime","at","departureTime","dt","arrivalDate","ap","departureDate","dp","arrivalDelay","ad","departureDelay","dd","noDropOff","dot","noPickUp","put","stWheelchairAccessible","operatingInformations","translateTrajCollResponse","LineString","ID","ProductIdentifier","PublishedLineName","RouteIdentifier","directionText","DirectionText","Operator","OperatorURL","Publisher","PublisherURL","license","License","licenseUrl","LicenseUrl","licenseNote","LicenseNote","Color","journeyIdentifier","JourneyIdentifier","realtimeAvailable","RealtimeAvailable","operatorProvidesRealtime","OperatorProvidesRealtime","dayOfOperation","DayOfOperation","delay","Delay","TimeIntervals","textColor","TextColor","Cancelled","TrajservAPI","WebSocketConnector","subscriptions","connect","send","method","reqStr","channel","args","websocket","readyState","CLOSED","close","WebSocket","currentProj","setProjection","currentBbox","setBbox","subscribe","cb","errorCb","onclose","clearTimeout","reconnectTimeout","setTimeout","getRequestString","listen","message","CONNECTING","addEventListener","onMessage","JSON","parse","client_reference","onErrorCb","quiet","onMessageCb","removeEventListener","getModeSuffix","modes","SCHEMATIC","compareDepartures","b","sortByMinArrivalTime","topStates","aTop","has_fzo","state","bTop","aDuration","bDuration","min_arrival_time","cleanStopTime","content","station","arrivalTimeWithDelay","departureTimeWithDelay","TralisModes","RAW","TOPOGRAPHIC","TralisAPI","wsUrl","conn","subscribedStationUic","departureUpdateTimeout","maxDepartureAge","extraGeoms","onSuccess","onError","suffix","unsubscribe","depObject","departures","k","future","setMinutes","getMinutes","past","departureArray","platformsBoarding","previousDeparture","platform","to","abs","line","unsubscribeDepartures","departureObject","tDiff","timestamp","timediff","call_id","filterDepartures","uic","bbox","stationUpdateTimeout","unsubscribeStations","extraGeom","ref","unsubscribeTrajectory","unsubscribeDeletedVehicles","ids","promises","getFullTrajectory","all","unsubscribeFullTrajectory","log","getStopSequence","fullTrajectoryUpdateTimeout","unsubscribeStopSequence","unsubscribeHealthCheck","TrajservLayerMixin","defaultApi","regexPublishedLineName","publishedLineName","tripNumber","api","apiOptions","showVehicleTraj","delayDisplay","delayOutlineColor","useDelayStyle","requestIntervalSeconds","newPublishedLineName","updateFilters","newTripNumber","newOperator","newRegex","sortFc","startUpdateTrajectories","journeyId","stopUpdateTrajectories","abortFetchTrajectories","parameters","location","search","route","regexLine","filterList","regexLineList","some","tr","lineList","toUpperCase","routeList","item","parseInt","routeId","operatorList","op","createFilters","trajId","fetchTrajectoryStations","extraParams","intervalMs","diff","later","btime","etime","cd","nm","fl","updateTrajectories","updateInterval","fetchTrajectories","attr_det","setTrajectories","hover","selected","selectedVehicleId","radius","getRadius","radiusDelay","markerSize","margin","circleFillColor","origin","save","beginPath","restore","textAlign","textBaseline","delayText","String","fromCodePoint","rounded","getDelayText","setLineDash","textSize","newText","measureText","getTextSize","getTextColor","TrajservLayer","vectorLayer","VectorLayer","VectorSource","insertAt","removeLayer","onMapClick","onMoveEnd","highlightTrajectory","geom","Point","Feature","updateTrajectoryStations","trajStations","stationsCoords","lineGeometry","vehiculeColor","vectorSource","MultiPoint","aboveStationsFeature","Style","zIndex","image","Circle","Fill","belowStationsFeature","addFeatures","lineFeat","Stroke","addFeature","transformCoords","fetchTrajectoryById","multiLine","lineCoords","point","drawFullTrajectory","calculateExtent","getWidth","TralisLayerMixin","debug","useDynamicIconScale","refreshTimeInMs","onDeleteMessage","dfltIconScale","dfltIconHighlightScale","minIconScale","subscribeTrajectory","subscribeDeletedVehicles","res","scale","resZoom11","dynamicScale","resZoom112","resZoom12","parseFloat","toFixed","feat","transform","setGeometry","addTrajectory","getProperties","removeTrajectoryByAttribute","addOnTop","findIndex","train_id","time_intervals","trajectory","len","attributeName","removeTrajectory","TralisLayer","getResolutionForZoom","getIconScaleFromRes","hitTolerance","getFeaturesAtPixel","layerFilter","MBMap","bounds","getBounds","toArray","extent","fromLonLat","xResolution","yResolution","getHeight","getSourceCoordinates","onMapZoomEnd","onMapMouseMove","setIconScale","clientWidth","updateIconScale","pixelRatio","devicePixelRatio","lng","lat","isMoving","isRotating","isZooming","lngLat","onZoomEnd","onMove","beforeId","addSource","paint","setCoordinates","mapbox","onVisibilityChange","layout","listeners","listener","removeSource","getLayer","vehicleWithStations","southWest","northEast","mbTralisLayer","ol","olWMSLayer","olMapboxLayer","olTrajservLayer","olTralisLayer","olVectorLayer"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mobility-toolbox-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mobility-toolbox-js\"] = factory();\n\telse\n\t\troot[\"mobility-toolbox-js\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = require(\"ol/proj\");","module.exports = require(\"ol/Observable\");","module.exports = require(\"ol/extent\");","module.exports = require(\"ol/style\");","module.exports = require(\"query-string\");","module.exports = require(\"ol/format/GeoJSON\");","module.exports = require(\"ol/geom\");","module.exports = require(\"ol/layer\");","module.exports = require(\"ol/Feature\");","module.exports = require(\"ol/Object\");","module.exports = require(\"ol/layer/Layer\");","module.exports = require(\"mapbox-gl\");","module.exports = require(\"ol/source/Source\");","module.exports = require(\"ol/geom/GeometryType\");","module.exports = require(\"ol/Map\");","module.exports = require(\"ol/control\");","module.exports = require(\"ol/layer/Group\");","module.exports = require(\"uuid\");","module.exports = require(\"ol/source\");","module.exports = require(\"ol/geom/Point\");","import Observable from 'ol/Observable';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * A class representing a layer to display on map.\n *\n * @example\n * const layer = new Layer({\n *   name: 'myLayer',\n * });\n *\n * @classproperty {string} name - Name of the layer\n * @classproperty {string} key - Identifier of the layer. Must be unique.\n * @classproperty {boolean} isBaseLayer - Define if the layer is a base layer. Read-only.\n * @classproperty {boolean} isQueryable - Define if the layer can be queried. Read-only.\n * @classproperty {boolean} isReactSpatialLayer - Custom property for duck typing since `instanceof` is not working when the instance was created on different bundles. Read-only.\n * @classproperty {Layer[]} children - List of children.\n * @classproperty {String[]} copyrights - Array of copyrights.\n * @classproperty {boolean} visible - Define if the layer is visible or not.\n * @classproperty {Object} properties - Custom properties.\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map where the layer is displayed.\n */\nexport default class Layer extends Observable {\n  /**\n   * Constructor\n   *\n   * @param {Object} options\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string} [options.copyrights=undefined] Array of copyrights.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is visible on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] If true feature information can be queried by the react-spatial LayerService. Default is true.\n   */\n  constructor(options) {\n    super();\n    this.defineProperties({ isQueryable: true, ...options });\n\n    if (options.copyrights) {\n      this.copyrights = options.copyrights;\n    }\n\n    // Add click callback\n    const { onClick } = options;\n    if (onClick) {\n      this.onClick(onClick);\n    }\n  }\n\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    const {\n      name,\n      key,\n      children,\n      visible,\n      properties,\n      isBaseLayer,\n      isQueryable,\n    } = options;\n    const uid = uuid();\n    const dfltName = name || uid;\n    Object.defineProperties(this, {\n      // options is used for clone function.\n      options: {\n        value: options,\n      },\n      name: {\n        value: dfltName,\n      },\n      key: {\n        value: key || dfltName.toLowerCase(),\n      },\n      isBaseLayer: {\n        value: !!isBaseLayer,\n      },\n      isQueryable: {\n        value: !!isQueryable,\n      },\n      // Custom property for duck typing since `instanceof` is not working\n      // when the instance was created on different bundles.\n      isReactSpatialLayer: {\n        value: true,\n      },\n      children: {\n        value: children || [],\n        writable: true,\n      },\n      copyrights: {\n        get: () => {\n          return this.get('copyrights');\n        },\n        set: (newCopyrights) => {\n          const arrValue = !Array.isArray(newCopyrights)\n            ? [newCopyrights]\n            : newCopyrights;\n          return this.set('copyrights', arrValue);\n        },\n      },\n      visible: {\n        value: visible === undefined ? true : visible,\n        writable: true,\n      },\n      properties: {\n        value: { ...(properties || {}) },\n      },\n      map: {\n        writable: true,\n      },\n      /**\n       * Callback function when a user click on a vehicle.\n       */\n      clickCallbacks: {\n        value: [],\n      },\n    });\n  }\n\n  /**\n   * Initialize the layer with the map passed in parameters.\n   *\n   * @param {ol/Map~Map|mapboxgl.Map} map A map.\n   */\n  init(map) {\n    this.terminate();\n    /** @ignore */\n    this.map = map;\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  // eslint-disable-next-line class-methods-use-this\n  terminate() {}\n\n  /**\n   * Get a layer property.\n   *\n   * @param {string} name Property name.\n   * @returns {property} Property\n   */\n  get(name) {\n    return this.properties[name];\n  }\n\n  /**\n   * Set a layer property.\n   *\n   * @param {string} name Property name.\n   * @param {string} value Value.\n   */\n  set(name, value) {\n    this.properties[name] = value;\n    this.dispatchEvent({\n      type: `change:${name}`,\n      target: this,\n    });\n  }\n\n  /**\n   * Change the visibility of the layer\n   *\n   * @param {boolean} visible Defines the visibility of the layer\n   * @param {boolean} [stopPropagationDown]\n   * @param {boolean} [stopPropagationUp]\n   * @param {boolean} [stopPropagationSiblings]\n   */\n  setVisible(\n    visible,\n    stopPropagationDown = false,\n    stopPropagationUp = false,\n    stopPropagationSiblings = false,\n  ) {\n    if (visible === this.visible) {\n      return;\n    }\n\n    /** @ignore */\n    this.visible = visible;\n\n    this.dispatchEvent({\n      type: 'change:visible',\n      target: this,\n      stopPropagationDown,\n      stopPropagationUp,\n      stopPropagationSiblings,\n    });\n  }\n\n  /**\n   * Returns an array with visible child layers\n   *\n   * @returns {Layer[]} Visible children\n   */\n  getVisibleChildren() {\n    return this.children.filter((child) => child.visible);\n  }\n\n  /**\n   * Checks whether the layer has child layers with visible set to True\n   *\n   * @returns {boolean} True if the layer has visible child layers\n   */\n  hasVisibleChildren() {\n    return !!this.hasChildren(true);\n  }\n\n  /**\n   * Checks whether the layer has any child layers with visible equal to the input parameter\n   *\n   * @param {boolean} visible The state to check the childlayers against\n   * @returns {boolean} True if the layer has children with the given visibility\n   */\n  hasChildren(visible) {\n    return !!this.children.find((child) => child.visible === visible);\n  }\n\n  /**\n   * Add a child layer\n   *\n   * @param {Layer} layer Add a child layer\n   */\n  addChild(layer) {\n    this.children.unshift(layer);\n    this.dispatchEvent({\n      type: `change:children`,\n      target: this,\n    });\n  }\n\n  /**\n   * Removes a child layer by layer name\n   *\n   * @param {string} name Layer's name\n   */\n  removeChild(name) {\n    for (let i = 0; i < this.children.length; i += 1) {\n      if (this.children[i].name === name) {\n        this.children.splice(i, 1);\n        return;\n      }\n    }\n    this.dispatchEvent({\n      type: `change:children`,\n      target: this,\n    });\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * This function must be implemented by inheriting layers.\n   *\n   * @returns {Promise<{layer: Layer, features: ol/Feature~Feature[0], coordinate: null}}>} An empty response.\n   */\n  getFeatureInfoAtCoordinate() {\n    // This layer returns no feature info.\n    // The function is implemented by inheriting layers.\n    return Promise.resolve({\n      layer: this,\n      features: [],\n      coordinate: null,\n    });\n  }\n\n  /**\n   * Listens to click events on the layer.\n   * @param {function} callback Callback function, called with the clicked\n   *   features,\n   *   the layer instance and the click event.\n   */\n  onClick(callback) {\n    if (typeof callback === 'function') {\n      if (!this.clickCallbacks.includes(callback)) {\n        this.clickCallbacks.push(callback);\n      }\n    } else {\n      throw new Error('callback must be of type function.');\n    }\n  }\n\n  /**\n   * Unlistens to click events on the layer.\n   * @param {function} callback Callback function, called with the clicked\n   *   features,\n   *   the layer instance and the click event.\n   */\n  unClick(callback) {\n    if (typeof callback === 'function') {\n      const idx = this.clickCallbacks.indexOf(callback);\n      if (idx >= -1) {\n        this.clickCallbacks.splice(idx, 1);\n      }\n    }\n  }\n}\n","import { unByKey } from 'ol/Observable';\nimport Group from 'ol/layer/Group';\nimport LayerCommon from '../../common/layers/Layer';\n\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @extends {Layer}\n */\nclass Layer extends LayerCommon {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {ol/layer/Layer~Layer} options.olLayer The layer (required).\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string} [options.copyright=undefined] Copyright-Statement.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is the currently visible layer on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] If true feature information can be queried by the react-spatial LayerService. Default is true.\n   */\n  constructor(options) {\n    super(options);\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    super.defineProperties(options);\n    Object.defineProperties(this, {\n      olLayer: { value: options.olLayer, writable: true },\n      olListenersKeys: {\n        value: [],\n      },\n    });\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map || !this.olLayer) {\n      return;\n    }\n\n    this.olListenersKeys.push(\n      this.map.getLayers().on('remove', (evt) => {\n        if (evt.element === this.olLayer) {\n          this.terminate();\n        }\n      }),\n    );\n\n    // We set the copyright to the source used by the layer.\n    if (this.copyrights) {\n      const attributions = this.copyrights || [];\n      if (this.olLayer instanceof Group) {\n        this.olLayer\n          .getLayers()\n          .getArray()\n          .forEach((layer) => {\n            layer.getSource().setAttributions(attributions);\n          });\n      } else {\n        this.olLayer.getSource().setAttributions(attributions);\n      }\n    }\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  terminate() {\n    unByKey(this.olListenersKeys);\n    super.terminate();\n  }\n\n  /**\n   * Change the visibility of the layer\n   *\n   * @param {boolean} visible Defines the visibility of the layer\n   * @param {boolean} [stopPropagationDown]\n   * @param {boolean} [stopPropagationUp]\n   * @param {boolean} [stopPropagationSiblings]\n   */\n  setVisible(\n    visible,\n    stopPropagationDown = false,\n    stopPropagationUp = false,\n    stopPropagationSiblings = false,\n  ) {\n    if (visible === this.visible) {\n      return;\n    }\n\n    super.setVisible(\n      visible,\n      stopPropagationDown,\n      stopPropagationUp,\n      stopPropagationSiblings,\n    );\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Create a copy of the Layer.\n   * @param {Object} newOptions Options to override\n   * @returns {Layer} A Layer\n   */\n  clone(newOptions) {\n    return new Layer({ ...this.options, ...newOptions });\n  }\n}\nexport default Layer;\n","import BaseObject from 'ol/Object';\n\n/**\n * A class representing a control to display on map.\n *\n * @example\n * const control = new Control();\n *\n * @classproperty {ol/Map~Map|mapboxgl.Map} map - The map which the control refers to.\n * @classproperty {boolean} active - Active the control.\n * @classproperty {function} render - Render function called whenever the control needs to be rerendered.\n * @classproperty {HTMLElement} element - The HTML element used to render the control. Read only.\n * @classproperty {HTMLElement} target - The HTML element where to render the element property. Default is the map's element. Read only.\n */\nclass Control extends BaseObject {\n  /**\n   * Constructor\n   *\n   * @param {Object} [options] Control options.\n   * @param {boolean} [options.active = true] Whether the control is active or not.\n   * @param {HTMLElement} [options.element] The HTML element used to render the control.\n   * @param {HTMLElement} [options.target] The HTML element where to render the element property. Default is the map's element.\n   * @param {HTMLElement} [options.render] Render function called whenever the control needs to be rerendered.\n   */\n  constructor(options = {}) {\n    super(options);\n    this.defineProperties(options);\n\n    const { active } = {\n      active: options.active !== false,\n      ...options,\n    };\n\n    /**\n     * @ignore\n     */\n    this.active = active;\n  }\n\n  /**\n   * Define control's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    const { target, element, render } = {\n      ...options,\n    };\n\n    Object.defineProperties(this, {\n      active: {\n        get: () => {\n          return this.get('active');\n        },\n        set: (newActive) => {\n          this.set('active', newActive);\n          if (newActive) {\n            this.activate();\n          } else {\n            this.deactivate();\n          }\n          this.render();\n        },\n      },\n      map: {\n        get: () => {\n          return this.get('map');\n        },\n        set: (map) => {\n          // Remove previous node.\n          if (this.map && this.element && this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n          }\n\n          // Clean listeners\n          this.deactivate();\n\n          this.set('map', map);\n\n          if (this.map) {\n            // Add new node\n            const targett = this.target || this.map.getContainer();\n\n            if (!this.element) {\n              this.createDefaultElement();\n            }\n\n            if (this.element) {\n              targett.appendChild(this.element);\n            }\n\n            // Add listeners\n            if (this.active) {\n              this.activate();\n            }\n          }\n          this.render();\n        },\n      },\n      target: {\n        value: target,\n      },\n      element: {\n        value: element,\n        writable: true,\n      },\n      render: {\n        /**\n         * @ignore\n         */\n        value: render || this.render,\n        writable: true,\n      },\n    });\n  }\n\n  /**\n   * Add listeners then renders the control.\n   * To be defined in inherited classes.\n   */\n  activate() {\n    this.deactivate();\n  }\n\n  /**\n   * Remove listeners added by activate() function then renders the control.\n   * To be defined in inherited classes.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  deactivate() {}\n\n  /**\n   * The default render function. It renders content in the HTML element.\n   * To be defined in inherited classes.\n   */\n  render() {}\n\n  /**\n   * The default element to display if this.element is not defined.\n   * To be defined in inherited classes.\n   * @private\n   */\n  // eslint-disable-next-line class-methods-use-this\n  createDefaultElement() {}\n}\n\nexport default Control;\n","/* eslint-disable no-empty-function */\n/* eslint-disable no-useless-constructor */\n/* eslint-disable class-methods-use-this */\n// eslint-disable-next-line max-classes-per-file\nimport Control from '../controls/Control';\n\n/**\n * Map interface.\n */\nexport class MapInterface {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options Map options\n   * @param {Array<Layer>} [options.layers] Custom layers of the map.\n   * @param {Array<Control>} [options.controls] Custom controls of the map.\n   */\n  // eslint-disable-next-line no-unused-vars\n  constructor(options = {}) {}\n\n  /**\n   * Returns the HTML element of the map.\n   * @returns {HTMLElement}\n   */\n  getContainer() {}\n\n  /**\n   * Returns a list of mobility layers.\n   * @returns {Layer[]}\n   */\n  getMobilityLayers() {}\n\n  /**\n   * Returns a list of mobility controls.\n   * @returns {Control[]}\n   */\n  getMobilityControls() {}\n}\n\n/**\n * Mixin for MapInterface.\n * @ignore\n */\nconst MapMixin = (Base) =>\n  class extends Base {\n    constructor(options = {}) {\n      super({ ...options, layers: [], controls: [] });\n      this.mobilityLayers = [];\n      this.mobilityControls = [];\n\n      // Add controls\n      (options.controls || []).forEach((control) => {\n        this.addControl(control);\n      });\n\n      // Add layers\n      (options.layers || []).forEach((layer) => {\n        this.addLayer(layer);\n      });\n    }\n\n    getMobilityLayers() {\n      return this.mobilityLayers;\n    }\n\n    getMobilityControls() {\n      return this.mobilityControls;\n    }\n\n    addMobilityControl(control) {\n      this.mobilityControls.push(control);\n      // eslint-disable-next-line no-param-reassign\n      control.map = this;\n    }\n\n    removeMobilityControl(control) {\n      // eslint-disable-next-line no-param-reassign\n      control.map = null;\n      this.mobilityControls = this.mobilityControls.filter(\n        (c) => c !== control,\n      );\n    }\n\n    /** Documentation in inherited classes */\n    addControl(control, position) {\n      if (control instanceof Control) {\n        this.addMobilityControl(control);\n      } else {\n        super.addControl(control, position);\n      }\n    }\n\n    /** Documentation in inherited classes */\n    removeControl(control) {\n      if (control instanceof Control) {\n        this.removeMobilityControl(control);\n      } else {\n        super.removeControl(control);\n      }\n    }\n  };\n\nexport default MapMixin;\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\n\n/**\n * Copyright control interface.\n *\n */\nexport class CopyrightInterface {\n  /**\n   * Return an array of layer's copyright.\n   *\n   * @returns {String[]} A list of copyrights to render.\n   */\n  getCopyrights() {}\n}\n\n/**\n * Mixin for CopyrightInterface.\n *\n * @param {Class} Base  A class to extend with {CopyrightInterface} functionnalities.\n * @return {Class}  A class that implements <CopyrightInterface> class and extends Base;\n * @private\n */\nconst CopyrightMixin = (Base) =>\n  class extends Base {\n    render() {\n      if (!this.element) {\n        return;\n      }\n      this.element.innerHTML = this.active\n        ? this.getCopyrights().join(' | ')\n        : '';\n    }\n\n    createDefaultElement() {\n      this.element = document.createElement('div');\n      this.element.id = 'mbt-copyright';\n      Object.assign(this.element.style, {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        fontSize: '.8rem',\n        padding: '0 10px',\n      });\n    }\n  };\n\nexport default CopyrightMixin;\n","/**\n * This function remove duplicates lower case string value of an array.\n * It removes also null, undefined or non string values.\n *\n * @param {array} array Array of values.\n * @ignore\n */\nconst removeDuplicate = (array) => {\n  const arrWithoutEmptyValues = array.filter(\n    (val) => val !== undefined && val !== null && val.trim && val.trim(),\n  );\n  const lowerCasesValues = arrWithoutEmptyValues.map((str) =>\n    str.toLowerCase(),\n  );\n  const uniqueLowerCaseValues = [...new Set(lowerCasesValues)];\n  const uniqueValues = uniqueLowerCaseValues.map((uniqueStr) => {\n    return arrWithoutEmptyValues.find((str) => str.toLowerCase() === uniqueStr);\n  });\n  return uniqueValues;\n};\n\nexport default removeDuplicate;\n","import { inView } from 'ol/layer/Layer';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport removeDuplicate from '../../common/utils/removeDuplicate';\n\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map, CopyrightControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n *   controls: [\n *     new CopyrightControl()\n *   ]\n * });\n *\n *\n * @see <a href=\"/example/ol-copyright\">Openlayers copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\nclass CopyrightControl extends mixin(Control) {\n  constructor(options) {\n    super(options);\n    this.onPostRender = this.onPostRender.bind(this);\n  }\n\n  getCopyrights() {\n    if (!this.frameState) {\n      return [];\n    }\n    let copyrights = [];\n\n    // This code loop comes mainly from ol.\n    this.frameState.layerStatesArray.forEach((layerState) => {\n      const { layer } = layerState;\n      if (\n        inView(layerState, this.frameState.viewState) &&\n        layer &&\n        layer.getSource &&\n        layer.getSource() &&\n        layer.getSource().getAttributions()\n      ) {\n        copyrights = copyrights.concat(\n          layer.getSource().getAttributions()(this.frameState),\n        );\n      }\n    });\n    return removeDuplicate(copyrights);\n  }\n\n  activate() {\n    super.activate();\n    if (this.map) {\n      this.map.on('postrender', this.onPostRender);\n    }\n  }\n\n  deactivate() {\n    if (this.map) {\n      this.map.un('postrender', this.onPostRender);\n    }\n    super.deactivate();\n  }\n\n  onPostRender(evt) {\n    if (this.map && this.element) {\n      /**\n       * @ignore\n       */\n      this.frameState = evt.frameState;\n      this.render();\n    }\n  }\n}\n\nexport default CopyrightControl;\n","import OLMap from 'ol/Map';\nimport { defaults as defaultControls } from 'ol/control';\nimport Layer from './layers/Layer';\nimport mixin from '../common/mixins/MapMixin';\nimport CopyrightControl from './controls/CopyrightControl';\n\n/**\n * An OpenLayers map for handling mobility layers and controls.\n *\n * @example\n * import { Map } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n *   view: new View({\n *     center: [0, 0],\n *     zoom: 1,\n *  }),\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @extends {ol/Map~Map}\n */\nclass Map extends mixin(OLMap) {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options See [ol/Map~Map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html) options documentation.\n   * @param {Array<Layer|ol/layer/Layer~Layer>} [options.layers] Array of layers.\n   */\n  constructor(options = {}) {\n    super({\n      controls: [\n        ...defaultControls({ attribution: false }).getArray(),\n        new CopyrightControl(),\n      ],\n      ...options,\n    });\n  }\n\n  /**\n   * Get the HTML element containing the map.\n   *\n   * @return {HTMLElement} The HTML element of the container.\n   */\n  getContainer() {\n    return this.getTargetElement();\n  }\n\n  /**\n   * Adds a layer to the map.\n   * @param {Layer|ol/layer/Layer~Layer} layer The layer to add.\n   */\n  addLayer(layer) {\n    if (layer instanceof Layer) {\n      // layer is an mobility layer\n      layer.init(this);\n      this.mobilityLayers.push(layer);\n\n      if (layer.olLayer) {\n        super.addLayer(layer.olLayer);\n      }\n\n      this.dispatchEvent({\n        type: 'change:mobilityLayers',\n        target: this,\n      });\n    } else {\n      // layer is an OpenLayer layer\n      super.addLayer(layer);\n    }\n  }\n\n  /**\n   * Removes a given layer from the map.\n   * @param {Layer|ol/layer/Layer~Layer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    if (layer instanceof Layer) {\n      layer.terminate();\n      this.mobilityLayers = this.mobilityLayers.filter((l) => l !== layer);\n      if (layer.olLayer) {\n        super.removeLayer(layer);\n      }\n    } else {\n      // layer is an OpenLayer layer\n      super.removeLayer(layer);\n    }\n  }\n\n  /**\n   * Adds a given control to the map.\n   * @param {Control|ol/control/Control~Control} control The control to add.\n   */\n  addControl(control) {\n    super.addControl(control);\n  }\n\n  /**\n   * Removes a given control to the map.\n   * @param {Control|ol/control/Control~Control} control The control to remove.\n   */\n  removeControl(control) {\n    super.removeControl(control);\n  }\n}\n\nexport default Map;\n","import GeoJSON from 'ol/format/GeoJSON';\nimport { unByKey } from 'ol/Observable';\nimport Layer from './Layer';\n\n/**\n * Class use to display a WMS layer.\n *\n * @extends {Layer}\n */\nclass WMSLayer extends Layer {\n  /**\n   * @inheritdoc\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /** @ignore */\n    this.abortController = new AbortController();\n    /** @ignore */\n    this.format = new GeoJSON();\n  }\n\n  /**\n   * Get features infos' Url.\n   * @param {ol/coordinate~Coordinate} coord\n   * @returns {ol/layer/Layer~Layer}\n   */\n  getFeatureInfoUrl(coord) {\n    const projection = this.map.getView().getProjection();\n    const resolution = this.map.getView().getResolution();\n\n    if (this.olLayer.getSource().getFeatureInfoUrl) {\n      return this.olLayer\n        .getSource()\n        .getFeatureInfoUrl(coord, resolution, projection, {\n          info_format: 'application/json',\n          query_layers: this.olLayer.getSource().getParams().layers,\n        });\n    }\n    return false;\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate to request the information at.\n   * @returns {Promise<Object>} Promise with features, layer and coordinate\n   *  or null if no feature was hit.\n   * eslint-disable-next-line class-methods-use-this\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    this.abortController.abort();\n    this.abortController = new AbortController();\n    const { signal } = this.abortController;\n    return fetch(this.getFeatureInfoUrl(coordinate), { signal })\n      .then((resp) => resp.json())\n      .then((r) => r.features)\n      .then((data) => ({\n        layer: this,\n        coordinate,\n        features: data.map((d) => this.format.readFeature(d)),\n      }))\n      .catch(() =>\n        // resolve an empty feature array something fails\n        Promise.resolve({\n          features: [],\n          coordinate,\n          layer: this,\n        }),\n      );\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map An OpenLayers map.\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    /**\n     * ol click events key, returned by map.on('singleclick')\n     * @private\n     * @type {ol/events~EventsKey}\n     */\n    this.singleClickRef = this.map.on('singleclick', (e) => {\n      if (!this.clickCallbacks.length) {\n        return;\n      }\n\n      this.getFeatureInfoAtCoordinate(e.coordinate).then((data) =>\n        this.callClickCallbacks(data.features, data.layer, data.coordinate),\n      );\n    });\n  }\n\n  /**\n   * Call click callbacks with given parameters.\n   * This is done in a separate function for being able to modify the response.\n   * @param {Array<ol/Feature~Feature>} features\n   * @param {ol/layer/Layer~Layer} layer\n   * @param {ol/coordinate~Coordinate} coordinate\n   * @private\n   */\n  callClickCallbacks(features, layer, coordinate) {\n    this.clickCallbacks.forEach((c) => c(features, layer, coordinate));\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  terminate() {\n    super.terminate();\n    if (this.singleClickRef) {\n      unByKey(this.singleClickRef);\n    }\n  }\n\n  /**\n   * Create a copy of the WMSLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {WMSLayer} A WMSLayer\n   */\n  clone(newOptions) {\n    return new WMSLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default WMSLayer;\n","import removeDuplicate from './removeDuplicate';\n\n/**\n * Return the copyright a Mapbox map.\n * @param {mapboxgl.Map} map A Mapbox map\n * @ignore\n */\nconst getMapboxMapCopyrights = (map) => {\n  if (!map || !map.style) {\n    return [];\n  }\n  const { sourceCaches } = map.style;\n  let copyrights = [];\n  Object.values(sourceCaches).forEach((sourceCache) => {\n    if (sourceCache.used) {\n      const source = sourceCache.getSource();\n      const attribution =\n        source.attribution || (source.options && source.options.attribution);\n      if (attribution) {\n        copyrights = copyrights.concat(\n          attribution.replace(/&copy;/g, '©').split(/(<a.*?<\\/a>)/),\n        );\n      }\n    }\n  });\n\n  return removeDuplicate(copyrights);\n};\n\nexport default getMapboxMapCopyrights;\n","import qs from 'query-string';\n\n/**\n * Return the styleUrl with apiKey parameters set.\n * @param {string} apiKey apiKey value for the mapbox request.\n * @param {string} apiKeyName parameter name for apiKey in the mapbox request.\n * @param {string} styleUrl mapbox styleUrl value.\n * @ignore\n */\nconst getMapboxStyleUrl = (apiKey, apiKeyName, styleUrl) => {\n  if (apiKey === false) {\n    return styleUrl;\n  }\n  const parsedStyle = qs.parseUrl(styleUrl);\n  if (!apiKey && parsedStyle.query[apiKeyName]) {\n    return styleUrl;\n  }\n  if (!apiKey) {\n    // eslint-disable-next-line no-console\n    console.warn(`No apiKey is defined for request to ${styleUrl}`);\n    return null;\n  }\n  return qs.stringifyUrl({\n    ...parsedStyle,\n    query: {\n      ...parsedStyle.query,\n      [apiKeyName]: apiKey,\n    },\n  });\n};\n\nexport default getMapboxStyleUrl;\n","/* eslint-disable no-underscore-dangle */\nimport { toLonLat } from 'ol/proj';\nimport mapboxgl from 'mapbox-gl';\nimport Source from 'ol/source/Source';\nimport OLLayer from 'ol/layer/Layer';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Layer from './Layer';\nimport getMapboxMapCopyrights from '../../common/utils/getMapboxMapCopyrights';\nimport getMapboxStyleUrl from '../../common/utils/getMapboxStyleUrl';\n\n/**\n * A class representing Mapboxlayer to display on BasicMap\n *\n * @example\n * import { MapboxLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json',\n *   apikey: 'yourApiKey',\n * });\n *\n * @extends {Layer}\n */\nexport default class MapboxLayer extends Layer {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {boolean} [options.preserveDrawingBuffer=false] If true able to export the canvas.\n   * @param {number} [options.fadeDuration=300] Duration of the fade effect in ms.\n   */\n  constructor(options = {}) {\n    const mbLayer = new OLLayer({\n      source: new Source({}),\n      render: (frameState) => {\n        if (!this.mbMap) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Mapbox map doesn't exist.\");\n          return null;\n        }\n        let changed = false;\n        const canvas = this.mbMap.getCanvas();\n        const { viewState } = frameState;\n\n        const visible = this.olLayer.getVisible();\n        if (this.renderState.visible !== visible) {\n          canvas.style.display = visible ? 'block' : 'none';\n          this.renderState.visible = visible;\n          // Needed since mapbox-gl 1.9.0.\n          // Without you don't see others ol layers on top.\n          canvas.style.position = 'absolute';\n        }\n\n        const opacity = this.olLayer.getOpacity();\n        if (this.renderState.opacity !== opacity) {\n          canvas.style.opacity = opacity;\n          this.renderState.opacity = opacity;\n        }\n\n        // adjust view parameters in mapbox\n        const { rotation } = viewState;\n        if (this.renderState.rotation !== rotation) {\n          this.mbMap.rotateTo((-(rotation || 0) * 180) / Math.PI, {\n            animate: false,\n          });\n          changed = true;\n          this.renderState.rotation = rotation;\n        }\n\n        if (\n          this.renderState.zoom !== viewState.zoom ||\n          this.renderState.center[0] !== viewState.center[0] ||\n          this.renderState.center[1] !== viewState.center[1]\n        ) {\n          this.mbMap.jumpTo({\n            center: toLonLat(viewState.center),\n            zoom: viewState.zoom - 1,\n            animate: false,\n          });\n          changed = true;\n          this.renderState.zoom = viewState.zoom;\n          this.renderState.center = viewState.center;\n        }\n\n        const size = this.map.getSize();\n        if (\n          this.renderState.size[0] !== size[0] ||\n          this.renderState.size[1] !== size[1]\n        ) {\n          changed = true;\n          this.renderState.size = size;\n        }\n\n        // cancel the scheduled update & trigger synchronous redraw\n        // see https://github.com/mapbox/mapbox-gl-js/issues/7893#issue-408992184\n        // NOTE: THIS MIGHT BREAK WHEN UPDATING MAPBOX\n        if (\n          this.mbMap &&\n          this.mbMap.style &&\n          this.mbMap.isStyleLoaded() &&\n          changed\n        ) {\n          try {\n            if (this.mbMap._frame) {\n              this.mbMap._frame.cancel();\n              this.mbMap._frame = null;\n            }\n            this.mbMap._render();\n          } catch (err) {\n            // ignore render errors because it's probably related to\n            // a render during an update of the style.\n            // eslint-disable-next-line no-console\n            console.warn(err);\n          }\n        }\n\n        return canvas;\n      },\n    });\n\n    super({\n      ...options,\n      olLayer: mbLayer,\n    });\n\n    /**\n     * Url of the mapbox style.\n     * @type {string}\n     * @private\n     */\n    this.styleUrl = options.url;\n\n    /**\n     * Api key for the url of the mapbox style.\n     * If set to false, the apiKey is not required.\n     * @type {string}\n     * @private\n     */\n    this.apiKey = options.apiKey;\n\n    /**\n     * Name of the apiKey to set in the url request.\n     * Default is 'key'.\n     * @type {string}\n     * @private\n     */\n    this.apiKeyName = options.apiKeyName || 'key';\n\n    /**\n     * @ignores\n     */\n    this.updateAttribution = this.updateAttribution.bind(this);\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map || this.mbMap) {\n      return;\n    }\n\n    /**\n     * The feature format.\n     * @type {ol/format/GeoJSON}\n     */\n    this.format = new GeoJSON({\n      featureProjection: this.map.getView().getProjection(),\n    });\n\n    this.loadMbMap();\n\n    this.olListenersKeys.push(\n      this.map.on('change:size', () => {\n        try {\n          if (this.mbMap) {\n            this.mbMap.resize();\n          }\n        } catch (err) {\n          // ignore render errors\n          // eslint-disable-next-line no-console\n          console.warn(err);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Returns a style URL with apiKey & apiKeyName infos.\n   */\n  createStyleUrl() {\n    return getMapboxStyleUrl(this.apiKey, this.apiKeyName, this.styleUrl);\n  }\n\n  /**\n   * Create the mapbox map.\n   * @private\n   */\n  loadMbMap() {\n    this.olListenersKeys.push(\n      this.map.on('change:target', () => {\n        this.loadMbMap();\n      }),\n    );\n\n    if (!this.map.getTargetElement()) {\n      return;\n    }\n\n    if (!this.visible) {\n      // On next change of visibility we load the map\n      this.olListenersKeys.push(\n        this.once('change:visible', () => {\n          this.loadMbMap();\n        }),\n      );\n      return;\n    }\n\n    // If the map hasn't been resized, the center could be [NaN,NaN].\n    // We set default good value for the mapbox map, to avoid the app crashes.\n    let [x, y] = this.map.getView().getCenter();\n    if (!x || !y) {\n      x = 0;\n      y = 0;\n    }\n\n    const style = this.createStyleUrl();\n    try {\n      /**\n       * A mapbox map\n       * @type {mapboxgl.Map}\n       */\n      this.mbMap = new mapboxgl.Map({\n        style,\n        attributionControl: false,\n        boxZoom: false,\n        center: toLonLat([x, y]),\n        container: this.map.getTargetElement(),\n        interactive: false,\n        fadeDuration:\n          'fadeDuration' in this.options ? this.options.fadeDuration : 300,\n        // Needs to be true to able to export the canvas, but could lead to performance issue on mobile.\n        preserveDrawingBuffer: this.options.preserveDrawingBuffer || false,\n      });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed creating mapbox map: ', err);\n    }\n\n    // Options the last render run did happen. If something changes\n    // we have to render again\n    /** @ignore */\n    this.renderState = {\n      center: [x, y],\n      zoom: null,\n      rotation: null,\n      visible: null,\n      opacity: null,\n      size: [0, 0],\n    };\n\n    this.mbMap.once('load', () => {\n      /**\n       * Is the map loaded.\n       * @type {boolean}\n       */\n      this.loaded = true;\n\n      this.copyrights =\n        this.copyrights || getMapboxMapCopyrights(this.mbMap) || [];\n\n      this.olLayer.getSource().setAttributions(this.copyrights);\n\n      this.dispatchEvent({\n        type: 'load',\n        target: this,\n      });\n    });\n\n    const mapboxCanvas = this.mbMap.getCanvas();\n    if (mapboxCanvas) {\n      if (this.options.tabIndex) {\n        mapboxCanvas.setAttribute('tabindex', this.options.tabIndex);\n      } else {\n        // With a tabIndex='-1' the mouse events works but the map is not focused when we click on it\n        // so we remove completely the tabIndex attribute.\n        mapboxCanvas.removeAttribute('tabindex');\n      }\n    }\n\n    this.mbMap.on('idle', this.updateAttribution);\n  }\n\n  updateAttribution(evt) {\n    const newAttributions =\n      this.copyrights || getMapboxMapCopyrights(evt.target) || [];\n    if (this.copyrights.toString() !== newAttributions.toString()) {\n      this.olLayer.getSource().setAttributions(newAttributions);\n    }\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n   * @param {Object} options A [mapboxgl.Map#queryrenderedfeatures](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#queryrenderedfeatures) options parameter.\n   * @returns {Promise<Object>} Promise with features, layer and coordinate\n   *  or null if no feature was hit. The original Mapbox feature is available as a property named 'mapboxFeature'.\n   */\n  getFeatureInfoAtCoordinate(coordinate, options) {\n    // Ignore the getFeatureInfo until the mapbox map is loaded\n    if (\n      !options ||\n      !this.format ||\n      !this.mbMap ||\n      !this.mbMap.isStyleLoaded()\n    ) {\n      return Promise.resolve({ coordinate, features: [], layer: this });\n    }\n\n    const pixel = coordinate && this.mbMap.project(toLonLat(coordinate));\n    // At this point we get GeoJSON Mapbox feature, we transform it to an OpenLayers\n    // feature to be consistent with other layers.\n    const features = this.mbMap\n      .queryRenderedFeatures(pixel, options)\n      .map((feature) => {\n        const olFeature = this.format.readFeature(feature);\n        if (olFeature) {\n          // We save the original mapbox feature to avoid losing informations\n          // potentially needed for other functionnality like highlighting\n          // (id, layer id, source, sourceLayer ...)\n          olFeature.set('mapboxFeature', feature);\n        }\n        return olFeature;\n      });\n\n    return Promise.resolve({\n      layer: this,\n      features,\n      coordinate,\n    });\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  terminate() {\n    if (this.mbMap) {\n      this.mbMap.off('idle', this.updateAttribution);\n      // Some asynchrone repaints are triggered even if the mbMap has been removed,\n      // to avoid display of errors we set an empty function.\n      this.mbMap.triggerRepaint = () => {};\n      this.mbMap.remove();\n      this.mbMap = null;\n    }\n    this.loaded = false;\n    super.terminate();\n  }\n\n  /**\n   * Create a copy of the MapboxLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {MapboxLayer} A MapboxLayer\n   */\n  clone(newOptions) {\n    return new MapboxLayer({ ...this.options, ...newOptions });\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport Layer from './Layer';\n\n/**\n * Apply visibility to style layers that fits the filter function.\n * @private\n */\nconst applyLayoutVisibility = (mbMap, visible, filterFunc) => {\n  if (!mbMap) {\n    return;\n  }\n\n  const style = mbMap.getStyle();\n\n  if (!style) {\n    return;\n  }\n\n  if (filterFunc) {\n    const visibilityValue = visible ? 'visible' : 'none';\n    for (let i = 0; i < style.layers.length; i += 1) {\n      const styleLayer = style.layers[i];\n      if (filterFunc(styleLayer)) {\n        if (mbMap.getLayer(styleLayer.id)) {\n          mbMap.setLayoutProperty(styleLayer.id, 'visibility', visibilityValue);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Layer for visualizing a specific set of layer from a MapboxLayer.\n *\n * @example\n * import { MapboxLayer, MapboxStyleLayer } from 'mobility-toolbox-js/ol';\n *\n * const mapboxLayer = new MapboxLayer({\n *   url: 'https://maps.geops.io/styles/travic_v2/style.json?key=[yourApiKey]',\n * });\n *\n * const layer = new MapboxStyleLayer({\n *   mapboxLayer: mapboxLayer,\n *   styleLayersFilter: () => {},\n * });\n *\n * @extends {Layer}\n */\nclass MapboxStyleLayer extends Layer {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {MapboxLayer} [options.mapboxLayer] The MapboxLayer to use.\n   * @param {Function} [options.styleLayersFilter] Filter function to decide which style layer to display.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /**\n     * MapboxLayer provided for the style Layer.\n     * @type {MapboxLayer}\n     * @private\n     */\n    this.mapboxLayer = options.mapboxLayer;\n\n    /**\n     * Function to filter features to be displayed.\n     * @type {function}\n     * @private\n     */\n    this.styleLayersFilter = options.styleLayersFilter;\n\n    /**\n     * Mapbox style layer id where to add the style layers.\n     * See [mapbox.map.addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.\n     * @type {String}\n     * @private\n     */\n    this.beforeId = options.beforeId;\n\n    /**\n     * Function to filter features for getFeatureInfoAtCoordinate method.\n     * @type {function}\n     * @private\n     */\n    this.featureInfoFilter = options.featureInfoFilter || ((obj) => obj);\n\n    /**\n     * Function to query the rendered features.\n     * @type {function}\n     * @private\n     */\n    this.queryRenderedLayersFilter = options.queryRenderedLayersFilter;\n\n    /**\n     * Array of features to highlight.\n     * @type {Array<ol/Feature~Feature>}\n     * @private\n     */\n    this.highlightedFeatures = [];\n\n    /**\n     * Array of selected features.\n     * @type {Array<ol/Feature~Feature>}\n     * @private\n     */\n    this.selectedFeatures = [];\n\n    /**\n     * Array of mapbox style layers to add.\n     * @type {Array<mapboxgl.styleLayer>}\n     * @private\n     */\n    this.styleLayers =\n      (options.styleLayer ? [options.styleLayer] : options.styleLayers) || [];\n\n    /**\n     * @private\n     */\n    this.addStyleLayers = this.addStyleLayers.bind(this);\n\n    /**\n     * @private\n     */\n    this.onLoad = this.onLoad.bind(this);\n    if (options.filters) {\n      /** @private */\n      this.addDynamicFilters = () => {\n        this.setFilter(\n          typeof options.filters === 'function'\n            ? options.filters(this)\n            : options.filters,\n        );\n      };\n    }\n\n    if (!this.styleLayersFilter && this.styleLayers) {\n      const ids = this.styleLayers.map((s) => s.id);\n      this.styleLayersFilter = (styleLayer) => {\n        return ids.includes(styleLayer.id);\n      };\n    }\n  }\n\n  /**\n   * Initialize the layer.\n   * @param {mapboxgl.Map} map the mapbox map.\n   * @override\n   */\n  init(map) {\n    if (!this.mapboxLayer.map) {\n      this.mapboxLayer.init(map);\n      /**\n       * An OpenLayers Layer.\n       * @type {ol/layer/Layer~Layer}\n       * @private\n       */\n      this.olLayer = this.mapboxLayer.olLayer;\n    }\n    super.init(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    // Apply the initial visibiltity.\n    const { mbMap } = this.mapboxLayer;\n    if (!mbMap) {\n      // If the mbMap is not yet created because the  map has no target yet, we\n      // relaunch the initialisation when it's the case.\n      this.olListenersKeys.push(\n        this.map.on('change:target', () => {\n          this.init(map);\n        }),\n      );\n\n      return;\n    }\n\n    // mbMap.loaded() and mbMap.isStyleLoaded() are reliable only on the first call of init.\n    // On the next call (when a topic change for example), these functions returns false because\n    // the style is being modified.\n    // That's why we rely on a property instead for the next calls.\n    if (this.mapboxLayer.loaded || mbMap.isStyleLoaded() || mbMap.loaded()) {\n      this.onLoad();\n    } else {\n      mbMap.once('load', this.onLoad);\n    }\n\n    // Apply the visibiltity when layer's visibility change.\n    this.olListenersKeys.push(\n      this.on('change:visible', ({ target: layer }) => {\n        // Once the map is loaded we can apply vsiiblity without waiting\n        // the style. Mapbox take care of the application of style changes.\n        applyLayoutVisibility(mbMap, layer.visible, this.styleLayersFilter);\n      }),\n    );\n\n    this.olListenersKeys.push(\n      this.mapboxLayer.on('load', () => {\n        this.onLoad();\n      }),\n    );\n\n    // Listen to click events\n    this.olListenersKeys.push(\n      this.map.on('singleclick', (e) => {\n        if (!this.clickCallbacks.length) {\n          return;\n        }\n\n        this.getFeatureInfoAtCoordinate(e.coordinate)\n          .then((d) =>\n            this.callClickCallbacks(d.features, d.layer, d.coordinate),\n          )\n          .catch(() => this.callClickCallbacks([], this, e.coordinate));\n      }),\n    );\n  }\n\n  /**\n   * Call click callbacks with given parameters.\n   * This is done in a separate function for being able to modify the response.\n   * @param {Array<ol/Feature~Feature>} features\n   * @param {ol/layer/Layer~Layer} layer\n   * @param {ol/coordinate~Coordinate} coordinate\n   * @private\n   */\n  callClickCallbacks(features, layer, coordinate) {\n    this.clickCallbacks.forEach((c) => c(features, layer, coordinate));\n  }\n\n  /**\n   * Terminate the layer.\n   * @param {mapboxgl.Map} map the mapbox map.\n   * @override\n   */\n  terminate(map) {\n    const { mbMap } = this.mapboxLayer;\n    if (mbMap) {\n      mbMap.off('load', this.onLoad);\n      this.removeStyleLayers();\n    }\n    super.terminate(map);\n  }\n\n  /** @ignore */\n  addStyleLayers() {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach((styleLayer) => {\n      const { id, source } = styleLayer;\n      if (mbMap.getSource(source) && !mbMap.getLayer(id)) {\n        mbMap.addLayer(styleLayer, this.beforeId);\n      }\n    });\n    applyLayoutVisibility(mbMap, this.visible, this.styleLayersFilter);\n  }\n\n  /** @ignore */\n  removeStyleLayers() {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach((styleLayer) => {\n      if (mbMap.getLayer(styleLayer.id)) {\n        mbMap.removeLayer(styleLayer.id);\n      }\n    });\n  }\n\n  /**\n   * On Mapbox map load callback function. Add style layers and dynaimc filters.\n   * @ignore\n   */\n  onLoad() {\n    this.addStyleLayers();\n\n    if (this.addDynamicFilters) {\n      this.addDynamicFilters();\n    }\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate Coordinate to request the information at.\n   * @returns {Promise<Object>} Promise with features, layer and coordinate\n   *  or null if no feature was hit.\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    const { mbMap } = this.mapboxLayer;\n\n    // Ignore the getFeatureInfo until the mapbox map is loaded\n    if (!mbMap || !mbMap.isStyleLoaded()) {\n      return Promise.resolve({ coordinate, features: [], layer: this });\n    }\n\n    // We query features only on style layers used by this layer.\n    let layers = this.styleLayers || [];\n\n    if (this.styleLayersFilter) {\n      layers = mbMap.getStyle().layers.filter(this.styleLayersFilter);\n    }\n\n    if (this.queryRenderedLayersFilter) {\n      layers = mbMap.getStyle().layers.filter(this.queryRenderedLayersFilter);\n    }\n\n    return this.mapboxLayer\n      .getFeatureInfoAtCoordinate(coordinate, {\n        layers: layers.map((layer) => layer && layer.id),\n        validate: false,\n      })\n      .then((featureInfo) => {\n        const features = featureInfo.features.filter((feature) => {\n          return this.featureInfoFilter(\n            feature,\n            this.map.getView().getResolution(),\n          );\n        });\n        this.highlight(features);\n        return { ...featureInfo, features, layer: this };\n      });\n  }\n\n  /**\n   * Set filter that determines which features should be rendered in a style layer.\n   * @param {mapboxgl.filter} filter Determines which features should be rendered in a style layer.\n   */\n  setFilter(filter) {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    this.styleLayers.forEach(({ id }) => {\n      if (mbMap.getLayer(id)) {\n        mbMap.setFilter(id, filter);\n      }\n    });\n  }\n\n  /**\n   * Set if features are hovered or not.\n   * @param {Array<ol/Feature~Feature>} features\n   * @param {boolean} state Is the feature hovered\n   * @private\n   */\n  setHoverState(features = [], state) {\n    const { mbMap } = this.mapboxLayer;\n\n    if (!mbMap) {\n      return;\n    }\n\n    features.forEach((feature) => {\n      const { source, sourceLayer } = feature.get('mapboxFeature') || {};\n      if ((!source && !sourceLayer) || !feature.getId()) {\n        if (!feature.getId()) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            \"No feature's id found. To use the feature state functionnality, tiles must be generated with --generate-ids. See https://github.com/mapbox/tippecanoe#adding-calculated-attributes.\",\n            feature.getId(),\n            feature.getProperties(),\n          );\n        }\n        return;\n      }\n\n      mbMap.setFeatureState(\n        {\n          id: feature.getId(),\n          source,\n          sourceLayer,\n        },\n        { hover: state },\n      );\n    });\n  }\n\n  /**\n   * Select a list of features.\n   * @param {Array<ol/Feature~Feature>} [features=[]] Features to select.\n   * @private\n   */\n  select(features = []) {\n    this.setHoverState(this.selectedFeatures, false);\n    this.selectedFeatures = features;\n    this.setHoverState(this.selectedFeatures, true);\n  }\n\n  /**\n   * Highlight a list of features.\n   * @param {Array<ol/Feature~Feature>} [features=[]] Features to highlight.\n   * @private\n   */\n  highlight(features = []) {\n    // Filter out selected features\n    const filtered = this.highlightedFeatures.filter((feature) => {\n      return !this.selectedFeatures\n        .map((feat) => feat.getId())\n        .includes(feature.getId());\n    });\n\n    // Remove previous highlight\n    this.setHoverState(filtered, false);\n    this.highlightedFeatures = features;\n\n    // Add highlight\n    this.setHoverState(this.highlightedFeatures, true);\n  }\n\n  /**\n   * Create a copy of the MapboxStyleLayer.\n   * @param {Object} newOptions Options to override.\n   * @returns {MapboxStyleLayer} A MapboxStyleLayer.\n   */\n  clone(newOptions) {\n    return new MapboxStyleLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default MapboxStyleLayer;\n","import { unByKey } from 'ol/Observable';\nimport GeomType from 'ol/geom/GeometryType';\n\n/**\n * Tracker. This class draw trajectories on a canvas.\n * @class\n * @param {Object} options\n * @private\n */\nexport default class Tracker {\n  /**\n   * @private\n   */\n  constructor(options) {\n    const opts = {\n      interpolate: true,\n      ...options,\n    };\n\n    /**\n     * Array of trajectories.\n     * @type {Array<trajectory>}\n     */\n    this.trajectories = [];\n\n    /**\n     * Array of trajectories that are currently drawn.\n     * @type {Array<key>}\n     */\n    this.renderedTrajectories = [];\n\n    /**\n     * Array of ol events key, returned by on() or once().\n     * @type {Array<key>}\n     */\n    this.interpolate = !!opts.interpolate;\n\n    /**\n     * Function to Convert coordinate to canvas pixel.\n     * @type {function}\n     */\n    this.getPixelFromCoordinate = opts.getPixelFromCoordinate;\n\n    /**\n     * Id of the trajectory which is hovered.\n     * @type {string}\n     */\n    this.hoverVehicleId = null;\n\n    /**\n     * Scale the vehicle icons with this value.\n     * @param {number}\n     */\n    this.iconScale = opts.iconScale;\n\n    // we draw directly on the canvas since openlayers is too slow.\n    /**\n     * HTML <canvas> element.\n     * @type {Canvas}\n     */\n    this.canvas = opts.canvas || document.createElement('canvas');\n    this.canvas.width = opts.width;\n    this.canvas.height = opts.height;\n    this.canvas.setAttribute(\n      'style',\n      [\n        'position: absolute',\n        'top: 0',\n        'bottom: 0',\n        'right: 0',\n        'left: 0',\n        'pointer-events: none',\n        'visibility: visible',\n        'margin-top: inherit', // for scrolling behavior.\n      ].join(';'),\n    );\n    /**\n     * 2d drawing context on the canvas.\n     * @type {CanvasRenderingContext2D}\n     */\n    this.canvasContext = this.canvas.getContext('2d');\n  }\n\n  /**\n   * Set visibility of the canvas.\n   * @param {boolean} visible The visibility of the layer\n   */\n  setVisible(visible) {\n    if (this.canvas) {\n      this.canvas.style.visibility = visible ? 'visible' : 'hidden';\n    }\n  }\n\n  /**\n   * Define the trajectories.\n   * @param {array<ol/Feature~Feature>} trajectories\n   */\n  setTrajectories(trajectories = []) {\n    if (this.sort) {\n      trajectories.sort(this.sort);\n    }\n\n    this.trajectories = trajectories;\n  }\n\n  /**\n   * Return the trajectories.\n   * @returns {array<trajectory>} trajectories\n   */\n  getTrajectories() {\n    return this.trajectories || [];\n  }\n\n  /**\n   * Return rendered trajectories.\n   * Use this to avoid race conditions while rendering.\n   * @returns {array<trajectory>} trajectories\n   */\n  getRenderedTrajectories() {\n    return this.renderedTrajectories;\n  }\n\n  /**\n   * Clear the canvas.\n   * @private\n   */\n  clear() {\n    if (this.canvasContext) {\n      this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }\n\n  /**\n   * Set the filter for tracker features.\n   * @param {function} filter Filter function.\n   */\n  setFilter(filter) {\n    /**\n     * Current filter function.\n     * @type {function}\n     */\n    this.filter = filter;\n  }\n\n  /**\n   * Set the sort for tracker features.\n   * @param {function} sort Sort function.\n   */\n  setSort(sort) {\n    /**\n     * The sort function for tracker features.\n     * @type {function}\n     */\n    this.sort = sort;\n  }\n\n  /**\n   * Set the id of the trajectory which is hovered.\n   * @param {string} id Id of a vehicle.\n   * @private\n   */\n  setHoverVehicleId(id) {\n    if (id !== this.hoverVehicleId) {\n      this.hoverVehicleId = id;\n    }\n  }\n\n  /**\n   * set the scale of the vehicle icons.\n   * @param {number} iconScale Scale value.\n   */\n  setIconScale(iconScale) {\n    this.iconScale = iconScale;\n  }\n\n  /**\n   * Set the tracker style.\n   * @param {function} s OpenLayers style function.\n   */\n  setStyle(s) {\n    /**\n     * Style function.\n     * @type {function}\n     */\n    this.style = s;\n  }\n\n  /**\n   * Draw all the trajectories available to the canvas.\n   * @param {Date} currTime The date to render.\n   * @param {number[2]} size Size ([width, height]) of the canvas to render.\n   * @param {number} resolution Which resolution of the map to render.\n   * @private\n   */\n  renderTrajectories(currTime = Date.now(), size = [], resolution) {\n    this.clear();\n    const [width, height] = size;\n    if (\n      width &&\n      height &&\n      (this.canvas.width !== width || this.canvas.height !== height)\n    ) {\n      [this.canvas.width, this.canvas.height] = [width, height];\n    }\n    /**\n     * Current resolution.\n     * @type {number}\n     */\n    this.currResolution = resolution || this.currResolution;\n    let hoverVehicleImg;\n    let hoverVehiclePx;\n    let hoverVehicleWidth;\n    let hoverVehicleHeight;\n\n    for (let i = (this.trajectories || []).length - 1; i >= 0; i -= 1) {\n      const traj = this.trajectories[i];\n\n      // We simplify the traj object\n      const { geometry, timeIntervals, timeOffset } = traj;\n\n      if (this.filter && !this.filter(traj)) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      let coord = null;\n      let rotation;\n\n      if (timeIntervals && timeIntervals.length > 1) {\n        const now = currTime - (timeOffset || 0);\n        let start;\n        let end;\n        let startFrac;\n        let endFrac;\n        let timeFrac;\n\n        // Search th time interval.\n        for (let j = 0; j < timeIntervals.length - 1; j += 1) {\n          // Rotation only available in tralis layer.\n          [start, startFrac, rotation] = timeIntervals[j];\n          [end, endFrac] = timeIntervals[j + 1];\n\n          if (start <= now && now <= end) {\n            break;\n          } else {\n            start = null;\n            end = null;\n          }\n        }\n        // The geometry can also be a Point\n        if (geometry.getType() === GeomType.POINT) {\n          coord = geometry.getCoordinate();\n        } else if (geometry.getType() === GeomType.LINE_STRING) {\n          if (start && end) {\n            // interpolate position inside the time interval.\n            timeFrac = this.interpolate\n              ? Math.min((now - start) / (end - start), 1)\n              : 0;\n\n            const geomFrac = this.interpolate\n              ? timeFrac * (endFrac - startFrac) + startFrac\n              : 0;\n\n            coord = geometry.getCoordinateAt(geomFrac);\n\n            // We set the rotation and the timeFraction of the trajectory (used by tralis).\n            this.trajectories[i].rotation = rotation;\n            this.trajectories[i].endFraction = timeFrac;\n\n            // It happens that the now date was some ms before the first timeIntervals we have.\n          } else if (now < timeIntervals[0][0]) {\n            [[, , rotation]] = timeIntervals;\n            timeFrac = 0;\n            coord = geometry.getFirstCoordinate();\n          } else if (now > timeIntervals[timeIntervals.length - 1][0]) {\n            [, , rotation] = timeIntervals[timeIntervals.length - 1];\n            timeFrac = 1;\n            coord = geometry.getLastCoordinate();\n          }\n        } else {\n          // eslint-disable-next-line no-console\n          console.error(\n            'This geometry type is not supported. Only Point or LineString are. Current geometry: ',\n            geometry,\n          );\n        }\n\n        // We set the rotation and the timeFraction of the trajectory (used by tralis).\n        // if rotation === null that seems there is no rotation available.\n        this.trajectories[i].rotation = rotation;\n        this.trajectories[i].endFraction = timeFrac || 0;\n      }\n\n      if (coord) {\n        // We set the rotation of the trajectory (used by tralis).\n        this.trajectories[i].coordinate = coord;\n        const px = this.getPixelFromCoordinate(coord);\n\n        if (!px) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        // Trajectory with pixel (i.e. within map extent) will be in renderedTrajectories.\n        this.trajectories[i].rendered = true;\n\n        const vehicleImg = this.style(traj, this.currResolution);\n        let imgWidth = vehicleImg.width;\n        let imgHeight = vehicleImg.height;\n\n        if (this.iconScale) {\n          imgHeight = Math.floor(imgHeight * this.iconScale);\n          imgWidth = Math.floor(imgWidth * this.iconScale);\n        }\n\n        if (this.hoverVehicleId !== traj.id) {\n          this.canvasContext.drawImage(\n            vehicleImg,\n            px[0] - imgWidth / 2,\n            px[1] - imgHeight / 2,\n            imgWidth,\n            imgHeight,\n          );\n        } else {\n          // Store the canvas to draw it at the end\n          hoverVehicleImg = vehicleImg;\n          hoverVehiclePx = px;\n          hoverVehicleWidth = imgWidth;\n          hoverVehicleHeight = imgHeight;\n        }\n      }\n    }\n    if (hoverVehicleImg) {\n      this.canvasContext.drawImage(\n        hoverVehicleImg,\n        hoverVehiclePx[0] - hoverVehicleWidth / 2,\n        hoverVehiclePx[1] - hoverVehicleHeight / 2,\n        hoverVehicleWidth,\n        hoverVehicleHeight,\n      );\n    }\n\n    this.renderedTrajectories = this.trajectories.filter((t) => t.rendered);\n  }\n\n  /**\n   * Clean the canvas and the events the tracker.\n   * @private\n   */\n  destroy() {\n    unByKey(this.olEventsKeys);\n    this.renderedTrajectories = [];\n    this.clear();\n  }\n}\n","const trackerRadiusMapping = {\n  0: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  1: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  2: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 9, 12.5, 14, 15, 15, 15, 15],\n  3: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n  4: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  5: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  6: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  7: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  8: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n  9: [5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 9, 12.5, 14, 15, 15, 15, 15],\n};\n\n/**\n * @ignore\n */\nexport const types = [\n  'Tram',\n  'Subway / Metro / S-Bahn',\n  'Train',\n  'Bus',\n  'Ferry',\n  'Cable Car',\n  'Gondola',\n  'Funicular',\n  'Long distance bus',\n  'Rail', // New endpoint use Rail instead of Train.\n];\n\n/**\n * @ignore\n */\nexport const bgColors = [\n  '#ffb400',\n  '#ff5400',\n  '#ff8080',\n  '#ea0000',\n  '#3000ff',\n  '#ffb400',\n  '#41a27b',\n  '#00d237',\n  '#b5b5b5',\n  '#ff8080',\n];\n\n/**\n * @ignore\n */\nexport const textColors = [\n  '#000000',\n  '#ffffff',\n  '#000000',\n  '#ffffff',\n  '#ffffff',\n  '#000000',\n  '#ffffff',\n  '#000000',\n  '#000000',\n  '#000000',\n];\n\n/**\n * @ignore\n */\nexport const timeSteps = [\n  100000,\n  50000,\n  40000,\n  30000,\n  20000,\n  15000,\n  10000,\n  5000,\n  2000,\n  1000,\n  400,\n  300,\n  250,\n  180,\n  90,\n  60,\n  50,\n  50,\n  50,\n  50,\n  50,\n];\n\n/**\n * @ignore\n */\nconst getTypeIndex = (type) => {\n  if (typeof type === 'string') {\n    const matched = types.find((t) => new RegExp(type).test(t));\n    return types.indexOf(matched);\n  }\n  return type;\n};\n\n/**\n * @ignore\n */\nexport const getRadius = (type = 0, zoom) => {\n  try {\n    const typeIdx = getTypeIndex(type);\n    return trackerRadiusMapping[typeIdx][zoom];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getBgColor = (type = 0) => {\n  try {\n    const typeIdx = getTypeIndex(type);\n    return bgColors[typeIdx];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getTextColor = (type = 0) => {\n  try {\n    const typeIdx = getTypeIndex(type);\n    return textColors[typeIdx];\n  } catch (e) {\n    return 1;\n  }\n};\n\n/**\n * @ignore\n */\nexport const getTextSize = (ctx, markerSize, text, fontSize) => {\n  ctx.font = `bold ${fontSize}px Arial`;\n  let newText = ctx.measureText(text);\n\n  const maxiter = 25;\n  let i = 0;\n\n  while (newText.width > markerSize - 6 && i < maxiter) {\n    // eslint-disable-next-line no-param-reassign\n    fontSize -= 0.5;\n    ctx.font = `bold ${fontSize}px arial, sans-serif`;\n    newText = ctx.measureText(text);\n    i += 1;\n  }\n  return fontSize;\n};\n\n/**\n * @ignore\n * @param {number} delayInMs Delay in milliseconds.\n * @param {boolean} cancelled true if the journey is cancelled.\n * @param {boolean} isDelayText true if the color is used for delay text of the symbol.\n */\nexport const getDelayColor = (delayInMs, cancelled, isDelayText) => {\n  if (cancelled) {\n    return isDelayText ? '#ff0000' : '#a0a0a0'; // red or gray\n  }\n  if (delayInMs >= 3600000) {\n    return '#ed004c'; // pink { r: 237, g: 0, b: 76, s: '237,0,76' };\n  }\n  if (delayInMs >= 500000) {\n    return '#e80000'; // red { r: 232, g: 0, b: 0, s: '232,0,0' };\n  }\n  if (delayInMs >= 300000) {\n    return '#ff4a00'; // orange { r: 255, g: 74, b: 0, s: '255,74,0' };\n  }\n  if (delayInMs >= 180000) {\n    return '#f7bf00'; // yellow { r: 247, g: 191, b: 0, s: '247,191,0' };\n  }\n  if (delayInMs === null) {\n    return '#a0a0a0'; // grey { r: 160, g: 160, b: 160, s: '160,160,160' };\n  }\n  return '#00a00c'; // green { r: 0, g: 160, b: 12, s: '0,160,12' };\n};\n\n/**\n * @ignore\n */\nexport const getDelayText = (delayInMs, cancelled) => {\n  if (cancelled) {\n    return String.fromCodePoint(0x00d7);\n  }\n  if (delayInMs > 3600000) {\n    const rounded = Math.round(delayInMs / 3600000);\n    return `+${rounded}h`;\n  }\n\n  if (delayInMs > 59000) {\n    const rounded = Math.round(delayInMs / 60000);\n    return `+${rounded}m`;\n  }\n\n  if (delayInMs > 0) {\n    return `+${delayInMs}s`;\n  }\n\n  return '';\n};\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport { buffer, containsCoordinate } from 'ol/extent';\nimport { unByKey } from 'ol/Observable';\nimport Tracker from '../Tracker';\nimport { timeSteps } from '../trackerConfig';\n\n/**\n * TrackerLayerInterface.\n *\n * @classproperty {boolean} isTrackerLayer - Property for duck typing since `instanceof` is not working when the instance was created on different bundles.\n * @classproperty {boolean} isHoverActive - Activate/deactivate pointer hover effect.\n * @classproperty {function} style - Style of the vehicle.\n * @classproperty {FilterFunction} filter - Time speed.\n * @classproperty {function} sort - Set the filter for tracker features.\n */\nexport class TrackerLayerInterface {\n  /**\n   * Initalize the Tracker.\n   * @param {ol/Map~Map} map\n   * @param {Object} options\n   * @param {number} [options.width] Canvas's width.\n   * @param {number} [options.height] Canvas's height.\n   * @param {function} [options.getPixelFromCoordinate] Convert an EPSG:3857 coordinate to a canvas pixel (origin top-left).\n   */\n  // eslint-disable-next-line no-unused-vars\n  init(map, options) {}\n\n  /**\n   * Destroy the Tracker.\n   */\n  terminate() {}\n\n  /**\n   * Start the clock.\n   *\n   * @param {Array<number>} size Map's size: [width, height].\n   * @param {number} zoom Map's zoom level.\n   * @param {number} resolution Map's resolution.\n   */\n  // eslint-disable-next-line no-unused-vars\n  start(size, zoom, resolution) {}\n\n  /**\n   * Stop the time.\n   * @private\n   * @param {number} zoom\n   */\n  // eslint-disable-next-line no-unused-vars\n  startUpdateTime(zoom) {}\n\n  /**\n   * Stop the clock.\n   */\n  stop() {}\n\n  /**\n   * Set the current time, it triggers a rendering of the trajectories.\n   *\n   * @param {Date} time The date to render.\n   * @param {number[2]} size Size of the canvas to render.\n   * @param {number} resolution Map's resolution to render.\n   */\n  // eslint-disable-next-line no-unused-vars\n  setCurrTime(time, size, resolution) {}\n\n  /**\n   * Get vehicle.\n   * @param {function} filterFc A function use to filter results.\n   */\n  // eslint-disable-next-line no-unused-vars\n  getVehicle(filterFc) {}\n\n  /**\n   * Returns the vehicle which are at the given coordinates.\n   * Returns null when no vehicle is located at the given coordinates.\n   *\n   * @param {number[2]} coordinate A coordinate ([x,y]).\n   * @param {number=1} resolution The resolution of the map.\n   * @returns {Object[]} A list of vehicles.\n   */\n  // eslint-disable-next-line no-unused-vars\n  getVehiclesAtCoordinate(coordinate, resolution = 1) {}\n\n  /**\n   * Get the duration before the next update depending on zoom level.\n   * @private\n   * @param {number} zoom\n   */\n  // eslint-disable-next-line no-unused-vars\n  getRefreshTimeInMs(zoom) {}\n\n  /**\n   * Define a default style of the vehicle.s\n   * Draw a blue circle with the id of the props parameter.\n   *\n   * @param {Object} props Properties\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars\n  defaultStyle(props) {}\n}\n\n/**\n * Mixin for TrackeLayerInterface.\n *\n * @param {Class} Base  A class to extend with {TrackerLayerInterface} functionnalities.\n * @return {Class}  A class that implements <TrackerLayerInterface> class and extends Base;\n * @private\n */\nconst TrackerLayerMixin = (Base) =>\n  class extends Base {\n    /**\n     * Define layer's properties.\n     *\n     * @ignore\n     */\n    defineProperties(options) {\n      const { isHoverActive, style, speed } = {\n        isHoverActive: true,\n        ...options,\n      };\n      let cuurSpeed = speed || 1;\n      super.defineProperties(options);\n      Object.defineProperties(this, {\n        isTrackerLayer: { value: true },\n        isHoverActive: {\n          value: !!isHoverActive,\n          writable: true,\n        },\n        style: {\n          value: style || this.defaultStyle,\n        },\n        speed: {\n          get: () => cuurSpeed,\n          set: (newSpeed) => {\n            cuurSpeed = newSpeed;\n            this.start();\n          },\n        },\n        filter: {\n          get: () => this.tracker.filter,\n          set: (filter) => {\n            if (this.tracker) {\n              this.tracker.setFilter(filter);\n            }\n          },\n        },\n        sort: {\n          get: () => this.tracker.sort,\n          set: (sort) => {\n            if (this.sort) {\n              this.tracker.setSort(sort);\n            }\n          },\n        },\n\n        /**\n         * The tracker that renders the trajectories.\n         */\n        tracker: { value: null, writable: true },\n\n        /**\n         * Canvas cache object for trajectories drawn.\n         */\n        styleCache: { value: {} },\n\n        /**\n         * Time used to display the trajectories.\n         */\n        currTime: {\n          value: new Date(),\n          writable: true,\n        },\n\n        /**\n         * Keep track of the last time used to render trajectories.\n         * Useful when the speed increase.\n         */\n        lastUpdateTime: {\n          value: new Date(),\n          writable: true,\n        },\n\n        /**\n         * Keep track of which trajectories are currently drawn.\n         */\n        renderedTrajectories: {\n          get: () => this.tracker.renderedTrajectories,\n        },\n      });\n    }\n\n    /**\n     * Initalize the Tracker.\n     * @param {ol/Map~Map} map\n     * @param {Object} options\n     * @param {Number} [options.width] Canvas's width.\n     * @param {Number} [options.height] Canvas's height.\n     * @param {function} [options.getPixelFromCoordinate] Convert an EPSG:3857 coordinate to a canvas pixel (origin top-left).\n     */\n    init(map, options) {\n      super.init(map);\n      this.tracker = new Tracker(options);\n      this.tracker.setStyle((props, r) => this.style(props, r));\n\n      if (this.visible) {\n        this.start();\n      }\n\n      this.visibilityRef = this.on('change:visible', (evt) => {\n        if (evt.target.visible) {\n          this.start();\n        } else {\n          this.stop();\n        }\n      });\n    }\n\n    /**\n     * Destroy the Tracker.\n     */\n    terminate() {\n      this.stop();\n      unByKey(this.visibilityRef);\n      if (this.tracker) {\n        this.tracker.destroy();\n        this.tracker = null;\n      }\n      super.terminate();\n    }\n\n    /**\n     * Start the clock.\n     *\n     * @param {Array<Number>} size Map's size: [width, height].\n     * @param {Number} zoom Map's zoom level.\n     * @param {Number} resolution Map's resolution.\n     */\n    start(size, zoom, resolution) {\n      this.stop();\n      this.tracker.setVisible(true);\n      this.tracker.renderTrajectories(this.currTime, size, resolution);\n      this.startUpdateTime(zoom);\n    }\n\n    /**\n     * Start the time.\n     * @private\n     * @param {number} zoom\n     */\n    startUpdateTime(zoom) {\n      this.stopUpdateTime();\n      this.updateTimeInterval = setInterval(() => {\n        const newTime =\n          this.currTime.getTime() +\n          (new Date() - this.lastUpdateTime) * this.speed;\n        this.setCurrTime(newTime);\n      }, this.getRefreshTimeInMs(zoom));\n    }\n\n    /**\n     * Stop the clock.\n     */\n    stop() {\n      this.stopUpdateTime();\n      if (this.tracker) {\n        this.tracker.setVisible(false);\n        this.tracker.clear();\n      }\n    }\n\n    /**\n     * Stop the time.\n     * @private\n     */\n    stopUpdateTime() {\n      if (this.updateTimeInterval) {\n        clearInterval(this.updateTimeInterval);\n      }\n    }\n\n    /**\n     * Set the current time, it triggers a rendering of the trajectories.\n     * @param {dateString | value} time\n     * @param {Array<number>} size\n     * @param {number} resolution\n     */\n    setCurrTime(time, size, resolution) {\n      const newTime = new Date(time);\n      this.currTime = newTime;\n      this.lastUpdateTime = new Date();\n      this.tracker.renderTrajectories(this.currTime, size, resolution);\n    }\n\n    /**\n     * Get vehicle.\n     * @param {function} filterFc A function use to filter results.\n     * @returns {Array<Object>} Array of vehicle.\n     */\n    getVehicle(filterFc) {\n      return this.tracker.getTrajectories().filter(filterFc);\n    }\n\n    /**\n     * Returns an array of vehicles located at the given coordinates and resolution.\n     *\n     * @param {Array<number>} coordinate\n     * @param {number} resolution\n     * @returns {Object[]} Array of vehicle.\n     */\n    getVehiclesAtCoordinate(coordinate, resolution = 1) {\n      const ext = buffer([...coordinate, ...coordinate], 10 * resolution);\n      const trajectories = this.tracker.getTrajectories();\n      const vehicles = [];\n      for (let i = 0; i < trajectories.length; i += 1) {\n        if (\n          trajectories[i].coordinate &&\n          containsCoordinate(ext, trajectories[i].coordinate)\n        ) {\n          vehicles.push(trajectories[i]);\n        }\n      }\n\n      return vehicles;\n    }\n\n    /**\n     * Get the duration before the next update depending on zoom level.\n     * @private\n     * @param {number} zoom\n     */\n    getRefreshTimeInMs(zoom) {\n      const roundedZoom = Math.round(zoom);\n      const timeStep = timeSteps[roundedZoom] || 25;\n      const nextTick = Math.max(25, timeStep / this.speed);\n      return nextTick;\n    }\n\n    /**\n     * Define a default style of the vehicle.s\n     * Draw a blue circle with the id of the props parameter.\n     *\n     * @param {Object} props Properties\n     * @private\n     */\n    defaultStyle(props) {\n      const { id: text } = props;\n      if (this.styleCache[text]) {\n        return this.styleCache[text];\n      }\n      const canvas = document.createElement('canvas');\n      canvas.width = 200;\n      canvas.height = 15;\n      const ctx = canvas.getContext('2d');\n      ctx.arc(8, 8, 5, 0, 2 * Math.PI, false);\n      ctx.fillStyle = '#8ED6FF';\n      ctx.fill();\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = 'black';\n      ctx.stroke();\n      ctx.font = 'bold 12px arial';\n      ctx.strokeStyle = 'white';\n      ctx.lineWidth = 3;\n      ctx.strokeText(text, 20, 10);\n      ctx.fillStyle = 'black';\n      ctx.fillText(text, 20, 10);\n      this.styleCache[text] = canvas;\n      return this.styleCache[text];\n    }\n  };\n\nexport default TrackerLayerMixin;\n","import { Layer as OLLayer, Group } from 'ol/layer';\nimport { unByKey } from 'ol/Observable';\nimport Source from 'ol/source/Source';\nimport mixin from '../../common/mixins/TrackerLayerMixin';\nimport Layer from './Layer';\n\n/**\n * Responsible for loading tracker data.\n *\n * @extends {Layer}\n * @implements {TrackerLayerInterface}\n */\nclass TrackerLayer extends mixin(Layer) {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {boolean} options.useDelayStyle Set the delay style.\n   * @private\n   */\n  constructor(options = {}) {\n    // We use a group to be able to add custom vector layer in extended class.\n    // For example TrajservLayer use a vectorLayer to display the complete trajectory.\n    super({\n      ...options,\n    });\n\n    this.olLayer =\n      options.olLayer ||\n      new Group({\n        layers: [\n          new OLLayer({\n            source: new Source({}),\n            render: (frameState) => {\n              if (this.tracker && this.tracker.canvas) {\n                this.tracker.renderTrajectories(\n                  this.currTime,\n                  frameState.size,\n                  frameState.viewState.resolution,\n                );\n                return this.tracker.canvas;\n              }\n              return null;\n            },\n          }),\n        ],\n      });\n\n    /**\n     * Array of ol events key, returned by on() or once().\n     * @type {Array<ol/events~EventsKey>}\n     * @private\n     */\n    this.olEventsKeys = []; // Be careful to not override this value in child classe.\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map A OpenLayers map.\n   * @private\n   */\n  init(map) {\n    if (!map) {\n      return;\n    }\n\n    super.init(map, {\n      getPixelFromCoordinate: map.getPixelFromCoordinate.bind(map),\n    });\n  }\n\n  /**\n   * Set the current time, it triggers a rendering of the trajectories.\n   * @param {dateString | value} time\n   */\n  setCurrTime(time) {\n    const view = this.map.getView();\n    super.setCurrTime(time, this.map.getSize(), view.getResolution());\n  }\n\n  /**\n   * Trackerlayer is started.\n   * @private\n   */\n  start() {\n    super.start(\n      this.map.getSize(),\n      this.currentZoom,\n      this.map.getView().getResolution(),\n    );\n\n    this.olEventsKeys = [\n      this.map.on('moveend', () => {\n        const z = this.map.getView().getZoom();\n\n        if (z !== this.currentZoom) {\n          /**\n           * Current value of the zoom.\n           * @type {number}\n           */\n          this.currentZoom = z;\n          this.startUpdateTime(z);\n        }\n      }),\n      this.map.on('pointermove', (evt) => {\n        if (this.map.getView().getInteracting() || !this.isHoverActive) {\n          return;\n        }\n        const [vehicle] = this.getVehiclesAtCoordinate(evt.coordinate);\n        this.map.getTargetElement().style.cursor = vehicle ? 'pointer' : 'auto';\n        this.tracker.setHoverVehicleId(vehicle && vehicle.id);\n      }),\n    ];\n  }\n\n  /**\n   * Stop current layer.\n   * @private\n   */\n  stop() {\n    super.stop();\n    unByKey(this.olEventsKeys);\n    this.olEventsKeys = [];\n  }\n\n  /**\n   * Returns the vehicle which are at the given coordinates.\n   * Returns null when no vehicle is located at the given coordinates.\n   * @param {ol/coordinate~Coordinate} coordinate\n   * @returns {ol/Feature~Feature} Vehicle feature.\n   * @private\n   */\n  getVehiclesAtCoordinate(coordinate) {\n    const resolution = this.map.getView().getResolution();\n    return super.getVehiclesAtCoordinate(coordinate, resolution);\n  }\n\n  /**\n   * Create a copy of the TrackerLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {TrackerLayer} A TrackerLayer\n   */\n  clone(newOptions) {\n    return new TrackerLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default TrackerLayer;\n","/**\n * Get a Date object as UTC date string .\n * ex: 2019 09 01\n * @ignore\n */\nexport const getUTCDateString = (now = new Date()) => {\n  let month = (now.getUTCMonth() + 1).toString();\n  month = month.length === 1 ? `0${month}` : month;\n  let day = now.getUTCDate().toString();\n  day = day.length === 1 ? `0${day}` : day;\n\n  return [now.getUTCFullYear(), month, day].join('');\n};\n\n/**\n * Get the UTC time string of Date object.\n * ex: 09:05:01.123\n * @ignore\n */\nexport const getUTCTimeString = (date) =>\n  [\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    `${date.getUTCSeconds()}.${date.getUTCMilliseconds()}`,\n  ].join(':');\n\n/**\n * Returns a string representation of a number, with a zero if the number is lower than 10.\n * @ignore\n */\nexport const pad = (integer) => (integer < 10 ? `0${integer}` : integer);\n\n/**\n * Returns a 'hh:mm' string from a time in ms.\n * @param {Number} timeInMs Time in milliseconds.\n * @ignore\n */\nexport const getHoursAndMinutes = (timeInMs) => {\n  if (!timeInMs || timeInMs <= 0) {\n    return '';\n  }\n  const date = new Date(timeInMs);\n  return `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n};\n\n/**\n * Returns a string representing a delay.\n * @param {Number} timeInMs Delay time in milliseconds.\n * @ignore\n */\nexport const getDelayString = (timeInMs) => {\n  const h = Math.floor(timeInMs / 3600000);\n  const m = Math.floor((timeInMs % 3600000) / 60000);\n  const s = Math.floor(((timeInMs % 3600000) % 60000) / 1000);\n\n  if (s === 0 && h === 0 && m === 0) {\n    return '0';\n  }\n  if (s === 0 && h === 0) {\n    return `${m}m`;\n  }\n  if (s === 0) {\n    return `${h}h${m}m`;\n  }\n  if (m === 0 && h === 0) {\n    return `${s}s`;\n  }\n  if (h === 0) {\n    return `${m}m${s}s`;\n  }\n  return `${h}h${m}m${s}s`;\n};\n","import qs from 'query-string';\nimport BaseObject from 'ol/Object';\n\n/**\n * Common class to access to a geOps api.\n *\n * @example\n * import { API } from 'mobility-toolbox-js/api';\n *\n * const api = new API({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey]\n * });\n *\n * @classproperty {string} url Url of the service.\n * @classproperty {string} apiKey Api key to access the service.\n */\nclass API extends BaseObject {\n  constructor(options = {}) {\n    super();\n    /** @ignore */\n    this.url = options.url;\n\n    /** @ignore */\n    this.apiKey = options.apiKey;\n  }\n\n  /**\n   * Append the apiKey before sending the request.\n   * @ignore\n   */\n  fetch(path = '', params = {}, config) {\n    // Clean requets parameters, removing undefined and null values.\n    const urlParams = { ...params, key: this.apiKey };\n    const clone = { ...urlParams };\n    Object.keys(urlParams).forEach(\n      (key) =>\n        (clone[key] === undefined || clone[key] === null) && delete clone[key],\n    );\n    if (!this.apiKey) {\n      // eslint-disable-next-line no-console\n      return Promise.reject(\n        new Error(`No apiKey defined for request to ${this.url}`),\n      );\n    }\n    return fetch(`${this.url}${path}?${qs.stringify(clone)}`, config).then(\n      (response) => {\n        try {\n          return response.json().then((data) => {\n            if (data.error) {\n              throw new Error(data.error);\n            }\n            return data;\n          });\n        } catch (err) {\n          return Promise.reject(new Error(err));\n        }\n      },\n    );\n  }\n}\n\nexport default API;\n","import API from '../../common/api/api';\n\n/**\n * Access to the [Stops service](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n *\n * @example\n * import { StopsAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new StopsAPI({\n *   url: 'https://api.geops.io/stops/v1/',\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass StopsAPI extends API {\n  /**\n   * Constructor\n   *\n   * @param {Object} options Options.\n   * @param {string} [options.url='https://api.geops.io/stops/v1/'] Service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   */\n  constructor(options = {}) {\n    super({ url: 'https://api.geops.io/stops/v1/', ...options });\n  }\n\n  /**\n   * Search.\n   *\n   * @param {StopsSearchParams} params Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @returns {Promise<GeoJSONFeature[]>} An array of GeoJSON features with coordinates in [EPSG:4326](http://epsg.io/4326).\n   */\n  search(params, abortController = {}) {\n    return this.fetch('', params, {\n      signal: abortController.signal,\n    }).then((featureCollection) => featureCollection.features);\n  }\n}\n\nexport default StopsAPI;\n","import { LineString } from 'ol/geom';\n\n/**\n * Translate the response date object into a readable object.\n * @returns {array<Date>}\n * @ignore\n */\nconst translateDates = (dates) => {\n  const newDates = [];\n\n  for (let i = 0; i < dates.length; i += 1) {\n    const { d: day, m: month, y: year } = dates[i];\n    newDates.push({\n      day,\n      month,\n      year,\n    });\n  }\n  return newDates;\n};\n\n/**\n * Translate the trajstations response into a readable object.\n * @returns {Object} returns a readable object\n * @private\n */\nexport const translateTrajStationsResp = (data) => {\n  const {\n    id,\n    hs: destination,\n    t: vehicleType,\n    ln: longName,\n    sn: shortName,\n    wa: wheelchairAccessible,\n    ba: bicyclesAllowed,\n    rt: realTime,\n    fid: feedsId,\n    rid: routeIdentifier,\n    c: bgColor,\n    tc: datacolor,\n    a: { n: operator, u: operatorUrl, tz: operatorTimeZone },\n    f: { n: publisher, u: publisherUrl, tz: publisherTimeZone },\n    tt: {\n      n: dateNotOperatingDays,\n      p: dateAdditionalOperatingDays,\n      t: operatingPeriod,\n    },\n    sts: dataStations,\n  } = data;\n\n  const notOperatingDays = translateDates(dateNotOperatingDays);\n  const additionalOperatingDays = translateDates(dateAdditionalOperatingDays);\n  const backgroundColor = bgColor && `#${bgColor}`;\n  const color = datacolor && `#${datacolor}`;\n\n  const stations = [];\n  for (let i = 0; i < dataStations.length; i += 1) {\n    const {\n      sid: stationId,\n      n: stationName,\n      p: coordinates,\n      at: arrivalTime,\n      dt: departureTime,\n      ap: arrivalDate,\n      dp: departureDate,\n      ad: arrivalDelay,\n      dd: departureDelay,\n      dot: noDropOff,\n      put: noPickUp,\n      c: cancelled,\n      wa: stWheelchairAccessible,\n    } = dataStations[i];\n\n    stations.push({\n      stationId,\n      stationName,\n      coordinates,\n      arrivalTime: arrivalTime !== -1 ? arrivalDate * 1000 : null,\n      departureTime: departureTime !== -1 ? departureDate * 1000 : null,\n      arrivalDelay,\n      departureDelay,\n      noDropOff: !!noDropOff,\n      noPickUp: !!noPickUp,\n      cancelled: !!cancelled,\n      wheelchairAccessible: !!stWheelchairAccessible,\n    });\n  }\n\n  return {\n    id,\n    destination,\n    backgroundColor,\n    color,\n    vehicleType,\n    routeIdentifier,\n    longName,\n    shortName,\n    stations,\n    wheelchairAccessible: !!wheelchairAccessible,\n    bicyclesAllowed: !!bicyclesAllowed,\n    realTime,\n    feedsId,\n    operatingInformations: {\n      operatingPeriod,\n      notOperatingDays,\n      additionalOperatingDays,\n    },\n    operator,\n    operatorUrl,\n    operatorTimeZone,\n    publisher,\n    publisherUrl,\n    publisherTimeZone,\n  };\n};\n\n/**\n * Translate the trajectory_collection response into a js usable object.\n * @returns {Array} returns an array of trajectories.\n * @ignore\n */\nexport const translateTrajCollResponse = (features = []) => {\n  const trajectories = [];\n  for (let i = 0; i < features.length; i += 1) {\n    const traj = features[i];\n    const geometry = new LineString(traj.geometry.coordinates);\n    const {\n      ID: id,\n      ProductIdentifier: type,\n      PublishedLineName: name,\n      RouteIdentifier: routeIdentifier,\n      DirectionText: directionText,\n      Operator: operator,\n      OperatorURL: operatorUrl,\n      Publisher: publisher,\n      PublisherURL: publisherUrl,\n      License: license,\n      LicenseUrl: licenseUrl,\n      LicenseNote: licenseNote,\n      Color: color,\n      JourneyIdentifier: journeyIdentifier,\n      RealtimeAvailable: realtimeAvailable,\n      OperatorProvidesRealtime: operatorProvidesRealtime,\n      DayOfOperation: dayOfOperation,\n      Delay: delay,\n      TimeIntervals: timeIntervals,\n      TextColor: textColor,\n      Cancelled: cancelled,\n    } = traj.properties;\n\n    trajectories.push({\n      id,\n      type,\n      name,\n      routeIdentifier,\n      directionText,\n      operator,\n      operatorUrl,\n      publisher,\n      publisherUrl,\n      license,\n      licenseUrl,\n      licenseNote,\n      journeyIdentifier,\n      realtimeAvailable,\n      operatorProvidesRealtime,\n      dayOfOperation,\n      delay,\n      timeIntervals,\n      color: color && `#${color}`,\n      textColor: textColor && `#${textColor}`,\n      geometry,\n      cancelled,\n    });\n  }\n  return trajectories;\n};\n\nexport default {\n  translateTrajCollResponse,\n  translateTrajStationsResp,\n};\n","import {\n  translateTrajCollResponse,\n  translateTrajStationsResp,\n} from './TrajservAPIUtils';\nimport API from '../../common/api/api';\n\n/**\n * Access to the [Realtime service](https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/).\n *\n * @example\n * import { TrajservAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new TrajservAPI({\n *   url: 'https://api.geops.io/tracker/v1',\n *   apiKey: [yourApiKey]\n * });\n *\n */\nclass TrajservAPI extends API {\n  /**\n   * Constructor\n   *\n   * @param {Object} options Options.\n   * @param {string} [options.url='https://api.geops.io/tracker/v1'] Service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   */\n  constructor(options = {}) {\n    super({ url: 'https://api.geops.io/tracker/v1', ...options });\n  }\n\n  /**\n   * Fetch a trajectory by id.\n   *\n   * @param {GetTrajectoryByIdParams} params Request parameters. See [Realtime service documentation](https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectorybyid).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @returns {Promise<TrajservTrajectory>} A trajectory.\n   */\n  fetchTrajectoryById(params, abortController = {}) {\n    return this.fetch(`/trajectorybyid`, params, {\n      signal: abortController.signal,\n    });\n  }\n\n  /**\n   * Fetch trajectories.\n   *\n   * @param {GetTrajectoriesParams} params Request parameters. See [Realtime service documentation](https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajectory_collection).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @returns {Promise<Trajectory[]>} A list of trajectories.\n   */\n  fetchTrajectories(params, abortController = {}) {\n    return this.fetch(`/trajectory_collection`, params, {\n      signal: abortController.signal,\n    }).then((data) => {\n      return translateTrajCollResponse(data.features);\n    });\n  }\n\n  /**\n   * Fetch stations informations about a trajectory.\n   *\n   * @param {GetTrajectoryStationsParams} params Request parameters. See [Realtime service documentation](https://developer.geops.io/apis/5dcbd5c9a256d90001cf1360/#/default/get_trajstations).\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @returns {Promise<TrajectoryStation[]>} A list of stations.\n   */\n  fetchTrajectoryStations(params, abortController = {}) {\n    return this.fetch(`/trajstations`, params, {\n      signal: abortController.signal,\n    }).then((data) => {\n      return translateTrajStationsResp(data);\n    });\n  }\n}\n\nexport default TrajservAPI;\n","/**\n * Class use to facilitate connection to a WebSocket\n * @private\n */\nclass WebSocketConnector {\n  constructor(url) {\n    /**\n     * Array of subscriptions.\n     * @type {Array<subscription>}\n     */\n    this.subscriptions = [];\n    this.connect(url);\n\n    // keep websocket alive\n    setInterval(() => {\n      this.send('PING');\n    }, 10000);\n  }\n\n  /**\n   * Get the websocket request string.\n   * @param {string} method Request mehtod {GET, SUB}.\n   * @param {Object} params Request parameters.\n   * @param {string} params.channel Channel name\n   * @param {string} [params.args] Request arguments\n   * @param {Number} [params.id] Request identifier\n   * @returns {string} request string\n   * @private\n   */\n  static getRequestString(method, params) {\n    let reqStr = `${method} ${params.channel}`;\n    reqStr += params.args ? ` ${params.args}` : '';\n    reqStr += params.id ? ` ${params.id}` : '';\n    return reqStr.trim();\n  }\n\n  /**\n   * (Re)connect the websocket.\n   * @param {string} url url to connect to\n   * @private\n   */\n  connect(url) {\n    if (this.websocket && this.websocket.readyState !== this.websocket.CLOSED) {\n      this.websocket.close();\n    }\n\n    /** @ignore */\n    this.websocket = new WebSocket(url);\n\n    if (this.currentProj) {\n      this.setProjection(this.currentProj);\n    }\n\n    if (this.currentBbox) {\n      this.setBbox(this.currentBbox);\n    }\n\n    [...this.subscriptions].forEach((s) => {\n      this.subscribe(s.params, s.cb, s.errorCb, true);\n    });\n\n    // reconnect on close\n    this.websocket.onclose = () => {\n      window.clearTimeout(this.reconnectTimeout);\n      /** @ignore */\n      this.reconnectTimeout = window.setTimeout(() => this.connect(url), 100);\n    };\n  }\n\n  /**\n   * Sends a get request to the websocket.\n   * @param {Object} params Parameters for the websocket get request\n   * @param {function} cb callback on listen\n   * @param {function} errorCb Callback on error\n   * @private\n   */\n  get(params, cb, errorCb) {\n    const reqStr = WebSocketConnector.getRequestString('GET', params);\n    this.send(reqStr);\n    this.listen(params, cb, errorCb);\n  }\n\n  /**\n   * Sends a message to the websocket.\n   * @param {message} message Message to send.\n   * @private\n   */\n  send(message) {\n    const send = () => {\n      this.websocket.send(message);\n    };\n\n    if (this.websocket.readyState === WebSocket.CONNECTING) {\n      this.websocket.addEventListener('open', send);\n    } else {\n      send();\n    }\n  }\n\n  /**\n   * Set the projection for websocket responses.\n   * @param {string} value projection value to be set\n   * @private\n   */\n  setProjection(value) {\n    /**\n     * The projection for websocket responses\n     * @type {string}\n     */\n    this.currentProj = value;\n    this.send(`PROJECTION ${value}`);\n  }\n\n  /**\n   * Set the BBOX for websocket responses.\n   *  @param {Array<Array<number>>} coordinates array of coordinates\n   * @private\n   */\n  setBbox(coordinates) {\n    /**\n     * The BBOX for websocket responses\n     * @type {Array<Array<number>>}\n     */\n    this.currentBbox = coordinates;\n    this.send(`BBOX ${coordinates.join(' ')}`);\n    this.subscriptions.forEach((s) => {\n      this.get(s.params, s.cb, s.errorCb);\n    });\n  }\n\n  /**\n   * Listen to websocket responses.\n   * @private\n   * @param {Object} params Parameters for the websocket get request\n   * @param {function} cb callback on listen\n   * @param {function} errorCb Callback on error\n   * @returns {{onMessage: function, errorCb: function}} Object with onMessage and error callbacks\n   */\n  listen(params, cb, errorCb) {\n    const onMessage = (e) => {\n      const data = JSON.parse(e.data);\n      let source = params.channel;\n      source += params.args ? ` ${params.args}` : '';\n\n      if (\n        data.source === source &&\n        (!params.id || params.id === data.client_reference)\n      ) {\n        cb(data);\n      }\n    };\n\n    this.websocket.addEventListener('message', onMessage);\n\n    if (errorCb) {\n      this.websocket.addEventListener('error', errorCb);\n      this.websocket.addEventListener('close', errorCb);\n    }\n\n    return { onMessage, onErrorCb: errorCb };\n  }\n\n  /**\n   * Subscribe to a given channel.\n   * @private\n   * @param {Object} params Parameters for the websocket get request\n   * @param {function} cb callback on listen\n   * @param {function} errorCb Callback on error\n   * @param {boolean} quiet if subscribe should be quiet\n   */\n  subscribe(params, cb, errorCb, quiet) {\n    const { onMessageCb, onErrorCb } = this.listen(params, cb, errorCb);\n    const reqStr = WebSocketConnector.getRequestString('', params);\n\n    if (!quiet) {\n      this.subscriptions.push({ params, cb, errorCb, onMessageCb, onErrorCb });\n    }\n\n    this.send(`GET ${reqStr}`);\n    this.send(`SUB ${reqStr}`);\n  }\n\n  /**\n   * Unsubscribe from a channel.\n   * @param {string} source source to unsubscribe from\n   * @private\n   */\n  unsubscribe(source) {\n    this.subscriptions\n      .filter((s) => s.params.channel === source)\n      .forEach(({ onMessageCb, onErrorCb }) => {\n        this.websocket.removeEventListener('message', onMessageCb);\n        if (onErrorCb) {\n          this.websocket.removeEventListener('error', onErrorCb);\n          this.websocket.removeEventListener('close', onErrorCb);\n        }\n      });\n\n    this.subscriptions = this.subscriptions.filter(\n      (s) => s.params.channel !== source,\n    );\n\n    if (source) {\n      this.send(`DEL ${source}`);\n    }\n  }\n}\n\nexport default WebSocketConnector;\n","/**\n * Get the websocket channel suffix, depending on the current mode.\n * @param {String} mode Mode 'topographic' ou 'schematic'.\n * @private\n */\nexport const getModeSuffix = (mode, modes) =>\n  mode === modes.SCHEMATIC ? '_schematic' : '';\n\n/**\n * Compare two given departures for sort alogithm,\n * @param {Object} a First departure.\n * @param {Object} b Second departure.\n * @private\n */\nexport const compareDepartures = (a, b, sortByMinArrivalTime = false) => {\n  // First LEAVING and HIDDEN, then BOARDING and then sorted by time.\n  const topStates = ['HIDDEN', 'LEAVING', 'BOARDING'];\n  const aTop = a.has_fzo && topStates.indexOf(a.state) > -1;\n  const bTop = b.has_fzo && topStates.indexOf(b.state) > -1;\n\n  if (aTop || bTop) {\n    if (aTop !== bTop) {\n      return aTop ? -1 : 1;\n    }\n\n    if (a.state !== b.state) {\n      // one is leaving\n      return topStates.indexOf(a.state) - topStates.indexOf(b.state);\n    }\n  }\n\n  let aDuration = null;\n  let bDuration = null;\n  const now = Date.now();\n\n  if (sortByMinArrivalTime) {\n    aDuration = new Date(a.min_arrival_time || a.time).getTime() - now;\n    bDuration = new Date(b.min_arrival_time || b.time).getTime() - now;\n  } else {\n    aDuration = new Date(a.time).getTime() - now;\n    bDuration = new Date(b.time).getTime() - now;\n  }\n\n  return aDuration - bDuration;\n};\n\n/**\n * Remove the delay from arrivalTime and departureTime\n * @private\n */\nexport const cleanStopTime = (content) => {\n  if (!content) {\n    return;\n  }\n  content.stations.forEach((station) => {\n    // eslint-disable-next-line no-param-reassign\n    station.arrivalTimeWithDelay = station.arrivalTime;\n    if (station.departureTime) {\n      // eslint-disable-next-line no-param-reassign\n      station.departureTimeWithDelay = station.departureTime;\n    }\n    if (station.arrivalDelay) {\n      // eslint-disable-next-line no-param-reassign\n      station.arrivalTime -= station.arrivalDelay;\n      if (station.departureTime) {\n        // eslint-disable-next-line no-param-reassign\n        station.departureTime -= station.arrivalDelay;\n      }\n    }\n  });\n  // eslint-disable-next-line consistent-return\n  return content;\n};\n","import WebSocketConnector from './WebSocketConnector';\nimport {\n  getModeSuffix,\n  cleanStopTime,\n  compareDepartures,\n} from './TralisAPIUtils';\n\n/**\n * Enum for Tralis modes.\n * @readonly\n * @typedef {string} TralisMode\n * @property {string} RAW \"raw\"\n * @property {string} SCHEMATIC \"schematic\"\n * @property {string} TOPOGRAPHIC \"topographic\"\n * @enum {TralisMode}\n */\nexport const TralisModes = {\n  RAW: 'raw',\n  TOPOGRAPHIC: 'topographic',\n  SCHEMATIC: 'schematic',\n};\n\n/**\n * Access to Tralis service.\n *\n * @example\n * import { TralisAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new TralisAPI({\n *   url: \"yourUrl\",\n *   apiKey: \"yourApiKey\"\n * });\n *\n * @example\n * import { TralisAPI } from 'mobility-toolbox-js/api';\n *\n * const api = new TralisAPI(\"yourUrl\");\n */\nclass TralisAPI {\n  /**\n   * Constructor\n   *\n   * @param {Object|string} options A string representing the url of the service or an object containing the url and the apiKey.\n   * @param {string} options.url Service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   * @param {string} [options.projection='epsg:3857'] The epsg code of the projection for features.\n   */\n  constructor(options = {}) {\n    let wsUrl = null;\n    if (typeof options === 'string') {\n      wsUrl = options;\n    } else {\n      wsUrl = options.url;\n    }\n    if (options.apiKey) {\n      wsUrl = `${wsUrl}?key=${options.apiKey}`;\n    }\n    /** @ignore */\n    this.conn = new WebSocketConnector(wsUrl);\n    this.conn.setProjection(options.projection || 'epsg:3857');\n    /** @ignore */\n    this.subscribedStationUic = null;\n    /** @ignore */\n    this.departureUpdateTimeout = null;\n    /** @ignore */\n    this.maxDepartureAge = 30;\n    /** @ignore */\n    this.extraGeoms = {};\n  }\n\n  /**\n   * Subscribe to a channel.\n   *\n   * @param {string} channel Name of the websocket channel to subscribe.\n   * @param {function} onSuccess Callback when the subscription succeeds.\n   * @param {function} onError Callback when the subscription fails.\n   * @param {boolean} [quiet=false] If true avoid to store the subscription in the subscriptions list.\n   * @private\n   */\n  subscribe(channel, onSuccess, onError, quiet = false) {\n    this.conn.subscribe({ channel }, onSuccess, onError, quiet);\n  }\n\n  /**\n   * Unsubscribe to a channel.\n   *\n   * @param {string} channel Name of the websocket channel to unsubscribe.\n   * @param {string} [suffix=''] Suffix to add to the channel name.\n   * @private\n   */\n  unsubscribe(channel, suffix = '') {\n    this.conn.unsubscribe(\n      `${channel}${getModeSuffix(TralisModes.SCHEMATIC, TralisModes)}${suffix}`,\n    );\n    this.conn.unsubscribe(\n      `${channel}${getModeSuffix(\n        TralisModes.TOPOGRAPHIC,\n        TralisModes,\n      )}${suffix}`,\n    );\n  }\n\n  /**\n   * Filter departures and return an array.\n   *\n   * @param {Object} depObject The object containing departures by id.\n   * @param {boolean} [sortByMinArrivalTime=false] If true sort departures by arrival time.\n   * @returns {Array<departure>} Return departures array.\n   * @private\n   */\n  filterDepartures(depObject, sortByMinArrivalTime = false) {\n    const departures = Object.keys(depObject).map((k) => depObject[k]);\n    departures.sort((a, b) => compareDepartures(a, b, sortByMinArrivalTime));\n\n    let future = new Date();\n    future.setMinutes(future.getMinutes() + this.maxDepartureAge);\n    future = future.getTime();\n\n    let past = new Date();\n    past.setMinutes(past.getMinutes() - this.maxDepartureAge);\n    past = past.getTime();\n\n    const departureArray = [];\n    const platformsBoarding = [];\n    let previousDeparture = null;\n\n    for (let i = departures.length - 1; i >= 0; i -= 1) {\n      const d = departures[i];\n      const t = new Date(d.time).getTime();\n\n      // Only show departures within the next 30 minutes\n      if (t > past && t < future) {\n        // If 2 trains are boarding at the same platform,\n        // remove the older one.\n        if (d.state === 'BOARDING') {\n          if (platformsBoarding.indexOf(d.platform) === -1) {\n            platformsBoarding.push(d.platform);\n          } else {\n            d.state = 'HIDDEN';\n          }\n        }\n\n        // If two trains with the same line number and destinatin\n        // and a departure difference < 1 minute, hide the second one.\n        if (\n          previousDeparture &&\n          d.to[0] === previousDeparture.to[0] &&\n          Math.abs(t - previousDeparture.time) < 1000 &&\n          d.line.name === previousDeparture.line.name\n        ) {\n          d.state = 'HIDDEN';\n        }\n\n        if (/(STOP_CANCELLED|JOURNEY_CANCELLED)/.test(d.state)) {\n          d.cancelled = true;\n        }\n\n        previousDeparture = d;\n        previousDeparture.time = t;\n        departureArray.unshift(d);\n      }\n    }\n\n    return departureArray;\n  }\n\n  /**\n   * Subscribe to departures channel of a given station.\n   *\n   * @param {number} stationId UIC of the station.\n   * @param {Boolean} sortByMinArrivalTime Sort by minimum arrival time\n   * @param {function(departures:Departure[])} onMessage Function called on each message of the channel.\n   */\n  subscribeDepartures(stationId, sortByMinArrivalTime = false, onMessage) {\n    window.clearTimeout(this.departureUpdateTimeout);\n    this.unsubscribeDepartures();\n    this.subscribedStationUic = stationId;\n    const channel = stationId ? `timetable_${stationId}` : null;\n    const departureObject = {};\n    this.subscribe(\n      channel,\n      (data) => {\n        if (data.source === channel) {\n          const content = data.content || {};\n          const tDiff = new Date(content.timestamp).getTime() - Date.now();\n          content.timediff = tDiff;\n          departureObject[content.call_id] = content;\n\n          window.clearTimeout(this.departureUpdateTimeout);\n          this.departureUpdateTimeout = window.setTimeout(() => {\n            const departures = this.filterDepartures(\n              departureObject,\n              sortByMinArrivalTime,\n            );\n            onMessage(departures);\n          }, 100);\n        }\n      },\n      () => {\n        onMessage([]);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from current departures channel.\n   */\n  unsubscribeDepartures() {\n    if (this.subscribedStationUic) {\n      this.unsubscribe(`timetable_${this.subscribedStationUic}`);\n      this.subscribedStationUic = null;\n    }\n  }\n\n  /**\n   * Subscribe to the disruptions channel.\n   *\n   * @param {function} onMessage Function called on each message of the channel.\n   */\n  subscribeDisruptions(onMessage) {\n    this.subscribe('newsticker', (data) => {\n      onMessage(data.content);\n    });\n  }\n\n  /**\n   * Unsubscribe disruptions.\n   */\n  unsubscribeDisruptions() {\n    this.unsubscribe('newsticker');\n  }\n\n  /**\n   * Return a station with a given uic number and a mode.\n   *\n   * @param {number} uic UIC of the station.\n   * @param {TralisMode} mode Tralis mode.\n   * @returns {Promise<Station>} A station.\n   */\n  getStation(uic, mode) {\n    const params = {\n      channel: `station${getModeSuffix(mode, TralisModes)}`,\n      args: uic,\n    };\n\n    return new Promise((resolve, reject) => {\n      this.conn.get(params, (data) => {\n        if (data.content) {\n          resolve(data.content);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * Update the model's station list for a given mode and a bbox.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {number[4]} bbox The extent where to request.\n   * @returns {Promise<Station[]>} An array of stations.\n   */\n  getStations(mode, bbox) {\n    const stations = [];\n    if (bbox) {\n      this.conn.setBbox(bbox);\n    }\n    const params = {\n      channel: `station${getModeSuffix(mode, TralisModes)}`,\n    };\n    window.clearTimeout(this.stationUpdateTimeout);\n    return new Promise((resolve, reject) => {\n      this.conn.get(params, (data) => {\n        if (data.content) {\n          stations.push(data.content);\n          window.clearTimeout(this.stationUpdateTimeout);\n          /** @ignore */\n          this.stationUpdateTimeout = window.setTimeout(() => {\n            resolve(stations);\n          }, 50);\n        } else {\n          reject(data.content);\n        }\n      });\n    });\n  }\n\n  /**\n   * Subscribe to stations channel.\n   * One message pro station.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {number[4]} bbox The extent where to request.\n   * @param {function(station: Station)} onMessage Function called on each message of the channel.\n   */\n  subscribeStations(mode, bbox, onMessage) {\n    this.unsubscribeStations();\n    if (bbox) {\n      this.conn.setBbox(bbox);\n    }\n    this.subscribe(`station${getModeSuffix(mode, TralisModes)}`, (data) => {\n      if (data.content) {\n        onMessage(data.content);\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to stations channel.\n   */\n  unsubscribeStations() {\n    window.clearTimeout(this.stationUpdateTimeout);\n    this.unsubscribe('station');\n  }\n\n  /**\n   * Subscribe to extra_geoms channel.\n   *\n   * @param {function(extraGeoms: GeosJSONFeature[])} onMessage Function called on each message of the channel.\n   */\n  subscribeExtraGeoms(onMessage) {\n    this.subscribe('extra_geoms', (data) => {\n      const extraGeom = data.content;\n\n      if (extraGeom) {\n        const { ref } = extraGeom.properties;\n\n        if (extraGeom.type === 'Feature') {\n          this.extraGeoms[ref] = extraGeom;\n        } else {\n          delete this.extraGeoms[ref];\n        }\n\n        onMessage(\n          Object.keys(this.extraGeoms).map((key) => this.extraGeoms[key]),\n        );\n      }\n    });\n  }\n\n  /**\n   * Unsubscribe to extra_geoms channel.\n   */\n  unsubscribeExtraGeoms() {\n    this.unsubscribe('extra_geoms');\n  }\n\n  /**\n   * Subscribe to trajectory channel.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(trajectory: TralisTrajectory)} onMessage Function called on each message of the channel.\n   */\n  subscribeTrajectory(mode, onMessage) {\n    this.unsubscribeTrajectory();\n    this.subscribe(`trajectory${getModeSuffix(mode, TralisModes)}`, onMessage);\n  }\n\n  /**\n   * Unsubscribe to trajectory channels.\n   */\n  unsubscribeTrajectory() {\n    this.unsubscribe(`trajectory`);\n  }\n\n  /**\n   * Subscribe to deleted_vhicles channel.\n   *\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(response: { content: Vehicle })} onMessage Function called on each message of the channel.\n   */\n  subscribeDeletedVehicles(mode, onMessage) {\n    this.unsubscribeDeletedVehicles();\n    this.subscribe(\n      `deleted_vehicles${getModeSuffix(mode, TralisModes)}`,\n      onMessage,\n    );\n  }\n\n  /**\n   * Unsubscribe to deleted_vhicles channels.\n   */\n  unsubscribeDeletedVehicles() {\n    this.unsubscribe('deleted_vehicles');\n  }\n\n  /**\n   * Get a full trajectory of a vehicule .\n   *\n   * @param {number} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   * @returns {Promise<FullTrajectory>} Return a full trajectory.\n   */\n  getFullTrajectory(id, mode) {\n    const params = {\n      channel: `full_trajectory${getModeSuffix(mode, TralisModes)}_${id}`,\n    };\n\n    return new Promise((resolve) => {\n      this.conn.get(params, (data) => {\n        if (data.content) {\n          resolve(data.content);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get full trajectories of a vehicules .\n   *\n   * @param {number[]} ids List of vehicles ids.\n   * @param {TralisMode} mode Tralis mode.\n   * @returns {Promise<FullTrajectory[]>} Return an array of full trajectories.\n   */\n  getFullTrajectories(ids, mode) {\n    const promises = ids.map((id) => {\n      return this.getFullTrajectory(id, mode);\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Subscribe to full_trajectory channel of a given vehicle.\n   *\n   * @param {number} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   */\n  subscribeFullTrajectory(id, mode) {\n    // window.clearTimeout(this.fullTrajectoryUpdateTimeout);\n    this.unsubscribeFullTrajectory(id);\n    this.subscribe(\n      `full_trajectory${getModeSuffix(mode, TralisModes)}_${id}`,\n      (data) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe full_trajectory', data);\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe full_trajectory error', err);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from full_trajectory channel\n   *\n   * @param {number} id A vehicle id.\n   */\n  unsubscribeFullTrajectory(id) {\n    this.unsubscribe('full_trajectory', `_${id}`);\n  }\n\n  /**\n   * Get the list of stops for this vehicle.\n   *\n   * @param {number} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   * @returns {Promise<StopSequence>} Returns a stop sequence object.\n   */\n  getStopSequence(id, mode) {\n    const params = {\n      channel: `stopsequence${getModeSuffix(mode, TralisModes)}_${id}`,\n    };\n    return new Promise((resolve, reject) => {\n      this.conn.get(\n        params,\n        (data) => {\n          // Remove the delay from arrivalTime nad departureTime\n          resolve(cleanStopTime(data.content && data.content[0]));\n        },\n        (err) => {\n          reject(err);\n        },\n      );\n    });\n  }\n\n  /**\n   * Get a list of stops for a list of vehicles.\n   *\n   * @param {number[]} ids List of vehicles ids.\n   * @param {TralisMode} mode Tralis mode.\n   * @returns {Promise<StopSequence[]>} Return an array of stop sequences.\n   */\n  getStopSequences(ids, mode) {\n    const promises = ids.map((id) => {\n      return this.getStopSequence(id, mode);\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Subscribe to stopsequence channel of a given vehicle.\n   *\n   * @param {number} id A vehicle id.\n   * @param {TralisMode} mode Tralis mode.\n   * @param {function(stopSequence: StopSequence)} onMessage Function called on each message of the channel.\n   */\n  subscribeStopSequence(id, mode, onMessage) {\n    window.clearTimeout(this.fullTrajectoryUpdateTimeout);\n    this.unsubscribeStopSequence(id);\n\n    this.subscribe(\n      `stopsequence${getModeSuffix(mode, TralisModes)}_${id}`,\n      (data) => {\n        // Remove the delay from arrivalTime nad departureTime\n        onMessage(cleanStopTime(data.content && data.content[0]));\n      },\n      (err) => {\n        // eslint-disable-next-line no-console\n        console.log('subscribe stopsequence error', err);\n      },\n    );\n  }\n\n  /**\n   * Unsubscribe from stopsequence channel\n   *\n   * @param {number} id A vehicle id.\n   */\n  unsubscribeStopSequence(id) {\n    this.unsubscribe(`stopsequence`, `_${id}`);\n  }\n\n  /**\n   * Subscribe to healthcheck channel.\n   * @param {function} onMessage Callback when the subscribe to healthcheck channel succeeds.\n   */\n  subscribeHealthCheck(onMessage) {\n    this.unsubscribeHealthCheck();\n    this.subscribe('healthcheck', onMessage);\n  }\n\n  /**\n   * Unsubscribe to healthcheck channel.\n   */\n  unsubscribeHealthCheck() {\n    this.unsubscribe('healthcheck');\n  }\n}\nexport default TralisAPI;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport qs from 'query-string';\nimport { getUTCDateString, getUTCTimeString } from '../timeUtils';\nimport {\n  getRadius,\n  getBgColor,\n  getDelayColor,\n  getDelayText,\n  getTextColor,\n  getTextSize,\n} from '../trackerConfig';\nimport { TrajservAPI } from '../../api';\n\n/**\n * TrajservLayerInterface.\n *\n * @classproperty {boolean} isTrackerLayer - Property for duck typing since `instanceof` is not working when the instance was created on different bundles.\n * @classproperty {boolean} isHoverActive - Activate/deactivate pointer hover effect.\n * @classproperty {function} style - Style of the vehicle.\n * @classproperty {FilterFunction} filter - Time speed.\n * @classproperty {function} sort - Set the filter for tracker features.\n *\n * @extends {TrackerLayerInterface}\n */\nexport class TrajservLayerInterface {\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map|mapboxgl.Map} map A map.\n   * @override\n   */\n  init(map) {}\n\n  /**\n   * Start to update trajectories and initialize the filter.\n   * @override\n   */\n  start() {}\n\n  /**\n   * Stop to update trajectories.\n   * @override\n   */\n  stop() {}\n\n  /**\n   * Set the tracker filter property using class properties.\n   * @private\n   */\n  addTrackerFilters() {}\n\n  /**\n   * Abort http requests.\n   *\n   * @private\n   */\n  abortFetchTrajectories() {}\n\n  /**\n   * Fetch stations information with a trajectory id.\n   * @param {number} trajId The id of the trajectory.\n   * @private\n   */\n  updateTrajectoryStations(trajId) {}\n\n  /**\n   * Returns the URL parameters.\n   * @param {Object} extraParams Extra parameters\n   * @returns {Object}\n   * @private\n   */\n  getParams(extraParams = {}) {}\n\n  /**\n   * Start the update of trajectories.\n   * @private\n   */\n  startUpdateTrajectories() {}\n\n  /**\n   * Stop the update of trajectories.\n   * @private\n   */\n  stopUpdateTrajectories() {}\n\n  /**\n   * Update the trajectories\n   * @private\n   */\n  updateTrajectories() {}\n\n  /**\n   * Define the style of the vehicle.\n   * Draw a colored circle depending on train delay.\n   *\n   * @param {Object} props Properties\n   * @private\n   */\n  defaultStyle(props) {}\n}\n\nconst LINE_FILTER = 'publishedlinename';\nconst ROUTE_FILTER = 'tripnumber';\nconst OPERATOR_FILTER = 'operator';\n\n/**\n * Create a array of filter functions based on some parameters.\n * @param {string} line\n * @param {string} route\n * @param {string} operator\n * @param {string} regexLine\n * @private\n */\nconst createFilters = (line, route, operator, regexLine) => {\n  const filterList = [];\n\n  if (!line && !route && !operator && !regexLine) {\n    return null;\n  }\n\n  if (regexLine) {\n    const regexLineList =\n      typeof regexLine === 'string' ? [regexLine] : regexLine;\n    const lineFilter = (t) =>\n      regexLineList.some((tr) => new RegExp(tr, 'i').test(t.name));\n    filterList.push(lineFilter);\n  }\n\n  if (line) {\n    const lineFiltersList = typeof line === 'string' ? line.split(',') : line;\n    const lineList = lineFiltersList.map((l) =>\n      l.replace(/\\s+/g, '').toUpperCase(),\n    );\n    const lineFilter = (l) =>\n      lineList.some((filter) => filter === l.name.toUpperCase());\n    filterList.push(lineFilter);\n  }\n\n  if (route) {\n    const routes = typeof route === 'string' ? route.split(',') : route;\n    const routeList = routes.map((item) => parseInt(item, 10));\n    const routeFilter = (item) => {\n      const routeId = parseInt(item.routeIdentifier.split('.')[0], 10);\n      return routeList.some((id) => id === routeId);\n    };\n    filterList.push(routeFilter);\n  }\n\n  if (operator) {\n    const operatorList = typeof operator === 'string' ? [operator] : operator;\n    const operatorFilter = (t) =>\n      operatorList.some((op) => new RegExp(op, 'i').test(t.operator));\n    filterList.push(operatorFilter);\n  }\n\n  if (!filterList.length) {\n    return null;\n  }\n\n  return (t) => {\n    for (let i = 0; i < filterList.length; i += 1) {\n      if (!filterList[i](t)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n/**\n * Mixin for TrajservLayerInterface.\n *\n * @param {TrackerLayer} TrackerLayer A {TrackerLayer} class to extend with {TrajservLayerInterface} functionnalities.\n * @return {Class}  A class that implements {TrajservLayerInterface} class and extends Base;\n * @private\n */\nconst TrajservLayerMixin = (TrackerLayer) =>\n  class extends TrackerLayer {\n    /**\n     * Define layer's properties.\n     *\n     * @ignore\n     */\n    defineProperties(options) {\n      super.defineProperties(options);\n      let {\n        regexPublishedLineName,\n        publishedLineName,\n        tripNumber,\n        operator,\n      } = options;\n\n      let defaultApi;\n      if (!options.api) {\n        const apiOptions = {};\n        if (options.url) {\n          apiOptions.url = options.url;\n        }\n        if (options.apiKey) {\n          apiOptions.apiKey = options.apiKey;\n        }\n        defaultApi = new TrajservAPI(apiOptions);\n      }\n      Object.defineProperties(this, {\n        showVehicleTraj: {\n          value:\n            options.showVehicleTraj !== undefined\n              ? options.showVehicleTraj\n              : true,\n          writable: true,\n        },\n        delayDisplay: {\n          value: options.delayDisplay || 300000,\n          writable: true,\n        },\n        delayOutlineColor: {\n          value: options.delayOutlineColor || '#000000',\n          writable: true,\n        },\n        useDelayStyle: {\n          value: options.useDelayStyle || false,\n          writable: true,\n        },\n        requestIntervalSeconds: {\n          value: 3,\n          writable: true,\n        },\n        publishedLineName: {\n          get: () => {\n            return publishedLineName;\n          },\n          set: (newPublishedLineName) => {\n            publishedLineName = newPublishedLineName;\n            this.updateFilters();\n          },\n        },\n        tripNumber: {\n          get: () => {\n            return tripNumber;\n          },\n          set: (newTripNumber) => {\n            tripNumber = newTripNumber;\n            this.updateFilters();\n          },\n        },\n        operator: {\n          get: () => {\n            return operator;\n          },\n          set: (newOperator) => {\n            operator = newOperator;\n            this.updateFilters();\n          },\n        },\n        regexPublishedLineName: {\n          get: () => {\n            return regexPublishedLineName;\n          },\n          set: (newRegex) => {\n            regexPublishedLineName = newRegex;\n            this.updateFilters();\n          },\n        },\n        api: {\n          value: options.api || defaultApi,\n        },\n      });\n    }\n\n    init(map) {\n      super.init(map);\n\n      // Sort the trajectories.\n      if (this.sortFc) {\n        this.sort = this.sortFc;\n      } else if (this.useDelayStyle) {\n        // Automatic sorting depending on delay, higher delay on top.\n        this.sort = (a, b) => {\n          if (a.delay === null) return 1;\n          return a.delay < b.delay ? 1 : -1;\n        };\n      }\n    }\n\n    start() {\n      this.updateFilters();\n      super.start();\n      this.startUpdateTrajectories();\n    }\n\n    stop() {\n      this.journeyId = null;\n      this.stopUpdateTrajectories();\n      this.abortFetchTrajectories();\n      super.stop();\n    }\n\n    updateFilters() {\n      // Setting filters from the permalink if no values defined by the layer.\n      const parameters = qs.parse(window.location.search.toLowerCase());\n      // filter is the property in TrackerLayerMixin.\n      this.filter = createFilters(\n        this.publishedLineName || parameters[LINE_FILTER],\n        this.tripNumber || parameters[ROUTE_FILTER],\n        this.operator || parameters[OPERATOR_FILTER],\n        this.regexPublishedLineName,\n      );\n    }\n\n    abortFetchTrajectories() {\n      if (this.abortController) {\n        this.abortController.abort();\n      }\n    }\n\n    updateTrajectoryStations(trajId) {\n      const params = this.getParams({\n        id: trajId,\n        time: getUTCTimeString(new Date()),\n      });\n      return this.api.fetchTrajectoryStations(params);\n    }\n\n    getParams(extraParams = {}) {\n      const intervalMs = this.speed * 20000; // 20 seconds, arbitrary value, could be : (this.requestIntervalSeconds + 1) * 1000;\n      const now = this.currTime;\n\n      let diff = true;\n\n      if (\n        this.later &&\n        now.getTime() > this.later.getTime() - 3000 * this.speed\n      ) {\n        diff = false;\n      }\n      if (\n        !this.later ||\n        !diff ||\n        this.later.getTime() - now.getTime() > intervalMs\n      ) {\n        const later = new Date(now.getTime() + intervalMs);\n        this.later = later;\n      }\n\n      const params = {\n        ...extraParams,\n        btime: getUTCTimeString(now),\n        etime: getUTCTimeString(this.later),\n        date: getUTCDateString(now),\n        rid: 1,\n        a: 1,\n        cd: 1,\n        nm: 1,\n        fl: 1,\n        // toff: this.currTime.getTime() / 1000,\n      };\n\n      // Allow to load only differences between the last request,\n      // but currently the Tracker render method doesn't manage to render only diff.\n      /* if (diff) {\n      // Not working\n      params.diff = this.lastRequestTime;\n    } */\n      return params;\n    }\n\n    startUpdateTrajectories() {\n      this.stopUpdateTrajectories();\n\n      this.updateTrajectories();\n      this.updateInterval = window.setInterval(() => {\n        this.updateTrajectories();\n      }, this.requestIntervalSeconds * 1000);\n    }\n\n    stopUpdateTrajectories() {\n      clearInterval(this.updateInterval);\n    }\n\n    updateTrajectories() {\n      this.abortFetchTrajectories();\n      this.abortController = new AbortController();\n      this.api\n        .fetchTrajectories(\n          this.getParams({\n            attr_det: 1,\n          }),\n          this.abortController,\n        )\n        .catch((err) => {\n          if (err.name === 'AbortError') {\n            // Ignore abort error\n            return;\n          }\n          throw err;\n        })\n        .then((trajectories) => {\n          // Don't set trajectories when the user has aborted the request.\n          if (trajectories) {\n            this.tracker.setTrajectories(trajectories);\n          }\n        });\n    }\n\n    defaultStyle(props, zoom) {\n      const {\n        type,\n        name,\n        id,\n        color,\n        textColor,\n        delay,\n        cancelled,\n        operatorProvidesRealtime,\n      } = props;\n      const z = Math.min(Math.floor(zoom || 1), 16);\n      const hover = this.tracker.hoverVehicleId === id;\n      const selected = this.selectedVehicleId === id;\n      const key = `${z}${type}${name}${operatorProvidesRealtime}${delay}${hover}${selected}${cancelled}`;\n\n      if (!this.styleCache[key]) {\n        let radius = getRadius(type, z);\n\n        if (hover || selected) {\n          radius += 5;\n        }\n        const margin = 1;\n        const radiusDelay = radius + 2;\n        const markerSize = radius * 2;\n\n        const canvas = document.createElement('canvas');\n        // add space for delay information\n        canvas.width = radiusDelay * 2 + margin * 2 + 100;\n        canvas.height = radiusDelay * 2 + margin * 2 + 100;\n        const ctx = canvas.getContext('2d');\n        const origin = canvas.width / 2;\n\n        if (delay !== null) {\n          // Draw circle delay background\n          ctx.save();\n          ctx.beginPath();\n          ctx.arc(origin, origin, radiusDelay, 0, 2 * Math.PI, false);\n          ctx.fillStyle = getDelayColor(delay, cancelled);\n          ctx.filter = 'blur(1px)';\n          ctx.fill();\n          ctx.restore();\n        }\n\n        // Show delay if feature is hovered or if delay is above 5mins.\n        if (hover || delay >= this.delayDisplay || cancelled) {\n          // Draw delay text\n          ctx.save();\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'middle';\n          ctx.font = `bold ${Math.max(\n            cancelled ? 19 : 14,\n            Math.min(cancelled ? 19 : 17, radius * 1.2),\n          )}px arial, sans-serif`;\n          ctx.fillStyle = getDelayColor(delay, cancelled, true);\n\n          ctx.strokeStyle = this.delayOutlineColor;\n          ctx.lineWidth = 1.5;\n          const delayText = getDelayText(delay, cancelled);\n          ctx.strokeText(delayText, origin + radiusDelay + margin, origin);\n          ctx.fillText(delayText, origin + radiusDelay + margin, origin);\n          ctx.restore();\n        }\n\n        // Draw colored circle with black border\n        let circleFillColor;\n        if (this.useDelayStyle) {\n          circleFillColor = getDelayColor(delay, cancelled);\n        } else {\n          circleFillColor = color || getBgColor(type);\n        }\n        ctx.save();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#000000';\n        ctx.fillStyle = circleFillColor;\n        ctx.beginPath();\n        ctx.arc(origin, origin, radius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        // Dashed outline if a provider provides realtime but we don't use it.\n        if (\n          this.useDelayStyle &&\n          delay === null &&\n          operatorProvidesRealtime === 'yes'\n        ) {\n          ctx.setLineDash([5, 3]);\n        }\n        ctx.stroke();\n        ctx.restore();\n\n        // Draw text in the circle\n        if (radius > 10) {\n          const fontSize = Math.max(radius, 10);\n          const textSize = getTextSize(ctx, markerSize, name, fontSize);\n\n          // Draw a stroke to the text only if a provider provides realtime but we don't use it.\n          if (\n            this.useDelayStyle &&\n            delay === null &&\n            operatorProvidesRealtime === 'yes'\n          ) {\n            ctx.save();\n            ctx.textBaseline = 'middle';\n            ctx.textAlign = 'center';\n            ctx.font = `bold ${textSize + 2}px Arial`;\n            ctx.strokeStyle = circleFillColor;\n            ctx.strokeText(name, origin, origin);\n            ctx.restore();\n          }\n\n          // Draw a text\n          ctx.save();\n          ctx.textBaseline = 'middle';\n          ctx.textAlign = 'center';\n          ctx.fillStyle = !this.useDelayStyle\n            ? textColor || getTextColor(type)\n            : '#000000';\n          ctx.font = `bold ${textSize}px Arial`;\n          ctx.strokeStyle = circleFillColor;\n          ctx.strokeText(name, origin, origin);\n          ctx.fillText(name, origin, origin);\n          ctx.restore();\n        }\n\n        this.styleCache[key] = canvas;\n      }\n\n      return this.styleCache[key];\n    }\n  };\n\nexport default TrajservLayerMixin;\n","import Feature from 'ol/Feature';\nimport { transform as transformCoords } from 'ol/proj';\nimport { buffer, getWidth } from 'ol/extent';\nimport { Point, MultiPoint, LineString } from 'ol/geom';\nimport { Style, Fill, Stroke, Circle } from 'ol/style';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Vector as VectorSource } from 'ol/source';\nimport TrackerLayer from './TrackerLayer';\nimport { getUTCTimeString } from '../../common/timeUtils';\nimport { getBgColor } from '../../common/trackerConfig';\nimport mixin from '../../common/mixins/TrajservLayerMixin';\n\n/**\n * Responsible for loading and display data from a Trajserv service.\n *\n * @example\n * import { TrajservLayer } from 'mobility-toolbox-js/mapbox';\n *\n * const layer = new TrajservLayer({\n *   url: 'https://api.geops.io/tracker/v1',\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/trajserv/TrajservAPI%20js~TrajservAPI%20html\">TrajservAPI</a>\n * @see <a href=\"/example/ol-tracker\">OL tracker example</a>\n *\n * @extends {TrackerLayer}\n * @implements {TrajservLayerInterface}\n */\nclass TrajservLayer extends mixin(TrackerLayer) {\n  constructor(options = {}) {\n    // We use a group to be able to add custom vector layer in extended class.\n    // For example TrajservLayer use a vectorLayer to display the complete trajectory.\n    super({\n      ...options,\n    });\n\n    /** @ignore */\n    this.vectorLayer = new VectorLayer({\n      source: new VectorSource({ features: [] }),\n    });\n    this.olLayer.getLayers().insertAt(0, this.vectorLayer);\n  }\n\n  /**\n   * Initialize the layer.\n   * @param {mapboxgl.Map} map the mapbox map.\n   * @override\n   */\n  init(map) {\n    if (!map) {\n      return;\n    }\n\n    map.addLayer(this.vectorLayer);\n    super.init(map);\n  }\n\n  /**\n   * Terminate the layer.\n   * @override\n   */\n  terminate() {\n    if (this.map) {\n      this.map.removeLayer(this.vectorLayer);\n    }\n    super.terminate();\n  }\n\n  /**\n   * Start the layer.\n   * @override\n   */\n  start() {\n    if (!this.map) {\n      return;\n    }\n    super.start();\n    /**\n     * Array of ol events key, returned by on() or once().\n     * @type {Array<ol/events~EventsKey>}\n     */\n    this.olEventsKeys = [\n      ...this.olEventsKeys,\n      this.map.on('singleclick', this.onMapClick.bind(this)),\n      this.map.on('moveend', this.onMoveEnd.bind(this)),\n    ];\n  }\n\n  /**\n   * Callback on 'moveend' event.\n   * @private\n   */\n  onMoveEnd() {\n    this.updateTrajectories();\n    if (this.selectedVehicleId && this.journeyId) {\n      this.highlightTrajectory();\n    }\n  }\n\n  /**\n   * Callback on 'singleclick' event.\n   * @param {ol/MapEvent~MapEvent} evt\n   * @private\n   */\n  onMapClick(evt) {\n    if (!this.clickCallbacks.length) {\n      return;\n    }\n\n    const [vehicle] = this.getVehiclesAtCoordinate(evt.coordinate);\n    const features = [];\n\n    if (vehicle) {\n      const geom = vehicle.coordinate ? new Point(vehicle.coordinate) : null;\n      features.push(new Feature({ geometry: geom, ...vehicle }));\n\n      if (features.length) {\n        /**\n         * Id of the selected vehicle\n         * @type {string}\n         */\n        this.selectedVehicleId = features[0].get('id');\n        /** @ignore */\n        this.journeyId = features[0].get('journeyIdentifier');\n        this.updateTrajectoryStations(this.selectedVehicleId).then(\n          (trajStations) => {\n            this.clickCallbacks.forEach((callback) =>\n              callback({ ...vehicle, ...trajStations }, this, evt),\n            );\n          },\n        );\n      }\n    } else {\n      this.selectedVehicleId = null;\n      this.vectorLayer.getSource().clear();\n      this.clickCallbacks.forEach((callback) => callback(null, this, evt));\n    }\n  }\n\n  /**\n   * Draw the trajectory as a line with points for each stop.\n   * @param {Array} stationsCoords Array of station coordinates.\n   * @param {LineString|MultiLineString} lineGeometry A LineString or a MultiLineString.\n   * @param {string} color The color of the line.\n   * @private\n   */\n  drawFullTrajectory(stationsCoords, lineGeometry, color) {\n    // Don't allow white lines, use red instead.\n    const vehiculeColor = /#ffffff/i.test(color) ? '#ff0000' : color;\n    const vectorSource = this.vectorLayer.getSource();\n    vectorSource.clear();\n\n    if (stationsCoords) {\n      const geometry = new MultiPoint(stationsCoords);\n      const aboveStationsFeature = new Feature(geometry);\n      aboveStationsFeature.setStyle(\n        new Style({\n          zIndex: 1,\n          image: new Circle({\n            radius: 5,\n            fill: new Fill({\n              color: '#000000',\n            }),\n          }),\n        }),\n      );\n      const belowStationsFeature = new Feature(geometry);\n      belowStationsFeature.setStyle(\n        new Style({\n          zIndex: 4,\n          image: new Circle({\n            radius: 4,\n            fill: new Fill({\n              color: this.useDelayStyle ? '#a0a0a0' : vehiculeColor,\n            }),\n          }),\n        }),\n      );\n      vectorSource.addFeatures([aboveStationsFeature, belowStationsFeature]);\n    }\n\n    const lineFeat = new Feature({\n      geometry: lineGeometry,\n    });\n    lineFeat.setStyle([\n      new Style({\n        zIndex: 2,\n        stroke: new Stroke({\n          color: '#000000',\n          width: 6,\n        }),\n      }),\n      new Style({\n        zIndex: 3,\n        stroke: new Stroke({\n          color: this.useDelayStyle ? '#a0a0a0' : vehiculeColor,\n          width: 4,\n        }),\n      }),\n    ]);\n    vectorSource.addFeature(lineFeat);\n  }\n\n  /**\n   * Fetch stations information with a trajectory ID\n   * @param {number} trajId The ID of the trajectory\n   * @returns {Promise<TrajectoryStation[]>} A list of stations.\n   * @private\n   */\n  updateTrajectoryStations(trajId) {\n    return super.updateTrajectoryStations(trajId).then((trajStations) => {\n      /**\n       * Array of station coordinates.\n       * @type {Array<ol/coordinate~Coordinate>}\n       */\n      this.stationsCoords = [];\n      trajStations.stations.forEach((station) => {\n        this.stationsCoords.push(\n          transformCoords(station.coordinates, 'EPSG:4326', 'EPSG:3857'),\n        );\n      });\n\n      this.highlightTrajectory();\n      return trajStations;\n    });\n  }\n\n  /**\n   * Highlight the trajectory of journey.\n   * @private\n   */\n  highlightTrajectory() {\n    this.api\n      .fetchTrajectoryById(\n        this.getParams({\n          id: this.journeyId,\n          time: getUTCTimeString(new Date()),\n        }),\n      )\n      .then((traj) => {\n        const { p: multiLine, t, c } = traj;\n        const lineCoords = [];\n        multiLine.forEach((line) => {\n          line.forEach((point) => {\n            lineCoords.push([point.x, point.y]);\n          });\n        });\n\n        this.drawFullTrajectory(\n          this.stationsCoords,\n          new LineString(lineCoords),\n          c ? `#${c}` : getBgColor(t),\n        );\n      })\n      .catch(() => {\n        this.vectorLayer.getSource().clear();\n      });\n  }\n\n  /**\n   * @override\n   * * Returns the URL parameters.\n   * @param {Object} extraParams Extra parameters\n   * @returns {Object}\n   * @private\n   */\n  getParams(extraParams = {}) {\n    const ext = this.map.getView().calculateExtent();\n    const bbox = buffer(ext, getWidth(ext) / 10).join(',');\n    const zoom = this.map.getView().getZoom();\n\n    return super.getParams({\n      ...extraParams,\n      bbox,\n      s: zoom < 10 ? 1 : 0,\n      z: zoom,\n    });\n  }\n\n  /** @ignore */\n  defaultStyle(props) {\n    const zoom = this.map.getView().getZoom();\n    return super.defaultStyle(props, zoom);\n  }\n\n  /**\n   * Create a copy of the TrajservLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {TrajservLayer} A TrajservLayer\n   */\n  clone(newOptions) {\n    return new TrajservLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default TrajservLayer;\n","/* eslint-disable no-empty-function */\n/* eslint-disable no-useless-constructor */\n/* eslint-disable no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Point from 'ol/geom/Point';\nimport { TralisAPI, TralisModes } from '../../api';\n\n/**\n * TralisLayerInterface.\n */\nexport class TralisLayerInterface {\n  /*\n   * Constructor\n\n   * @param {Object} options Layer options.\n   * @param {string} options.url Tralis service url.\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/).\n   * @param {boolean} [options.debug=false] Display additional debug informations.\n   * @param {TralisMode} [options.mode=TralisMode.TOPOGRAPHIC] - Mode.\n   */\n  constructor(options = {}) {}\n\n  /**\n   * Subscribe to the Tralis service.\n   *\n   * @param {ol/Map~Map} map\n   */\n  init(map) {}\n\n  /**\n   * Unsubscribe to the Tralis service.\n   */\n  terminate() {}\n\n  /**\n   * Change the mode.\n   *\n   * @param {TralisMode} mode  Tralis mode\n   */\n  setMode(mode) {}\n\n  /**\n   * Add a feature to the tracker.\n   * @param {number} id The feature id\n   * @param {Trajectory} traj Properties of the trajectory.\n   * @param {boolean} [addOnTop=false] If true, the trajectory is added on top of\n   *   the trajectory object. This affects the draw order. If addOnTop is\n   *   true, the trajectory is drawn first and appears on bottom.\n   * @private\n   */\n  addTrajectory(id, traj, addOnTop = false) {}\n\n  /**\n   * Remove a trajectory with a given id.\n   * @param {number} id The trajectory id\n   * @private\n   */\n  removeTrajectory(id) {}\n\n  /**\n   * Remove a trajectory by attribute.\n   * @param {string} attributeName Name of the attribute.\n   * @param {*} value Attribute value.\n   * @private\n   */\n  removeTrajectoryByAttribute(attributeName, value) {}\n}\n\n/**\n * Mixin for TralisLayerInterface.\n *\n * @param {TrackerLayer} TrackerLayer A {TrackerLayer} class to extend with {TrajservLayerInterface} functionnalities.\n * @return {Class}  A class that implements {TralisLayerInterface} class and extends Base;\n * @private\n */\nconst TralisLayerMixin = (TrackerLayer) =>\n  class extends TrackerLayer {\n    constructor(options = {}) {\n      super({ ...options });\n      this.debug = options.debug;\n      this.mode = options.mode || TralisModes.TOPOGRAPHIC;\n      this.useDynamicIconScale = this.mode === TralisModes.SCHEMATIC;\n      this.trajectories = [];\n      this.refreshTimeInMs = 1000 / 30;\n      this.onMessage = this.onMessage.bind(this);\n      this.onDeleteMessage = this.onDeleteMessage.bind(this);\n      this.api = options.api || new TralisAPI(options);\n      this.format = new GeoJSON();\n\n      // These scales depends from the size specifed in the svgs.\n      // For some reason the size must be specified in the svg (../img/lines) for firefox.\n      this.dfltIconScale = 0.6;\n      this.dfltIconHighlightScale = 0.8;\n      this.minIconScale = this.dfltIconScale * 0.75;\n    }\n\n    init(map) {\n      super.init(map);\n      this.api.subscribeTrajectory(this.mode, this.onMessage);\n      this.api.subscribeDeletedVehicles(this.mode, this.onDeleteMessage);\n    }\n\n    terminate() {\n      this.api.unsubscribeTrajectory();\n      this.api.unsubscribeDeletedVehicles();\n      super.terminate();\n    }\n\n    setMode(mode) {\n      this.mode = mode;\n      this.useDynamicIconScale = this.mode === TralisModes.SCHEMATIC;\n      this.api.subscribeTrajectory(this.mode, this.onMessage);\n      this.api.subscribeDeletedVehicles(this.mode, this.onDeleteMessage);\n    }\n\n    getIconScaleFromRes(res) {\n      let scale = this.dfltIconScale;\n      if (!this.useDynamicIconScale) {\n        return scale;\n      }\n      if (res > this.resZoom11) {\n        const dynamicScale = this.resZoom11 / res;\n        scale =\n          dynamicScale < this.minIconScale ? this.minIconScale : dynamicScale;\n      } else if (res < this.resZoom112) {\n        scale = this.resZoom12 / res;\n      }\n      return parseFloat(scale.toFixed(1));\n    }\n\n    onMessage(data) {\n      if (!data.content) {\n        return;\n      }\n      const feat = this.format.readFeature(data.content);\n\n      feat.set('timeOffset', Date.now() - data.timestamp);\n\n      // ignore old events [SBAHNM-97]\n      if (feat.get('time_since_update') >= 0) {\n        if (this.debug && this.mode === TralisModes.TOPOGRAPHIC) {\n          const point = new Point(feat.get('raw_coordinates'));\n          point.transform('EPSG:4326', this.map.getView().getProjection());\n          feat.setGeometry(point);\n        }\n\n        this.addTrajectory(\n          feat.get('train_id'),\n          feat.getProperties(),\n          !feat.get('line'),\n        );\n      }\n    }\n\n    onDeleteMessage(data) {\n      if (data.content) {\n        this.removeTrajectoryByAttribute('train_id', data.content);\n      }\n    }\n\n    addTrajectory(id, traj, addOnTop) {\n      const idx = this.trajectories.findIndex((t) => t.train_id === id);\n      const { time_intervals: timeIntervals } = traj;\n\n      // Properties needed to display the vehicle.\n      const trajectory = { ...traj, id, timeIntervals };\n      if (addOnTop) {\n        this.trajectories.unshift(trajectory);\n        if (idx !== -1) {\n          this.tracker.trajectories.splice(idx + 1, 1);\n        }\n      } else {\n        this.trajectories.push(trajectory);\n        if (idx !== -1) {\n          this.tracker.trajectories.splice(idx, 1);\n        }\n      }\n\n      this.updateTrajectories();\n    }\n\n    removeTrajectory(id) {\n      for (let i = 0, len = this.trajectories.length; i < len; i += 1) {\n        if (this.trajectories[i].id === id) {\n          this.trajectories.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    removeTrajectoryByAttribute(attributeName, value) {\n      for (let i = 0, len = this.trajectories.length; i < len; i += 1) {\n        if (this.trajectories[i][attributeName] === value) {\n          this.removeTrajectory(this.trajectories[i].id);\n          break;\n        }\n      }\n    }\n\n    updateTrajectories() {\n      this.tracker.setTrajectories(this.trajectories);\n    }\n\n    getRefreshTimeInMs() {\n      return this.refreshTimeInMs;\n    }\n  };\n\nexport default TralisLayerMixin;\n","import TrackerLayer from './TrackerLayer';\nimport mixin from '../../common/mixins/TralisLayerMixin';\n\n/**\n * Responsible for loading and display data from a Tralis service.\n *\n * @example\n * import { TralisLayer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new TralisLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>\n *\n * @extends {TrackerLayer}\n * @implements {TralisLayerInterface}\n */\nclass TralisLayer extends mixin(TrackerLayer) {\n  constructor(options = {}) {\n    super({ ...options });\n    /** @ignore */\n    this.resZoom11 = null;\n    /** @ignore */\n    this.resZoom12 = null;\n  }\n\n  /**\n   * Initialize the layer:\n   *  - add layer to the OpenLayers Map.\n   *  - add listeners to the OpenLayers Map.\n   *  - subscribe to the Realtime service.\n   * @param {ol/Map~Map} map\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    this.resZoom11 = map.getView().getResolutionForZoom(11); // res zoom 11\n    this.resZoom12 = map.getView().getResolutionForZoom(12);\n    /** @ignore */\n    this.iconScale = this.getIconScaleFromRes(map.getView().getResolution());\n\n    this.olListenersKeys.push(\n      map.getView().on('change:resolution', ({ target: view }) => {\n        this.iconScale = this.getIconScaleFromRes(view.getResolution());\n      }),\n    );\n  }\n\n  /**\n   * Create a copy of the TralisLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {TralisLayer} A TralisLayer\n   */\n  clone(newOptions) {\n    return new TralisLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default TralisLayer;\n","import { unByKey } from 'ol/Observable';\nimport Layer from './Layer';\n\n/**\n * A class use to display vector data.\n *\n * @extends {Layer}\n */\nclass VectorLayer extends Layer {\n  /**\n   * Constructor.\n   *\n   * @param {Object} [options]\n   * @param {number} [options.hitTolerance=5] Pixel value of the click hitTolerance of clicks.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /** @ignore */\n    this.hitTolerance = options.hitTolerance || 5;\n  }\n\n  /**\n   * Request feature information for a given coordinate.\n   * @param {ol/coordinate~Coordinate} coordinate the coordinate to request the information at.\n   * @returns {Promise<Object>} Promise with features, layer and coordinate\n   *  or null if no feature was hit.\n   * eslint-disable-next-line class-methods-use-this\n   */\n  getFeatureInfoAtCoordinate(coordinate) {\n    let features = [];\n\n    if (this.map) {\n      const pixel = this.map.getPixelFromCoordinate(coordinate);\n      features = this.map.getFeaturesAtPixel(pixel, {\n        layerFilter: (l) => l === this.olLayer,\n        hitTolerance: this.hitTolerance,\n      });\n    }\n\n    return Promise.resolve({\n      features,\n      layer: this,\n      coordinate,\n    });\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    /**\n     * ol click events key, returned by map.on('singleclick')\n     * @type {ol/events~EventsKey}\n     * @private\n     */\n    this.singleClickRef = this.map.on('singleclick', (e) => {\n      if (!this.clickCallbacks.length) {\n        return;\n      }\n\n      this.getFeatureInfoAtCoordinate(e.coordinate)\n        .then((d) => this.callClickCallbacks(d.features, d.layer, d.coordinate))\n        .catch(() => this.callClickCallbacks([], this, e.coordinate));\n    });\n  }\n\n  /**\n   * Call click callbacks with given parameters.\n   * This is done in a separate function for being able to modify the response.\n   * @param {Array<ol/Feature~Feature>} features\n   * @param {ol/layer/Layer~Layer} layer\n   * @param {ol/coordinate~Coordinate} coordinate\n   * @private\n   */\n  callClickCallbacks(features, layer, coordinate) {\n    this.clickCallbacks.forEach((c) => c(features, layer, coordinate));\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  terminate() {\n    super.terminate();\n    if (this.singleClickRef) {\n      unByKey(this.singleClickRef);\n    }\n  }\n\n  /**\n   * Create a copy of the VectorLayer.\n   * @param {Object} newOptions Options to override\n   * @returns {VectorLayer} A VectorLayer\n   */\n  clone(newOptions) {\n    return new VectorLayer({ ...this.options, ...newOptions });\n  }\n}\n\nexport default VectorLayer;\n","/* eslint-disable no-empty-function */\n/* eslint-disable no-useless-constructor */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport StopsAPI from '../../api/stops/StopsAPI';\n\n/**\n * Search control interface.\n *\n * @classproperty {StopsSearchParams} apiParams - Default request parameters used by the search method. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n */\nexport class SearchInterface {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options Map options\n   * @param {string} options.apiKey Access key for [geOps services](https://developer.geops.io/). See StopsAPI.\n   * @param {string} [options.url='https://api.geops.io/tracker/v1'] Stops service url. See StopsAPI.\n   * @param {string} [options.placeholder='Search for a stop...'] Input field placeholder.\n   * @param {StopsSearchParams} [options.apiParams={ limit: 20 }] Request parameters. See [Stops service documentation](https://developer.geops.io/apis/5dcbd702a256d90001cf1361/).\n   */\n  // eslint-disable-next-line no-unused-vars\n  constructor(options = {}) {}\n\n  /**\n   * Launch a search.\n   *\n   * @param {String} query The query to search for.\n   * @param {AbortController} abortController Abort controller used to cancel the request.\n   * @returns {Promise<GeoJSONFeature[]>} An array of GeoJSON features with coordinates in [EPSG:4326](http://epsg.io/4326).\n   */\n  // eslint-disable-next-line no-unused-vars\n  search(query, abortController) {}\n}\n\n/**\n * Mixin for SearchInterface.\n *\n * @param {Class} Base  A class to extend with {SearchInterface} functionnalities.\n * @return {Class}  A class that implements <SearchInterface> class and extends Base;\n * @private\n */\nconst SearchMixin = (Base) =>\n  class extends Base {\n    constructor(options = {}) {\n      super(options);\n      const { apiParams, apiKey, url } = options;\n\n      this.apiParams = { limit: 20, ...(apiParams || {}) };\n      this.placeholder = options.placeholder || 'Search for a stop...';\n\n      const apiOptions = { apiKey };\n      if (url) {\n        apiOptions.url = url;\n      }\n      this.api = new StopsAPI(apiOptions);\n    }\n\n    render(suggestions = []) {\n      if (!this.suggestionsElt) {\n        return;\n      }\n\n      this.suggestionsElt.style.display = suggestions.length ? 'block' : 'none';\n\n      this.suggestionsElt.innerHTML = '';\n\n      suggestions.forEach((suggestion) => {\n        const { properties } = suggestion;\n        const suggElt = document.createElement('div');\n        suggElt.innerHTML = properties.name;\n        suggElt.onclick = () => {\n          this.onSuggestionClick(suggestion);\n        };\n        Object.assign(suggElt.style, {\n          padding: '5px 12px',\n        });\n        this.suggestionsElt.appendChild(suggElt);\n      });\n    }\n\n    createDefaultElement() {\n      /**\n       * Define a default element.\n       */\n      this.element = document.createElement('div');\n      this.element.id = 'mbt-search';\n      Object.assign(this.element.style, {\n        position: 'absolute',\n        top: 0,\n        left: '50px',\n        margin: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        width: '320px',\n      });\n\n      // Create input element\n      this.inputElt = document.createElement('input');\n      this.inputElt.type = 'text';\n      this.inputElt.placeholder = this.placeholder;\n      this.inputElt.autoComplete = 'off';\n      this.inputElt.onkeyup = (evt) => {\n        this.search(evt.target.value);\n      };\n      Object.assign(this.inputElt.style, {\n        padding: '10px 30px 10px 10px',\n      });\n      this.element.appendChild(this.inputElt);\n\n      // Create suggestions list element\n      this.suggestionsElt = document.createElement('div');\n      Object.assign(this.suggestionsElt.style, {\n        backgroundColor: 'white',\n        overflowY: 'auto',\n        cursor: 'pointer',\n      });\n      this.element.appendChild(this.suggestionsElt);\n\n      this.clearElt = document.createElement('div');\n      Object.assign(this.clearElt.style, {\n        display: 'none',\n        position: 'absolute',\n        right: '0',\n        padding: '10px',\n        fontSize: '200%',\n        cursor: 'pointer',\n      });\n      this.clearElt.innerHTML = '×';\n      this.clearElt.onclick = () => this.clear();\n      this.element.appendChild(this.clearElt);\n    }\n\n    search(q, abortController) {\n      if (q !== undefined || q !== null) {\n        this.apiParams.q = q;\n      }\n\n      if (this.clearElt) {\n        this.clearElt.style.display = 'block';\n      }\n\n      return this.api\n        .search(this.apiParams, abortController)\n        .then((data) => {\n          this.render(data);\n        })\n        .catch(() => {\n          this.render();\n        });\n    }\n\n    /**\n     * To be defined in inherited class\n     */\n    // eslint-disable-next-line no-unused-vars\n    onSuggestionClick(suggestion) {}\n\n    /**\n     * Clear the search field and close the control.\n     */\n    clear() {\n      if (!this.suggestionsElt) {\n        return;\n      }\n\n      this.inputElt.value = '';\n      this.suggestionsElt.innerHTML = '';\n      this.clearElt.style.display = 'none';\n    }\n  };\n\nexport default SearchMixin;\n","import { fromLonLat } from 'ol/proj';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/SearchMixin';\n\n/**\n * Search stations.\n *\n * @example\n * import { Map, StopFinderControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n *   controls: [\n *     new StopFinderControl({\n *       apiKey: [yourApiKey]\n *     })\n *   ]\n * });\n *\n *\n * @see <a href=\"/example/ol-search\">Openlayers search example</a>\n *\n * @extends {Control}\n * @implements {SearchInterface}\n */\nclass StopFinderControl extends mixin(Control) {\n  /**\n   * @private\n   */\n  onSuggestionClick({ geometry }) {\n    const coord = fromLonLat(geometry.coordinates);\n    this.map.getView().setCenter(coord);\n  }\n}\n\nexport default StopFinderControl;\n","import Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport getMapboxMapCopyrights from '../../common/utils/getMapboxMapCopyrights';\n\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map, CopyrightControl } from 'mobility-toolbox-js/mapbox';\n *\n * const map = new Map({\n *   container: 'map',\n *   style: `https://maps.geops.io/styles/travic_v2/style.json?key=${window.apiKey}`,\n *   controls: [\n *     new CopyrightControl()\n *   ]\n * });\n *\n *\n * @see <a href=\"/example/mb-copyright\">Mapbox copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\nclass CopyrightControl extends mixin(Control) {\n  constructor(options) {\n    super(options);\n    this.render = this.render.bind(this);\n  }\n\n  activate() {\n    super.activate();\n    if (this.map) {\n      this.map.on('sourcedata', this.render);\n      this.map.on('styledata', this.render);\n      this.map.on('idle', this.render);\n    }\n  }\n\n  deactivate() {\n    if (this.map) {\n      this.map.off('sourcedata', this.render);\n      this.map.off('styledata', this.render);\n      this.map.off('idle', this.render);\n    }\n    super.deactivate();\n  }\n\n  getCopyrights() {\n    return getMapboxMapCopyrights(this.map);\n  }\n}\n\nexport default CopyrightControl;\n","import { Map as MBMap } from 'mapbox-gl';\nimport Layer from '../common/layers/Layer';\nimport mixin from '../common/mixins/MapMixin';\nimport CopyrightControl from './controls/CopyrightControl';\nimport getMapboxStyleUrl from '../common/utils/getMapboxStyleUrl';\n\n/**\n * An Mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map) for handling mobility layers and controls.\n *\n * @extends {mapboxgl.Map}\n * @implements {MapInterface}\n */\nclass Map extends mixin(MBMap) {\n  /**\n   * Constructor.\n   */\n  constructor(options) {\n    const { style } = options;\n    const apiKey = options.apiKey || false;\n    const apiKeyName = options.apiKeyName || 'key';\n    let newStyle = options.style;\n    if (typeof style === 'string') {\n      newStyle = getMapboxStyleUrl(apiKey, apiKeyName, style);\n    }\n    super({\n      attributionControl: false,\n      controls: [new CopyrightControl()],\n      ...options,\n      style: newStyle,\n    });\n  }\n\n  /**\n   * Adds a layer to the map.\n   * @param {Layer|mapboxgl.Layer} layer The layer to add.\n   * @param {number} beforeId See [mapbox-gl-js doc](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer)\n   */\n  addLayer(layer, beforeId) {\n    if (layer instanceof Layer) {\n      this.mobilityLayers.push(layer);\n      this.fire('change:mobilityLayers');\n\n      if (this.isStyleLoaded()) {\n        layer.init(this, beforeId);\n      } else {\n        this.on('load', () => {\n          layer.init(this, beforeId);\n        });\n      }\n    } else {\n      super.addLayer(layer, beforeId);\n    }\n  }\n\n  /**\n   * Removes a given layer from the map.\n   * @param {Layer|number} layer The layer to remove.\n   *    If it's a mapbox-layer, pass the id instead..\n   */\n  removeLayer(layer) {\n    if (layer instanceof Layer) {\n      layer.terminate();\n      this.mobilityLayers = this.mobilityLayers.filter((l) => l !== layer);\n    } else {\n      super.removeLayer(layer);\n    }\n  }\n\n  /**\n   * Adds a given control to the map.\n   * @param {Control|mapboxgl.IControl} control The control to add.\n   * @param {mapboxgl.position} position Position of the control. Only if control parameter is an <mapboxgl.IControl>.\n   */\n  addControl(control, position) {\n    super.addControl(control, position);\n  }\n\n  /**\n   * Removes a given control to the map.\n   * @param {Control|mapboxgl.IControl} control The control to remove.\n   */\n  removeControl(control) {\n    super.removeControl(control);\n  }\n}\n\nexport default Map;\n","import { fromLonLat } from 'ol/proj';\nimport { getWidth, getHeight } from 'ol/extent';\n\n/**\n * Get the current resolution of a Mapbox map.\n * @param {mapboxgl.Map} map A map object.\n * @private\n */\nexport const getResolution = (map) => {\n  const bounds = map.getBounds().toArray();\n  const extent = [...fromLonLat(bounds[0]), ...fromLonLat(bounds[1])];\n  const { width, height } = map.getCanvas();\n  const xResolution = getWidth(extent) / width;\n  const yResolution = getHeight(extent) / height;\n  return Math.max(xResolution, yResolution);\n};\n\n/**\n * Get the canvas source coordinates of the current map's extent.\n * @param {mapboxgl.Map} map A map object.\n * @private\n */\nexport const getSourceCoordinates = (map) => {\n  const bounds = map.getBounds().toArray();\n  return [\n    [bounds[0][0], bounds[1][1]],\n    [...bounds[1]],\n    [bounds[1][0], bounds[0][1]],\n    [...bounds[0]],\n  ];\n};\n\nexport default {\n  getResolution,\n  getSourceCoordinates,\n};\n","import { toLonLat, fromLonLat } from 'ol/proj';\nimport Layer from '../../common/layers/Layer';\nimport mixin from '../../common/mixins/TrackerLayerMixin';\nimport { getResolution } from '../utils';\n\n/**\n * Responsible for loading tracker data.\n *\n * @extends {Layer}\n * @implements {TrackerLayerInterface}\n */\nclass TrackerLayer extends mixin(Layer) {\n  constructor(options = {}) {\n    super({\n      ...options,\n    });\n\n    /** @ignores */\n    this.onMapZoomEnd = this.onMapZoomEnd.bind(this);\n    /** @ignores */\n    this.onMapMouseMove = this.onMapMouseMove.bind(this);\n  }\n\n  /**\n   * Update the icon scale if the window (and probably the canvas) is resized.\n   * @private\n   */\n  updateIconScale(canvas) {\n    this.tracker.setIconScale(canvas.width / canvas.clientWidth);\n  }\n\n  /**\n   * Initialize the layer.\n   *\n   * @param {mapboxgl.Map} map A [mapbox Map](https://docs.mapbox.com/mapbox-gl-js/api/map/).\n   * @override\n   */\n  init(map) {\n    if (!map) {\n      return;\n    }\n\n    const canvas = map.getCanvas();\n    const iconScale = canvas.width / canvas.clientWidth;\n    map.on('resize', this.updateIconScale.bind(this, canvas));\n\n    super.init(map, {\n      width: canvas.width,\n      height: canvas.height,\n      iconScale,\n      getPixelFromCoordinate: (coord) => {\n        const pixelRatio = window.devicePixelRatio || 1;\n        const [lng, lat] = toLonLat(coord);\n        const { x, y } = this.map.project({ lng, lat });\n        return [x * pixelRatio, y * pixelRatio];\n      },\n    });\n  }\n\n  terminate() {\n    if (this.map) {\n      this.map.off('resize', this.updateIconScale);\n    }\n    return super.terminate();\n  }\n\n  /**\n   * Set the current time, it triggers a rendering of the trajectories.\n   *\n   * @param {Date} time  The current time.\n   */\n  setCurrTime(time) {\n    const canvas = this.map.getCanvas();\n    super.setCurrTime(\n      time,\n      [canvas.width, canvas.height],\n      getResolution(this.map),\n      !this.map.isMoving() && !this.map.isRotating() && !this.map.isZooming(),\n    );\n  }\n\n  /**\n   * Start updating vehicles position.\n   *\n   * @listens {mapboxgl.map.event:zoomend} Listen to zoom end event.\n   * @listens {mapboxgl.map.event:mousemove} Listen to mousemove end.\n   * @override\n   */\n  start() {\n    const canvas = this.map.getCanvas();\n    super.start(\n      [canvas.width, canvas.height],\n      this.map.getZoom(),\n      getResolution(this.map),\n    );\n\n    this.map.on('zoomend', this.onMapZoomEnd);\n\n    if (this.isHoverActive) {\n      this.map.on('mousemove', this.onMapMouseMove);\n    }\n  }\n\n  /**\n   * Stop updating vehicles position, and unlisten events.\n   *\n   * @override\n   */\n  stop() {\n    super.stop();\n    if (this.map) {\n      this.map.off('zoomend', this.onMapZoomEnd);\n      this.map.off('mousemove', this.onMapMouseMove);\n    }\n  }\n\n  /**\n   * Returns an array of vehicles located at the given coordinate.\n   *\n   * @param {Array<number>} coordinate\n   * @returns {Array<ol/Feature~Feature>} Array of vehicle.\n   * @override\n   */\n  getVehiclesAtCoordinate(coordinate) {\n    const resolution = getResolution(this.map);\n    return super.getVehiclesAtCoordinate(coordinate, resolution);\n  }\n\n  /**\n   * On zoomend we adjust the time interval of the update of vehicles positions.\n   *\n   * @private\n   */\n  onMapZoomEnd() {\n    this.startUpdateTime(this.map.getZoom());\n  }\n\n  /**\n   * On mousemove, we detect if a vehicle is heovered then updates the cursor's style.\n   *\n   * @param {mapboxgl.MapMouseEvent} evt Map's mousemove event.\n   * @private\n   */\n  onMapMouseMove(evt) {\n    if (\n      this.map.isMoving() ||\n      this.map.isRotating() ||\n      this.map.isZooming() ||\n      !this.isHoverActive\n    ) {\n      this.map.getContainer().style.cursor = 'auto';\n      return;\n    }\n    const [vehicle] = this.getVehiclesAtCoordinate(\n      fromLonLat([evt.lngLat.lng, evt.lngLat.lat]),\n    );\n    this.map.getContainer().style.cursor = vehicle ? 'pointer' : 'auto';\n    this.tracker.setHoverVehicleId(vehicle && vehicle.id);\n  }\n}\n\nexport default TrackerLayer;\n","import TrackerLayer from './TrackerLayer';\nimport { getSourceCoordinates, getResolution } from '../utils';\nimport mixin from '../../common/mixins/TralisLayerMixin';\n\n/**\n * Responsible for loading and display data from a Tralis service.\n *\n * @example\n * import { TralisLayer } from 'mobility-toolbox-js/mapbox';\n *\n * const layer = new TralisLayer({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey],\n * });\n *\n *\n * @see <a href=\"/api/class/src/api/tralis/TralisAPI%20js~TralisAPI%20html\">TralisAPI</a>\n *\n * @extends {TrackerLayer}\n * @implements {TralisLayerInterface}\n */\nclass TralisLayer extends mixin(TrackerLayer) {\n  constructor(options = {}) {\n    super({ ...options });\n\n    /** @ignore */\n    this.onZoomEnd = this.onZoomEnd.bind(this);\n    /** @ignore */\n    this.onMove = this.onMove.bind(this);\n    /** @ignore */\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n  }\n\n  /**\n   * Add listeners from the Mapbox Map.\n   *\n   * @param {mapboxgl.Map} map\n   * @param {string} beforeId See [mapboxgl.Map#addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) beforeId documentation.\n   */\n  init(map, beforeId) {\n    super.init(map);\n\n    if (!this.map) {\n      return;\n    }\n\n    /** @ignore */\n    this.iconScale = this.getIconScaleFromRes(getResolution(this.map));\n    this.map.on('zoomend', this.onZoomEnd);\n    this.map.on('move', this.onMove);\n    this.map.on('moveend', this.onMoveEnd);\n\n    const { width, height } = this.map.getCanvas();\n    this.tracker.canvas.width = width;\n    this.tracker.canvas.height = height;\n\n    this.map.addSource('canvas-source', {\n      type: 'canvas',\n      canvas: this.tracker.canvas,\n      coordinates: getSourceCoordinates(this.map),\n      // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\n      animate: true,\n    });\n    this.map.addLayer(\n      {\n        id: 'canvas-layer',\n        type: 'raster',\n        source: 'canvas-source',\n        paint: {\n          'raster-opacity': 1,\n          'raster-fade-duration': 0,\n        },\n      },\n      beforeId,\n    );\n  }\n\n  /**\n   * Remove listeners from the Mapbox Map.\n   */\n  terminate() {\n    if (this.map) {\n      this.map.off('zoomend', this.onZoomEnd);\n      this.map.off('move', this.onMove);\n      this.map.off('moveend', this.onMoveEnd);\n    }\n    super.terminate();\n  }\n\n  /**\n   * Callback on 'move' event.\n   *\n   * @private\n   */\n  onMove() {\n    this.map\n      .getSource('canvas-source')\n      .setCoordinates(getSourceCoordinates(this.map));\n    const { width, height } = this.map.getCanvas();\n    this.tracker.renderTrajectories(\n      this.currTime,\n      [width, height],\n      getResolution(this.map),\n    );\n  }\n\n  /**\n   * Callback on 'moveend' event.\n   *\n   * @private\n   */\n  onMoveEnd() {\n    this.updateTrajectories();\n  }\n\n  /**\n   * Callback on 'zoomend' event.\n   *\n   * @private\n   */\n  onZoomEnd() {\n    this.iconScale = this.getIconScaleFromRes(getResolution(this.map));\n  }\n}\n\nexport default TralisLayer;\n","import Map from './ol/Map';\nimport {\n  Layer as olLayer,\n  WMSLayer as olWMSLayer,\n  MapboxLayer as olMapboxLayer,\n  TrajservLayer as olTrajservLayer,\n  TralisLayer as olTralisLayer,\n  VectorLayer as olVectorLayer,\n} from './ol';\nimport {\n  TrajservLayer as mbTrajservLayer,\n  TralisLayer as mbTralisLayer,\n} from './mapbox';\n\nconst exports = {\n  mapbox: {\n    TrajservLayer: mbTrajservLayer,\n    TralisLayer: mbTralisLayer,\n  },\n  ol: {\n    Map,\n    Layer: olLayer,\n    WMSLayer: olWMSLayer,\n    MapboxLayer: olMapboxLayer,\n    TrajservLayer: olTrajservLayer,\n    TralisLayer: olTralisLayer,\n    VectorLayer: olVectorLayer,\n  },\n};\n\nexport default exports;\n","import { fromLonLat } from 'ol/proj';\nimport { buffer, getWidth } from 'ol/extent';\nimport { unByKey } from 'ol/Observable';\nimport TrackerLayer from './TrackerLayer';\nimport mixin from '../../common/mixins/TrajservLayerMixin';\nimport { getUTCTimeString } from '../../common/timeUtils';\nimport { getSourceCoordinates, getResolution } from '../utils';\n\n/**\n * Responsible for loading and display data from a Trajserv service.\n *\n * @example\n * import { TrajservLayer } from 'mobility-toolbox-js/mapbox';\n *\n * const layer = new TrajservLayer({\n *   url: 'https://api.geops.io/tracker/v1',\n *   apiKey: [yourApiKey],\n * });\n *\n * @see <a href=\"/api/class/src/api/trajserv/TrajservAPI%20js~TrajservAPI%20html\">TrajservAPI</a>\n * @see <a href=\"/example/mapbox-tracker\">Mapbox tracker example</a>\n *\n * @extends {TrackerLayer}\n * @implements {TrajservLayerInterface}\n */\nclass TrajservLayer extends mixin(TrackerLayer) {\n  constructor(options = {}) {\n    super({ ...options });\n    this.onMapClick = this.onMapClick.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onMoveEnd = this.onMoveEnd.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  /**\n   * Add the mapbox layer and source to the map.\n   *\n   * @param {mapboxgl.Map} map A Mapbox map.\n   * @param {String} beforeId See [mapboxgl.Map#addLayer](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer) documentation.\n   */\n  init(map, beforeId) {\n    if (!map) {\n      return;\n    }\n\n    super.init(map);\n\n    const { width, height } = map.getCanvas();\n    this.tracker.canvas.width = width;\n    this.tracker.canvas.height = height;\n\n    const source = {\n      type: 'canvas',\n      canvas: this.tracker.canvas,\n      coordinates: getSourceCoordinates(map),\n      // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\n      animate: true,\n      attribution: this.copyrights,\n    };\n\n    this.beforeId = beforeId;\n    this.layer = {\n      id: this.key,\n      type: 'raster',\n      source: this.key,\n      layout: {\n        visibility: this.visible ? 'visible' : 'none',\n      },\n      paint: {\n        'raster-opacity': 1,\n        'raster-fade-duration': 0,\n        'raster-resampling': 'nearest', // important otherwise it looks blurry\n      },\n    };\n    map.addSource(this.key, source);\n    map.addLayer(this.layer, this.beforeId);\n\n    this.listeners = [this.on('change:visible', this.onVisibilityChange)];\n  }\n\n  /**\n   * Remove the mapbox layer and the mapbox source.\n   *\n   * @override\n   */\n  terminate() {\n    if (this.map) {\n      this.listeners.forEach((listener) => {\n        unByKey(listener);\n      });\n      this.map.removeLayer(this.key);\n      this.map.removeSource(this.key);\n    }\n    super.terminate();\n  }\n\n  start() {\n    if (!this.map) {\n      return;\n    }\n    super.start();\n    this.map.on('click', this.onMapClick);\n    this.map.on('move', this.onMove);\n    this.map.on('moveend', this.onMoveEnd);\n  }\n\n  stop() {\n    if (this.map) {\n      this.map.off('click', this.onClick);\n      this.map.off('move', this.onMove);\n      this.map.off('moveend', this.onMoveEnd);\n    }\n    super.stop();\n  }\n\n  onVisibilityChange() {\n    if (this.visible && !this.map.getLayer(this.key)) {\n      this.map.addLayer(this.layer, this.beforeId);\n    } else if (this.map.getLayer(this.key)) {\n      this.map.removeLayer(this.key);\n    }\n    // We can't use setLayoutProperty it triggers an error probably a bug in mapbox\n    // this.map.setLayoutProperty(\n    //   this.key,\n    //   'visibilty',\n    //   this.visible ? 'visible' : 'none',\n    // );\n  }\n\n  /**\n   * Callback on 'move' event.\n   * @private\n   */\n  onMove() {\n    this.map.getSource(this.key).setCoordinates(getSourceCoordinates(this.map));\n\n    const { width, height } = this.map.getCanvas();\n    this.tracker.renderTrajectories(\n      this.currTime,\n      [width, height],\n      getResolution(this.map),\n    );\n  }\n\n  /**\n   * Callback on 'moveend' event.\n   * @private\n   */\n  onMoveEnd() {\n    this.updateTrajectories();\n    if (this.selectedVehicleId && this.journeyId) {\n      this.highlightTrajectory();\n    }\n  }\n\n  /**\n   * Callback on 'mouseclick' event.\n   * @param {mapboxgl.MapMouseEvent} evt\n   * @private\n   */\n  onMapClick(evt) {\n    if (!this.clickCallbacks.length) {\n      return;\n    }\n\n    const [vehicle] = this.getVehiclesAtCoordinate(\n      fromLonLat([evt.lngLat.lng, evt.lngLat.lat]),\n    );\n\n    if (vehicle) {\n      /**\n       * Id of the selected vehicle\n       * @type {string}\n       */\n      this.selectedVehicleId = vehicle.id;\n      /** @ignore */\n      this.journeyId = vehicle.journeyIdentifier;\n      this.updateTrajectoryStations(this.selectedVehicleId).then(\n        (vehicleWithStations) => {\n          /**\n           * Array of station coordinates.\n           * @type {Array<Array<number>>} Array of coordinates.\n           */\n          this.stationsCoords = [];\n          vehicleWithStations.stations.forEach((station) => {\n            this.stationsCoords.push(fromLonLat(station.coordinates));\n          });\n          this.clickCallbacks.forEach((callback) =>\n            callback({ ...vehicle, ...vehicleWithStations }, this, evt),\n          );\n        },\n      );\n    } else {\n      this.selectedVehicleId = null;\n      this.clickCallbacks.forEach((callback) => callback(null, this, evt));\n    }\n  }\n\n  /**\n   * @override\n   * * Returns the URL parameters.\n   * @param {Object} extraParams Extra parameters\n   * @returns {Object}\n   * @private\n   */\n  getParams(extraParams = {}) {\n    const bounds = this.map.getBounds().toArray();\n    const southWest = fromLonLat(bounds[0]);\n    const northEast = fromLonLat(bounds[1]);\n    const ext = [...southWest, ...northEast];\n    const bbox = buffer(ext, getWidth(ext) / 10).join(',');\n    const zoom = this.map.getZoom();\n\n    return super.getParams({\n      ...extraParams,\n      bbox,\n      s: zoom < 10 ? 1 : 0,\n      z: zoom,\n    });\n  }\n\n  /** @ignore */\n  defaultStyle(props) {\n    const zoom = this.map.getZoom();\n    return super.defaultStyle(props, zoom);\n  }\n\n  /**\n   * Draw the trajectory as a line with points for each stop.\n   * @param {Array} stationsCoords Array of station coordinates.\n   * @param {ol/geom/LineString~LineString|ol/geom/MultiLineString~MultiLineString} lineGeometry A LineString or a MultiLineString.\n   * @param {string} color The color of the line.\n   * @private\n   */\n  // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  drawFullTrajectory(stationsCoords, lineGeometry, color) {\n    // eslint-disable-next-line no-console\n    console.log('to be implemented');\n    // Don't allow white lines, use red instead.\n    // const vehiculeColor = /#ffffff/i.test(color) ? '#ff0000' : color;\n    // const vectorSource = this.olLayer.getSource();\n    // vectorSource.clear();\n    // if (stationsCoords) {\n    //   const geometry = new MultiPoint(stationsCoords);\n    //   const aboveStationsFeature = new Feature(geometry);\n    //   aboveStationsFeature.setStyle(\n    //     new Style({\n    //       zIndex: 1,\n    //       image: new Circle({\n    //         radius: 5,\n    //         fill: new Fill({\n    //           color: '#000000',\n    //         }),\n    //       }),\n    //     }),\n    //   );\n    //   const belowStationsFeature = new Feature(geometry);\n    //   belowStationsFeature.setStyle(\n    //     new Style({\n    //       zIndex: 4,\n    //       image: new Circle({\n    //         radius: 4,\n    //         fill: new Fill({\n    //           color: this.useDelayStyle ? '#a0a0a0' : vehiculeColor,\n    //         }),\n    //       }),\n    //     }),\n    //   );\n    //   vectorSource.addFeatures([aboveStationsFeature, belowStationsFeature]);\n    // }\n    // const lineFeat = new Feature({\n    //   geometry: lineGeometry,\n    // });\n    // lineFeat.setStyle([\n    //   new Style({\n    //     zIndex: 2,\n    //     stroke: new Stroke({\n    //       color: '#000000',\n    //       width: 6,\n    //     }),\n    //   }),\n    //   new Style({\n    //     zIndex: 3,\n    //     stroke: new Stroke({\n    //       color: this.useDelayStyle ? '#a0a0a0' : vehiculeColor,\n    //       width: 4,\n    //     }),\n    //   }),\n    // ]);\n    // vectorSource.addFeature(lineFeat);\n  }\n\n  /**\n   * Highlight the trajectory of journey.\n   * @param {String} journeyId The id of the journey.\n   * @private\n   */\n  highlightTrajectory(journeyId) {\n    this.api\n      .fetchTrajectoryById({\n        id: journeyId,\n        time: getUTCTimeString(new Date()),\n      })\n      // .then((traj) => {\n      // const { p: multiLine, t, c } = traj;\n      // const lineCoords = [];\n      // multiLine.forEach((line) => {\n      //   line.forEach((point) => {\n      //     lineCoords.push([point.x, point.y]);\n      //   });\n      // });\n      // this.drawFullTrajectory(\n      //   this.stationsCoords,\n      //   new LineString(lineCoords),\n      //   c ? `#${c}` : getBgColor(t),\n      // );\n      // })\n      .catch(() => {\n        if (this.map.getLayer('highlight-trajectory')) {\n          this.map.removeLayer('highlight-trajectory');\n        }\n      });\n  }\n}\n\nexport default TrajservLayer;\n"],"sourceRoot":""}