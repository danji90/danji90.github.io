{"ast":null,"code":"import _toConsumableArray from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/daniel/gitRepos/danji90.github.io/src/components/LifeMap/LifeMap.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Hidden, Link, Typography, Slider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LayerService from 'react-spatial/LayerService';\nimport BasicMap from 'react-spatial/components/BasicMap';\nimport BaseLayerSwitcher from 'react-spatial/components/BaseLayerSwitcher';\nimport Copyright from 'react-spatial/components/Copyright';\nimport Popup from 'react-spatial/components/Popup';\nimport MultiPoint from 'ol/geom/MultiPoint';\nimport VectorSource from 'ol/source/Vector';\nimport AnimatedCluster from 'ol-ext/layer/AnimatedCluster';\nimport Style from 'ol/style/Style';\nimport CircleStyle from 'ol/style/Circle';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport Icon from 'ol/style/Icon';\nimport Text from 'ol/style/Text';\nimport Map from 'ol/Map';\nimport Cluster from 'ol/source/Cluster';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport 'react-spatial/themes/default/index.scss';\nimport { format } from 'date-fns';\nimport Container from '../Container/Container';\nimport LayerMenu from '../LayerMenu/LayerMenu';\nimport FullExtent from '../FullExtent/FullExtent';\nimport { setShowEducation, setShowWork, setShowResidence } from '../../model/actions';\nimport eduIcon from '../../assets/images/edu.png';\nimport workIcon from '../../assets/images/work.png';\nimport residenceIcon from '../../assets/images/residence.png';\nimport aerial from './aerial.png';\nimport osm from './osm.png';\nimport topo from './topo.png';\n\nvar styles = function styles(theme) {\n  var _mapContainer;\n\n  return {\n    lifemap: _defineProperty({}, theme.breakpoints.down('xs'), {\n      '& h2': {\n        marginLeft: 30\n      }\n    }),\n    mapContainer: (_mapContainer = {\n      position: 'relative',\n      height: 800,\n      overflowX: 'hidden'\n    }, _defineProperty(_mapContainer, theme.breakpoints.down('xs'), {\n      height: '90vh'\n    }), _defineProperty(_mapContainer, '& .rs-copyright', {\n      position: 'absolute',\n      right: 5,\n      bottom: 5,\n      fontSize: 14,\n      '& a': theme.styles.link\n    }), _mapContainer),\n    map: {\n      position: 'absolute',\n      top: 10,\n      bottom: 0,\n      right: 0,\n      left: 0\n    },\n    baselayerSwitcherWrapper: {\n      position: 'absolute',\n      bottom: 5,\n      left: 5\n    },\n    popup: {\n      maxHeight: 200,\n      minWidth: 320,\n      overflowY: 'auto',\n      margin: '-10px -10px 0 -10px',\n      padding: 10\n    },\n    timeSlider: _defineProperty({\n      padding: '10px 0'\n    }, theme.breakpoints.down('xs'), {\n      '& h3': {\n        marginLeft: 30\n      }\n    }),\n    sliderWrapper: {\n      padding: '0 20px'\n    }\n  };\n};\n\nvar propTypes = {\n  section: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  // mui\n  classes: PropTypes.object.isRequired,\n  // mapStateToProps\n  map: PropTypes.instanceOf(Map),\n  showResidence: PropTypes.bool,\n  showWork: PropTypes.bool,\n  showEducation: PropTypes.bool,\n  layerService: PropTypes.instanceOf(LayerService)\n};\nvar defaultProps = {\n  section: {},\n  // mapStateToProps\n  map: null,\n  showResidence: false,\n  showWork: false,\n  showEducation: false,\n  layerService: new LayerService()\n};\n\nvar mapData = require('../../assets/data/mapFeatures.json');\n\nvar styleCache = {};\n\nvar getStyle = function getStyle(feature, resolution) {\n  var size = feature.get('features').length;\n  var style = styleCache[size];\n\n  if (!style) {\n    var color = // eslint-disable-next-line no-nested-ternary\n    size > 25 ? '248, 128, 0' : size > 8 ? '248, 192, 0' : '128, 192, 64';\n    var radius = Math.max(8, Math.min(size * 0.75, 20));\n\n    if (size > 1) {\n      style = [new Style({\n        image: new CircleStyle({\n          radius: radius + 2,\n          stroke: new Stroke({\n            color: \"rgba(\".concat(color, \",0.3)\"),\n            width: 4\n          })\n        })\n      }), new Style({\n        image: new CircleStyle({\n          radius: radius,\n          fill: new Fill({\n            color: \"rgba(\".concat(color, \",0.6)\")\n          })\n        }),\n        text: new Text({\n          text: size.toString(),\n          fill: new Fill({\n            color: '#000'\n          })\n        })\n      })];\n    } else {\n      var src = eduIcon;\n\n      if (feature.get('features')[0].get('type') === 'work') {\n        src = workIcon;\n      }\n\n      if (feature.get('features')[0].get('type') === 'residence') {\n        src = residenceIcon;\n      }\n\n      style = new Style({\n        image: new Icon({\n          scale: 1 / 4,\n          imgSize: [144, 144],\n          src: src\n        })\n      });\n    }\n  }\n\n  return style;\n};\n\nvar layerImages = {\n  streets: osm,\n  aerial: aerial,\n  topo: topo\n};\nvar initialTimeSpan = [Date.parse('1990-09-13T00:00:00.000Z'), Date.now()];\n\nvar LifeMap = /*#__PURE__*/function (_Component) {\n  _inherits(LifeMap, _Component);\n\n  var _super = _createSuper(LifeMap);\n\n  function LifeMap(props) {\n    var _this;\n\n    _classCallCheck(this, LifeMap);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedFeature: undefined,\n      timeSpan: initialTimeSpan\n    };\n    _this.education = new GeoJSON({\n      featureProjection: 'EPSG:3857'\n    }).readFeatures(mapData.education);\n    _this.work = new GeoJSON({\n      featureProjection: 'EPSG:3857'\n    }).readFeatures(mapData.work);\n    _this.residence = new GeoJSON({\n      featureProjection: 'EPSG:3857'\n    }).readFeatures(mapData.residence);\n    _this.onFeatureClick = _this.onFeatureClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LifeMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var map = this.props.map; // Cluster Source\n\n      this.clusterSource = new Cluster({\n        distance: 40,\n        source: new VectorSource()\n      }); // Animated cluster layer\n\n      this.clusterLayer = new AnimatedCluster({\n        name: 'Cluster',\n        source: this.clusterSource,\n        style: function style(features, resolution) {\n          return getStyle(features, resolution, _this2.clusterLayer);\n        }\n      });\n      this.updateFeatures();\n      this.setState({\n        clusterSource: this.clusterSource\n      });\n      map.addLayer(this.clusterLayer);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var timeSpan = this.state.timeSpan;\n      var _this$props = this.props,\n          showWork = _this$props.showWork,\n          showEducation = _this$props.showEducation,\n          showResidence = _this$props.showResidence;\n\n      if (prevProps.showEducation !== showEducation || prevProps.showWork !== showWork || prevProps.showResidence !== showResidence || prevState.timeSpan !== timeSpan) {\n        this.updateFeatures();\n      }\n    }\n  }, {\n    key: \"onFeatureClick\",\n    value: function onFeatureClick(features) {\n      var map = this.props.map;\n\n      if (!features || !features.length) {\n        this.setState({\n          selectedFeature: undefined\n        });\n        return;\n      }\n\n      var clusteredFeatures = features[0].get('features');\n\n      if ((clusteredFeatures === null || clusteredFeatures === void 0 ? void 0 : clusteredFeatures.length) > 1) {\n        this.setState({\n          selectedFeature: undefined\n        });\n        var coordinates = clusteredFeatures.map(function (feature) {\n          return feature.getGeometry().getCoordinates();\n        });\n        var combinedGeom = new MultiPoint(coordinates);\n        map.getView().fit(combinedGeom, {\n          padding: [100, 100, 100, 100],\n          duration: 300\n        });\n        return;\n      }\n\n      this.setState({\n        selectedFeature: features[0].get('features')[0]\n      });\n    }\n  }, {\n    key: \"updateFeatures\",\n    value: function updateFeatures() {\n      var timeSpan = this.state.timeSpan;\n      var _this$props2 = this.props,\n          showWork = _this$props2.showWork,\n          showEducation = _this$props2.showEducation,\n          showResidence = _this$props2.showResidence;\n      this.clusterSource.getSource().clear();\n      var newFeatures = [];\n\n      if (showWork) {\n        newFeatures = [].concat(_toConsumableArray(newFeatures), _toConsumableArray(this.work));\n      }\n\n      if (showEducation) {\n        newFeatures = [].concat(_toConsumableArray(newFeatures), _toConsumableArray(this.education));\n      }\n\n      if (showResidence) {\n        newFeatures = [].concat(_toConsumableArray(newFeatures), _toConsumableArray(this.residence));\n      }\n\n      var testFiltered = newFeatures.filter(function (feature) {\n        var display = false;\n        var timeStamps = feature.get('timestamp');\n        timeStamps.forEach(function (timestamp) {\n          if (!display) {\n            display = Date.parse(timestamp[0]) >= timeSpan[0] && Date.parse(timestamp[1]) <= timeSpan[1] || Date.parse(timestamp[0]) <= timeSpan[0] && Date.parse(timestamp[1]) >= timeSpan[1];\n          }\n        });\n        return display;\n      });\n      this.setState({\n        selectedFeature: undefined\n      });\n      this.clusterSource.getSource().addFeatures(testFiltered);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedFeature = _this$state.selectedFeature,\n          timeSpan = _this$state.timeSpan,\n          clusterSource = _this$state.clusterSource;\n      var _this$props3 = this.props,\n          map = _this$props3.map,\n          section = _this$props3.section,\n          layerService = _this$props3.layerService,\n          classes = _this$props3.classes;\n      var baseLayers = layerService.getBaseLayers();\n      return /*#__PURE__*/React.createElement(Container, {\n        title: \"Life map\",\n        className: classes.lifemap,\n        id: section.id,\n        fullWidthOnMobile: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.mapContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LayerMenu, {\n        baseLayers: baseLayers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FullExtent, {\n        featureSource: clusterSource,\n        onClick: function onClick() {\n          return _this3.setState({\n            selectedFeature: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BasicMap, {\n        className: \"rs-map \".concat(classes.map),\n        zoom: 2,\n        viewOptions: {\n          minZoom: 2\n        },\n        layers: baseLayers,\n        map: map,\n        onFeaturesClick: this.onFeatureClick,\n        onFeaturesHover: function onFeaturesHover(features) {\n          if (features.length) {\n            document.body.style.cursor = 'pointer';\n          } else {\n            document.body.style.cursor = 'auto';\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }), selectedFeature && /*#__PURE__*/React.createElement(Popup, {\n        map: map,\n        header: selectedFeature.get('city'),\n        feature: selectedFeature,\n        onCloseClick: function onCloseClick() {\n          return _this3.setState({\n            selectedFeature: undefined\n          });\n        },\n        panIntoView: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.popup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }\n      }, selectedFeature.get('title') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }\n      }, selectedFeature.get('title')), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      })), selectedFeature.get('link') && selectedFeature.get('facility') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n        href: \"\".concat(selectedFeature.get('link')),\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 23\n        }\n      }, selectedFeature.get('facility')), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }, selectedFeature.get('description')))), /*#__PURE__*/React.createElement(Copyright, {\n        map: map,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.baselayerSwitcherWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Hidden, {\n        smDown: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(BaseLayerSwitcher, {\n        map: map,\n        layers: baseLayers,\n        layerImages: layerImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.timeSlider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, \"\".concat(format(timeSpan[0], 'dd.MM.yyyy'), \" - \").concat(format(timeSpan[1], 'dd.MM.yyyy'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.sliderWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Slider, {\n        min: initialTimeSpan[0],\n        max: initialTimeSpan[1] // valueLabelDisplay=\"auto\"\n        // valueLabelFormat={() => {return 'wank'}}\n        ,\n        onChange: function onChange(evt, value) {\n          return _this3.setState({\n            timeSpan: value\n          });\n        },\n        value: timeSpan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return LifeMap;\n}(Component);\n\nLifeMap.propTypes = propTypes;\nLifeMap.defaultProps = defaultProps;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    map: state.map,\n    showResidence: state.showResidence,\n    showWork: state.showWork,\n    showEducation: state.showEducation,\n    layerService: state.layerService\n  };\n};\n\nvar mapDispatchToProps = {\n  dispatchSetShowEducation: setShowEducation,\n  dispatchSetShowWork: setShowWork,\n  dispatchSetShowResidence: setShowResidence\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LifeMap));","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/src/components/LifeMap/LifeMap.js"],"names":["React","Component","withStyles","Hidden","Link","Typography","Slider","connect","PropTypes","LayerService","BasicMap","BaseLayerSwitcher","Copyright","Popup","MultiPoint","VectorSource","AnimatedCluster","Style","CircleStyle","Stroke","Fill","Icon","Text","Map","Cluster","GeoJSON","format","Container","LayerMenu","FullExtent","setShowEducation","setShowWork","setShowResidence","eduIcon","workIcon","residenceIcon","aerial","osm","topo","styles","theme","lifemap","breakpoints","down","marginLeft","mapContainer","position","height","overflowX","right","bottom","fontSize","link","map","top","left","baselayerSwitcherWrapper","popup","maxHeight","minWidth","overflowY","margin","padding","timeSlider","sliderWrapper","propTypes","section","shape","id","oneOfType","string","number","classes","object","isRequired","instanceOf","showResidence","bool","showWork","showEducation","layerService","defaultProps","mapData","require","styleCache","getStyle","feature","resolution","size","get","length","style","color","radius","Math","max","min","image","stroke","width","fill","text","toString","src","scale","imgSize","layerImages","streets","initialTimeSpan","Date","parse","now","LifeMap","props","state","selectedFeature","undefined","timeSpan","education","featureProjection","readFeatures","work","residence","onFeatureClick","bind","clusterSource","distance","source","clusterLayer","name","features","updateFeatures","setState","addLayer","prevProps","prevState","clusteredFeatures","coordinates","getGeometry","getCoordinates","combinedGeom","getView","fit","duration","getSource","clear","newFeatures","testFiltered","filter","display","timeStamps","forEach","timestamp","addFeatures","baseLayers","getBaseLayers","minZoom","document","body","cursor","evt","value","mapStateToProps","mapDispatchToProps","dispatchSetShowEducation","dispatchSetShowWork","dispatchSetShowResidence"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Hidden, Link, Typography, Slider } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LayerService from 'react-spatial/LayerService';\nimport BasicMap from 'react-spatial/components/BasicMap';\nimport BaseLayerSwitcher from 'react-spatial/components/BaseLayerSwitcher';\nimport Copyright from 'react-spatial/components/Copyright';\nimport Popup from 'react-spatial/components/Popup';\nimport MultiPoint from 'ol/geom/MultiPoint';\nimport VectorSource from 'ol/source/Vector';\nimport AnimatedCluster from 'ol-ext/layer/AnimatedCluster';\nimport Style from 'ol/style/Style';\nimport CircleStyle from 'ol/style/Circle';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport Icon from 'ol/style/Icon';\nimport Text from 'ol/style/Text';\nimport Map from 'ol/Map';\nimport Cluster from 'ol/source/Cluster';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport 'react-spatial/themes/default/index.scss';\nimport { format } from 'date-fns';\n\nimport Container from '../Container/Container';\nimport LayerMenu from '../LayerMenu/LayerMenu';\nimport FullExtent from '../FullExtent/FullExtent';\nimport {\n  setShowEducation,\n  setShowWork,\n  setShowResidence,\n} from '../../model/actions';\n\nimport eduIcon from '../../assets/images/edu.png';\nimport workIcon from '../../assets/images/work.png';\nimport residenceIcon from '../../assets/images/residence.png';\nimport aerial from './aerial.png';\nimport osm from './osm.png';\nimport topo from './topo.png';\n\nconst styles = (theme) => {\n  return {\n    lifemap: {\n      [theme.breakpoints.down('xs')]: {\n        '& h2': {\n          marginLeft: 30,\n        },\n      },\n    },\n    mapContainer: {\n      position: 'relative',\n      height: 800,\n      overflowX: 'hidden',\n      [theme.breakpoints.down('xs')]: {\n        height: '90vh',\n      },\n      '& .rs-copyright': {\n        position: 'absolute',\n        right: 5,\n        bottom: 5,\n        fontSize: 14,\n        '& a': theme.styles.link,\n      },\n    },\n    map: {\n      position: 'absolute',\n      top: 10,\n      bottom: 0,\n      right: 0,\n      left: 0,\n    },\n    baselayerSwitcherWrapper: {\n      position: 'absolute',\n      bottom: 5,\n      left: 5,\n    },\n    popup: {\n      maxHeight: 200,\n      minWidth: 320,\n      overflowY: 'auto',\n      margin: '-10px -10px 0 -10px',\n      padding: 10,\n    },\n    timeSlider: {\n      padding: '10px 0',\n      [theme.breakpoints.down('xs')]: {\n        '& h3': {\n          marginLeft: 30,\n        },\n      },\n    },\n    sliderWrapper: {\n      padding: '0 20px',\n    },\n  };\n};\n\nconst propTypes = {\n  section: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n  // mui\n  classes: PropTypes.object.isRequired,\n  // mapStateToProps\n  map: PropTypes.instanceOf(Map),\n  showResidence: PropTypes.bool,\n  showWork: PropTypes.bool,\n  showEducation: PropTypes.bool,\n  layerService: PropTypes.instanceOf(LayerService),\n};\n\nconst defaultProps = {\n  section: {},\n  // mapStateToProps\n  map: null,\n  showResidence: false,\n  showWork: false,\n  showEducation: false,\n  layerService: new LayerService(),\n};\n\nconst mapData = require('../../assets/data/mapFeatures.json');\n\nconst styleCache = {};\n\nconst getStyle = (feature, resolution) => {\n  const size = feature.get('features').length;\n  let style = styleCache[size];\n  if (!style) {\n    const color =\n      // eslint-disable-next-line no-nested-ternary\n      size > 25 ? '248, 128, 0' : size > 8 ? '248, 192, 0' : '128, 192, 64';\n    const radius = Math.max(8, Math.min(size * 0.75, 20));\n    if (size > 1) {\n      style = [\n        new Style({\n          image: new CircleStyle({\n            radius: radius + 2,\n            stroke: new Stroke({\n              color: `rgba(${color},0.3)`,\n              width: 4,\n            }),\n          }),\n        }),\n        new Style({\n          image: new CircleStyle({\n            radius,\n            fill: new Fill({\n              color: `rgba(${color},0.6)`,\n            }),\n          }),\n          text: new Text({\n            text: size.toString(),\n            fill: new Fill({\n              color: '#000',\n            }),\n          }),\n        }),\n      ];\n    } else {\n      let src = eduIcon;\n      if (feature.get('features')[0].get('type') === 'work') {\n        src = workIcon;\n      }\n      if (feature.get('features')[0].get('type') === 'residence') {\n        src = residenceIcon;\n      }\n      style = new Style({\n        image: new Icon({\n          scale: 1 / 4,\n          imgSize: [144, 144],\n          src,\n        }),\n      });\n    }\n  }\n  return style;\n};\n\nconst layerImages = {\n  streets: osm,\n  aerial,\n  topo,\n};\n\nconst initialTimeSpan = [Date.parse('1990-09-13T00:00:00.000Z'), Date.now()];\n\nclass LifeMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFeature: undefined,\n      timeSpan: initialTimeSpan,\n    };\n    this.education = new GeoJSON({\n      featureProjection: 'EPSG:3857',\n    }).readFeatures(mapData.education);\n\n    this.work = new GeoJSON({ featureProjection: 'EPSG:3857' }).readFeatures(\n      mapData.work,\n    );\n\n    this.residence = new GeoJSON({\n      featureProjection: 'EPSG:3857',\n    }).readFeatures(mapData.residence);\n\n    this.onFeatureClick = this.onFeatureClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    // Cluster Source\n    this.clusterSource = new Cluster({\n      distance: 40,\n      source: new VectorSource(),\n    });\n    // Animated cluster layer\n    this.clusterLayer = new AnimatedCluster({\n      name: 'Cluster',\n      source: this.clusterSource,\n      style: (features, resolution) =>\n        getStyle(features, resolution, this.clusterLayer),\n    });\n    this.updateFeatures();\n    this.setState({ clusterSource: this.clusterSource });\n    map.addLayer(this.clusterLayer);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { timeSpan } = this.state;\n    const { showWork, showEducation, showResidence } = this.props;\n    if (\n      prevProps.showEducation !== showEducation ||\n      prevProps.showWork !== showWork ||\n      prevProps.showResidence !== showResidence ||\n      prevState.timeSpan !== timeSpan\n    ) {\n      this.updateFeatures();\n    }\n  }\n\n  onFeatureClick(features) {\n    const { map } = this.props;\n    if (!features || !features.length) {\n      this.setState({ selectedFeature: undefined });\n      return;\n    }\n\n    const clusteredFeatures = features[0].get('features');\n    if (clusteredFeatures?.length > 1) {\n      this.setState({ selectedFeature: undefined });\n      const coordinates = clusteredFeatures.map((feature) =>\n        feature.getGeometry().getCoordinates(),\n      );\n      const combinedGeom = new MultiPoint(coordinates);\n      map\n        .getView()\n        .fit(combinedGeom, { padding: [100, 100, 100, 100], duration: 300 });\n      return;\n    }\n    this.setState({ selectedFeature: features[0].get('features')[0] });\n  }\n\n  updateFeatures() {\n    const { timeSpan } = this.state;\n    const { showWork, showEducation, showResidence } = this.props;\n    this.clusterSource.getSource().clear();\n    let newFeatures = [];\n    if (showWork) {\n      newFeatures = [...newFeatures, ...this.work];\n    }\n    if (showEducation) {\n      newFeatures = [...newFeatures, ...this.education];\n    }\n    if (showResidence) {\n      newFeatures = [...newFeatures, ...this.residence];\n    }\n    const testFiltered = newFeatures.filter((feature) => {\n      let display = false;\n      const timeStamps = feature.get('timestamp');\n      timeStamps.forEach((timestamp) => {\n        if (!display) {\n          display =\n            (Date.parse(timestamp[0]) >= timeSpan[0] &&\n              Date.parse(timestamp[1]) <= timeSpan[1]) ||\n            (Date.parse(timestamp[0]) <= timeSpan[0] &&\n              Date.parse(timestamp[1]) >= timeSpan[1]);\n        }\n      });\n      return display;\n    });\n    this.setState({ selectedFeature: undefined });\n    this.clusterSource.getSource().addFeatures(testFiltered);\n  }\n\n  render() {\n    const { selectedFeature, timeSpan, clusterSource } = this.state;\n    const { map, section, layerService, classes } = this.props;\n    const baseLayers = layerService.getBaseLayers();\n    return (\n      <Container\n        title=\"Life map\"\n        className={classes.lifemap}\n        id={section.id}\n        fullWidthOnMobile\n      >\n        <div className={classes.mapContainer}>\n          <LayerMenu baseLayers={baseLayers} />\n          <FullExtent\n            featureSource={clusterSource}\n            onClick={() => this.setState({ selectedFeature: null })}\n          />\n          <BasicMap\n            className={`rs-map ${classes.map}`}\n            zoom={2}\n            viewOptions={{\n              minZoom: 2,\n            }}\n            layers={baseLayers}\n            map={map}\n            onFeaturesClick={this.onFeatureClick}\n            onFeaturesHover={(features) => {\n              if (features.length) {\n                document.body.style.cursor = 'pointer';\n              } else {\n                document.body.style.cursor = 'auto';\n              }\n            }}\n          />\n          {selectedFeature && (\n            <Popup\n              map={map}\n              header={selectedFeature.get('city')}\n              feature={selectedFeature}\n              onCloseClick={() => this.setState({ selectedFeature: undefined })}\n              panIntoView\n            >\n              <div className={classes.popup}>\n                {selectedFeature.get('title') && (\n                  <>\n                    <Typography variant=\"body1\">\n                      {selectedFeature.get('title')}\n                    </Typography>\n                    <br />\n                  </>\n                )}\n                {selectedFeature.get('link') &&\n                  selectedFeature.get('facility') && (\n                    <>\n                      <Link\n                        href={`${selectedFeature.get('link')}`}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {selectedFeature.get('facility')}\n                      </Link>\n                      <br />\n                      <br />\n                    </>\n                  )}\n                <Typography variant=\"body2\">\n                  {selectedFeature.get('description')}\n                </Typography>\n              </div>\n            </Popup>\n          )}\n          <Copyright map={map} />\n          <div className={classes.baselayerSwitcherWrapper}>\n            <Hidden smDown>\n              <BaseLayerSwitcher\n                map={map}\n                layers={baseLayers}\n                layerImages={layerImages}\n              />\n            </Hidden>\n          </div>\n        </div>\n        <div className={classes.timeSlider}>\n          <Typography variant=\"h3\">\n            {`${format(timeSpan[0], 'dd.MM.yyyy')} - ${format(\n              timeSpan[1],\n              'dd.MM.yyyy',\n            )}`}\n          </Typography>\n          <div className={classes.sliderWrapper}>\n            <Slider\n              min={initialTimeSpan[0]}\n              max={initialTimeSpan[1]}\n              // valueLabelDisplay=\"auto\"\n              // valueLabelFormat={() => {return 'wank'}}\n              onChange={(evt, value) => this.setState({ timeSpan: value })}\n              value={timeSpan}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nLifeMap.propTypes = propTypes;\nLifeMap.defaultProps = defaultProps;\n\nconst mapStateToProps = (state) => ({\n  map: state.map,\n  showResidence: state.showResidence,\n  showWork: state.showWork,\n  showEducation: state.showEducation,\n  layerService: state.layerService,\n});\n\nconst mapDispatchToProps = {\n  dispatchSetShowEducation: setShowEducation,\n  dispatchSetShowWork: setShowWork,\n  dispatchSetShowResidence: setShowResidence,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(LifeMap));\n"]},"metadata":{},"sourceType":"module"}