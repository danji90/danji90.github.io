{"ast":null,"code":"var _jsxFileName = \"/home/daniel/gitRepos/danji90.github.io/src/components/FullExtent/FullExtent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GiExpand } from 'react-icons/gi';\nimport Cluster from 'ol/source/Cluster';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    fullExtenBtn: {\n      position: 'absolute',\n      top: 15,\n      right: 5,\n      zIndex: 1,\n      backgroundColor: 'white',\n      boxShadow: ' 0 1px 4px rgb(0 0 0 / 30%)'\n    }\n  };\n});\n\nfunction FullExtent(_ref) {\n  var featureSource = _ref.featureSource,\n      _onClick = _ref.onClick;\n  var map = useSelector(function (state) {\n    return state.map;\n  });\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      backgroundColor: 'white'\n    },\n    onClick: function onClick(evt) {\n      if (featureSource && featureSource.getFeatures().length) {\n        _onClick(evt);\n\n        map.getView().fit(featureSource.getExtent(), {\n          padding: [50, 50, 50, 50],\n          duration: 300\n        });\n      }\n    },\n    classes: {\n      root: classes.fullExtenBtn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GiExpand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nFullExtent.propTypes = {\n  featureSource: PropTypes.instanceOf(Cluster),\n  onClick: PropTypes.func\n};\nFullExtent.defaultProps = {\n  featureSource: null,\n  onClick: function onClick() {}\n};\nexport default FullExtent;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/src/components/FullExtent/FullExtent.js"],"names":["React","PropTypes","useSelector","IconButton","makeStyles","GiExpand","Cluster","useStyles","theme","fullExtenBtn","position","top","right","zIndex","backgroundColor","boxShadow","FullExtent","featureSource","onClick","map","state","classes","evt","getFeatures","length","getView","fit","getExtent","padding","duration","root","propTypes","instanceOf","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD,EAAW;AACtC,SAAO;AACLC,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,GAAG,EAAE,EAFO;AAGZC,MAAAA,KAAK,EAAE,CAHK;AAIZC,MAAAA,MAAM,EAAE,CAJI;AAKZC,MAAAA,eAAe,EAAE,OALL;AAMZC,MAAAA,SAAS,EAAE;AANC;AADT,GAAP;AAUD,CAX2B,CAA5B;;AAaA,SAASC,UAAT,OAAgD;AAAA,MAA1BC,aAA0B,QAA1BA,aAA0B;AAAA,MAAXC,QAAW,QAAXA,OAAW;AAC9C,MAAMC,GAAG,GAAGjB,WAAW,CAAC,UAACkB,KAAD;AAAA,WAAWA,KAAK,CAACD,GAAjB;AAAA,GAAD,CAAvB;AACA,MAAME,OAAO,GAAGd,SAAS,EAAzB;AAEA,sBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAE;AAAnB,KADT;AAEE,IAAA,OAAO,EAAE,iBAACQ,GAAD,EAAS;AAChB,UAAIL,aAAa,IAAIA,aAAa,CAACM,WAAd,GAA4BC,MAAjD,EAAyD;AACvDN,QAAAA,QAAO,CAACI,GAAD,CAAP;;AACAH,QAAAA,GAAG,CAACM,OAAJ,GAAcC,GAAd,CAAkBT,aAAa,CAACU,SAAd,EAAlB,EAA6C;AAC3CC,UAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADkC;AAE3CC,UAAAA,QAAQ,EAAE;AAFiC,SAA7C;AAID;AACF,KAVH;AAWE,IAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAET,OAAO,CAACZ;AAAhB,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAEDO,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,aAAa,EAAEhB,SAAS,CAAC+B,UAAV,CAAqB1B,OAArB,CADM;AAErBY,EAAAA,OAAO,EAAEjB,SAAS,CAACgC;AAFE,CAAvB;AAKAjB,UAAU,CAACkB,YAAX,GAA0B;AACxBjB,EAAAA,aAAa,EAAE,IADS;AAExBC,EAAAA,OAAO,EAAE,mBAAM,CAAE;AAFO,CAA1B;AAKA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GiExpand } from 'react-icons/gi';\nimport Cluster from 'ol/source/Cluster';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    fullExtenBtn: {\n      position: 'absolute',\n      top: 15,\n      right: 5,\n      zIndex: 1,\n      backgroundColor: 'white',\n      boxShadow: ' 0 1px 4px rgb(0 0 0 / 30%)',\n    },\n  };\n});\n\nfunction FullExtent({ featureSource, onClick }) {\n  const map = useSelector((state) => state.map);\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      style={{ backgroundColor: 'white' }}\n      onClick={(evt) => {\n        if (featureSource && featureSource.getFeatures().length) {\n          onClick(evt);\n          map.getView().fit(featureSource.getExtent(), {\n            padding: [50, 50, 50, 50],\n            duration: 300,\n          });\n        }\n      }}\n      classes={{ root: classes.fullExtenBtn }}\n    >\n      <GiExpand />\n    </IconButton>\n  );\n}\n\nFullExtent.propTypes = {\n  featureSource: PropTypes.instanceOf(Cluster),\n  onClick: PropTypes.func,\n};\n\nFullExtent.defaultProps = {\n  featureSource: null,\n  onClick: () => {},\n};\n\nexport default FullExtent;\n"]},"metadata":{},"sourceType":"module"}