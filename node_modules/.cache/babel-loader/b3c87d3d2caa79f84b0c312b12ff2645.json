{"ast":null,"code":"import _classCallCheck from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { inView } from 'ol/layer/Layer';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport removeDuplicate from '../../common/utils/removeDuplicate';\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map, CopyrightControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n *   controls: [\n *     new CopyrightControl()\n *   ]\n * });\n *\n *\n * @see <a href=\"/example/ol-copyright\">Openlayers copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\n\nvar CopyrightControl = /*#__PURE__*/function (_mixin) {\n  _inherits(CopyrightControl, _mixin);\n\n  var _super = _createSuper(CopyrightControl);\n\n  function CopyrightControl(options) {\n    var _this;\n\n    _classCallCheck(this, CopyrightControl);\n\n    _this = _super.call(this, options);\n    _this.onPostRender = _this.onPostRender.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CopyrightControl, [{\n    key: \"getCopyrights\",\n    value: function getCopyrights() {\n      var _this2 = this;\n\n      if (!this.frameState) {\n        return [];\n      }\n\n      var copyrights = []; // This code loop comes mainly from ol.\n\n      this.frameState.layerStatesArray.forEach(function (layerState) {\n        var layer = layerState.layer;\n\n        if (inView(layerState, _this2.frameState.viewState) && layer && layer.getSource && layer.getSource() && layer.getSource().getAttributions()) {\n          copyrights = copyrights.concat(layer.getSource().getAttributions()(_this2.frameState));\n        }\n      });\n      return removeDuplicate(copyrights);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      _get(_getPrototypeOf(CopyrightControl.prototype), \"activate\", this).call(this);\n\n      if (this.map) {\n        this.map.on('postrender', this.onPostRender);\n      }\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      if (this.map) {\n        this.map.un('postrender', this.onPostRender);\n      }\n\n      _get(_getPrototypeOf(CopyrightControl.prototype), \"deactivate\", this).call(this);\n    }\n  }, {\n    key: \"onPostRender\",\n    value: function onPostRender(evt) {\n      if (this.map && this.element) {\n        /**\n         * @ignore\n         */\n        this.frameState = evt.frameState;\n        this.render();\n      }\n    }\n  }]);\n\n  return CopyrightControl;\n}(mixin(Control));\n\nexport default CopyrightControl;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/mobility-toolbox-js/ol/controls/CopyrightControl.js"],"names":["inView","Control","mixin","removeDuplicate","CopyrightControl","options","onPostRender","bind","frameState","copyrights","layerStatesArray","forEach","layerState","layer","viewState","getSource","getAttributions","concat","map","on","un","evt","element","render"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,gB;;;;;AACJ,4BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAFmB;AAGpB;;;;WAED,yBAAgB;AAAA;;AACd,UAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,eAAO,EAAP;AACD;;AACD,UAAIC,UAAU,GAAG,EAAjB,CAJc,CAMd;;AACA,WAAKD,UAAL,CAAgBE,gBAAhB,CAAiCC,OAAjC,CAAyC,UAACC,UAAD,EAAgB;AACvD,YAAQC,KAAR,GAAkBD,UAAlB,CAAQC,KAAR;;AACA,YACEb,MAAM,CAACY,UAAD,EAAa,MAAI,CAACJ,UAAL,CAAgBM,SAA7B,CAAN,IACAD,KADA,IAEAA,KAAK,CAACE,SAFN,IAGAF,KAAK,CAACE,SAAN,EAHA,IAIAF,KAAK,CAACE,SAAN,GAAkBC,eAAlB,EALF,EAME;AACAP,UAAAA,UAAU,GAAGA,UAAU,CAACQ,MAAX,CACXJ,KAAK,CAACE,SAAN,GAAkBC,eAAlB,GAAoC,MAAI,CAACR,UAAzC,CADW,CAAb;AAGD;AACF,OAbD;AAcA,aAAOL,eAAe,CAACM,UAAD,CAAtB;AACD;;;WAED,oBAAW;AACT;;AACA,UAAI,KAAKS,GAAT,EAAc;AACZ,aAAKA,GAAL,CAASC,EAAT,CAAY,YAAZ,EAA0B,KAAKb,YAA/B;AACD;AACF;;;WAED,sBAAa;AACX,UAAI,KAAKY,GAAT,EAAc;AACZ,aAAKA,GAAL,CAASE,EAAT,CAAY,YAAZ,EAA0B,KAAKd,YAA/B;AACD;;AACD;AACD;;;WAED,sBAAae,GAAb,EAAkB;AAChB,UAAI,KAAKH,GAAL,IAAY,KAAKI,OAArB,EAA8B;AAC5B;AACN;AACA;AACM,aAAKd,UAAL,GAAkBa,GAAG,CAACb,UAAtB;AACA,aAAKe,MAAL;AACD;AACF;;;;EApD4BrB,KAAK,CAACD,OAAD,C;;AAuDpC,eAAeG,gBAAf","sourcesContent":["import { inView } from 'ol/layer/Layer';\nimport Control from '../../common/controls/Control';\nimport mixin from '../../common/mixins/CopyrightMixin';\nimport removeDuplicate from '../../common/utils/removeDuplicate';\n\n/**\n * Display layer's copyrights.\n *\n * @example\n * import { Map, CopyrightControl } from 'mobility-toolbox-js/ol';\n *\n * const map = new Map({\n *   target: 'map',\n *   controls: [\n *     new CopyrightControl()\n *   ]\n * });\n *\n *\n * @see <a href=\"/example/ol-copyright\">Openlayers copyright example</a>\n *\n * @extends {Control}\n * @implements {CopyrightInterface}\n */\nclass CopyrightControl extends mixin(Control) {\n  constructor(options) {\n    super(options);\n    this.onPostRender = this.onPostRender.bind(this);\n  }\n\n  getCopyrights() {\n    if (!this.frameState) {\n      return [];\n    }\n    let copyrights = [];\n\n    // This code loop comes mainly from ol.\n    this.frameState.layerStatesArray.forEach((layerState) => {\n      const { layer } = layerState;\n      if (\n        inView(layerState, this.frameState.viewState) &&\n        layer &&\n        layer.getSource &&\n        layer.getSource() &&\n        layer.getSource().getAttributions()\n      ) {\n        copyrights = copyrights.concat(\n          layer.getSource().getAttributions()(this.frameState),\n        );\n      }\n    });\n    return removeDuplicate(copyrights);\n  }\n\n  activate() {\n    super.activate();\n    if (this.map) {\n      this.map.on('postrender', this.onPostRender);\n    }\n  }\n\n  deactivate() {\n    if (this.map) {\n      this.map.un('postrender', this.onPostRender);\n    }\n    super.deactivate();\n  }\n\n  onPostRender(evt) {\n    if (this.map && this.element) {\n      /**\n       * @ignore\n       */\n      this.frameState = evt.frameState;\n      this.render();\n    }\n  }\n}\n\nexport default CopyrightControl;\n"]},"metadata":{},"sourceType":"module"}