{"ast":null,"code":"/** Export getVector context for backward compatibility ol5 / ol6\r\n * Create a brand new function for ol5 copy of ol6 function.\r\n * Will be ignored using openlayers-ext package or ol5\r\n */\nimport { multiply as multiplyTransform } from 'ol/transform';\nimport CanvasImmediateRenderer from 'ol/render/canvas/Immediate';\n\nfunction getVectorContext(event) {\n  var frameState = event.frameState;\n  var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n  return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n\nexport default getVectorContext;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/ol-ext/util/getVectorContext.js"],"names":["multiply","multiplyTransform","CanvasImmediateRenderer","getVectorContext","event","frameState","transform","inversePixelTransform","slice","coordinateToPixelTransform","context","pixelRatio","extent","viewState","rotation"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,IAAIC,iBAArB,QAA8C,cAA9C;AACA,OAAOC,uBAAP,MAAoC,4BAApC;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,MAAMC,SAAS,GAAGL,iBAAiB,CAACG,KAAK,CAACG,qBAAN,CAA4BC,KAA5B,EAAD,EAAsCH,UAAU,CAACI,0BAAjD,CAAnC;AACA,SAAO,IAAIP,uBAAJ,CACLE,KAAK,CAACM,OADD,EACUL,UAAU,CAACM,UADrB,EACiCN,UAAU,CAACO,MAD5C,EACoDN,SADpD,EAELD,UAAU,CAACQ,SAAX,CAAqBC,QAFhB,CAAP;AAID;;AAED,eAAeX,gBAAf","sourcesContent":["/** Export getVector context for backward compatibility ol5 / ol6\r\n * Create a brand new function for ol5 copy of ol6 function.\r\n * Will be ignored using openlayers-ext package or ol5\r\n */\r\nimport { multiply as multiplyTransform } from 'ol/transform';\r\nimport CanvasImmediateRenderer from 'ol/render/canvas/Immediate';\r\n\r\nfunction getVectorContext(event) {\r\n  const frameState = event.frameState;\r\n  const transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\r\n  return new CanvasImmediateRenderer(\r\n    event.context, frameState.pixelRatio, frameState.extent, transform,\r\n    frameState.viewState.rotation\r\n  );\r\n}\r\n\r\nexport default getVectorContext\r\n"]},"metadata":{},"sourceType":"module"}