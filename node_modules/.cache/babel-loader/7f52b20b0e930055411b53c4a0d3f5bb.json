{"ast":null,"code":"import _objectSpread from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport qs from 'query-string';\nimport BaseObject from 'ol/Object';\n/**\n * Common class to access to a geOps api.\n *\n * @example\n * import { API } from 'mobility-toolbox-js/api';\n *\n * const api = new API({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey]\n * });\n *\n * @classproperty {string} url Url of the service.\n * @classproperty {string} apiKey Api key to access the service.\n */\n\nvar API = /*#__PURE__*/function (_BaseObject) {\n  _inherits(API, _BaseObject);\n\n  var _super = _createSuper(API);\n\n  function API() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, API);\n\n    _this = _super.call(this);\n    /** @ignore */\n\n    _this.url = options.url;\n    /** @ignore */\n\n    _this.apiKey = options.apiKey;\n    return _this;\n  }\n  /**\n   * Append the apiKey before sending the request.\n   * @ignore\n   */\n\n\n  _createClass(API, [{\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function () {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      // Clean requets parameters, removing undefined and null values.\n      var urlParams = _objectSpread(_objectSpread({}, params), {}, {\n        key: this.apiKey\n      });\n\n      var clone = _objectSpread({}, urlParams);\n\n      Object.keys(urlParams).forEach(function (key) {\n        return (clone[key] === undefined || clone[key] === null) && delete clone[key];\n      });\n\n      if (!this.apiKey) {\n        // eslint-disable-next-line no-console\n        return Promise.reject(new Error(\"No apiKey defined for request to \".concat(this.url)));\n      }\n\n      return fetch(\"\".concat(this.url).concat(path, \"?\").concat(qs.stringify(clone)), config).then(function (response) {\n        try {\n          return response.json().then(function (data) {\n            if (data.error) {\n              throw new Error(data.error);\n            }\n\n            return data;\n          });\n        } catch (err) {\n          return Promise.reject(new Error(err));\n        }\n      });\n    })\n  }]);\n\n  return API;\n}(BaseObject);\n\nexport default API;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/mobility-toolbox-js/common/api/api.js"],"names":["qs","BaseObject","API","options","url","apiKey","path","params","config","urlParams","key","clone","Object","keys","forEach","undefined","Promise","reject","Error","fetch","stringify","then","response","json","data","error","err"],"mappings":";;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,UAAP,MAAuB,WAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,G;;;;;AACJ,iBAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB;AACA;;AACA,UAAKC,GAAL,GAAWD,OAAO,CAACC,GAAnB;AAEA;;AACA,UAAKC,MAAL,GAAcF,OAAO,CAACE,MAAtB;AANwB;AAOzB;AAED;AACF;AACA;AACA;;;;;;;;;;;;;;;MACE,YAAsC;AAAA,UAAhCC,IAAgC,uEAAzB,EAAyB;AAAA,UAArBC,MAAqB,uEAAZ,EAAY;AAAA,UAARC,MAAQ;;AACpC;AACA,UAAMC,SAAS,mCAAQF,MAAR;AAAgBG,QAAAA,GAAG,EAAE,KAAKL;AAA1B,QAAf;;AACA,UAAMM,KAAK,qBAAQF,SAAR,CAAX;;AACAG,MAAAA,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,OAAvB,CACE,UAACJ,GAAD;AAAA,eACE,CAACC,KAAK,CAACD,GAAD,CAAL,KAAeK,SAAf,IAA4BJ,KAAK,CAACD,GAAD,CAAL,KAAe,IAA5C,KAAqD,OAAOC,KAAK,CAACD,GAAD,CADnE;AAAA,OADF;;AAIA,UAAI,CAAC,KAAKL,MAAV,EAAkB;AAChB;AACA,eAAOW,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,4CAA8C,KAAKd,GAAnD,EADK,CAAP;AAGD;;AACD,aAAOe,KAAK,WAAI,KAAKf,GAAT,SAAeE,IAAf,cAAuBN,EAAE,CAACoB,SAAH,CAAaT,KAAb,CAAvB,GAA8CH,MAA9C,CAAL,CAA2Da,IAA3D,CACL,UAACC,QAAD,EAAc;AACZ,YAAI;AACF,iBAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACG,IAAD,EAAU;AACpC,gBAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,oBAAM,IAAIP,KAAJ,CAAUM,IAAI,CAACC,KAAf,CAAN;AACD;;AACD,mBAAOD,IAAP;AACD,WALM,CAAP;AAMD,SAPD,CAOE,OAAOE,GAAP,EAAY;AACZ,iBAAOV,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUQ,GAAV,CAAf,CAAP;AACD;AACF,OAZI,CAAP;AAcD,K;;;;EA1CezB,U;;AA6ClB,eAAeC,GAAf","sourcesContent":["import qs from 'query-string';\nimport BaseObject from 'ol/Object';\n\n/**\n * Common class to access to a geOps api.\n *\n * @example\n * import { API } from 'mobility-toolbox-js/api';\n *\n * const api = new API({\n *   url: [yourUrl],\n *   apiKey: [yourApiKey]\n * });\n *\n * @classproperty {string} url Url of the service.\n * @classproperty {string} apiKey Api key to access the service.\n */\nclass API extends BaseObject {\n  constructor(options = {}) {\n    super();\n    /** @ignore */\n    this.url = options.url;\n\n    /** @ignore */\n    this.apiKey = options.apiKey;\n  }\n\n  /**\n   * Append the apiKey before sending the request.\n   * @ignore\n   */\n  fetch(path = '', params = {}, config) {\n    // Clean requets parameters, removing undefined and null values.\n    const urlParams = { ...params, key: this.apiKey };\n    const clone = { ...urlParams };\n    Object.keys(urlParams).forEach(\n      (key) =>\n        (clone[key] === undefined || clone[key] === null) && delete clone[key],\n    );\n    if (!this.apiKey) {\n      // eslint-disable-next-line no-console\n      return Promise.reject(\n        new Error(`No apiKey defined for request to ${this.url}`),\n      );\n    }\n    return fetch(`${this.url}${path}?${qs.stringify(clone)}`, config).then(\n      (response) => {\n        try {\n          return response.json().then((data) => {\n            if (data.error) {\n              throw new Error(data.error);\n            }\n            return data;\n          });\n        } catch (err) {\n          return Promise.reject(new Error(err));\n        }\n      },\n    );\n  }\n}\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}