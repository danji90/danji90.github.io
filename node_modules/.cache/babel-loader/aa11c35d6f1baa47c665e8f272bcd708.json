{"ast":null,"code":"/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaChevronLeft } from 'react-icons/fa';\nimport { Layer } from 'mobility-toolbox-js/ol';\nimport './BaseLayerSwitcher.scss';\nvar propTypes = {\n  /**\n   * An array of [mobility-toolbox-js layers](https://mobility-toolbox-js.geops.io/api/identifiers%20html#ol-layers).\n   */\n  layers: PropTypes.arrayOf(PropTypes.instanceOf(Layer)).isRequired,\n\n  /**\n   * Object containing relative paths to the base layer images. Object\n   * keys need to correspond to layer keys\n   */\n  layerImages: PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * CSS class to apply on the container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Alternative text rendered if layer images can't be loaded\n   */\n  altText: PropTypes.string,\n\n  /**\n   * Button titles.\n   */\n  titles: PropTypes.shape({\n    button: PropTypes.string,\n    openSwitcher: PropTypes.string,\n    closeSwitcher: PropTypes.string\n  }),\n\n  /**\n   * Image (node) rendered in the switcher close button.\n   */\n  closeButtonImage: PropTypes.node,\n\n  /**\n   * Translation function.\n   * @param {function} Translation function returning the translated string.\n   */\n  t: PropTypes.func\n};\nvar defaultProps = {\n  className: 'rs-base-layer-switcher',\n  altText: 'Source not found',\n  titles: {\n    button: 'Base layers',\n    openSwitcher: 'Open Baselayer-Switcher',\n    closeSwitcher: 'Close Baselayer-Switcher'\n  },\n  closeButtonImage: React.createElement(FaChevronLeft, null),\n  layerImages: undefined,\n  t: function t(s) {\n    return s;\n  }\n};\n\nvar getVisibleLayer = function getVisibleLayer(layers) {\n  return layers.find(function (layer) {\n    return layer.visible;\n  });\n};\n\nvar getNextImage = function getNextImage(currentLayer, layers, layerImages) {\n  var currentIndex = layers.indexOf(layers.find(function (layer) {\n    return layer === currentLayer;\n  }));\n  var nextIndex = currentIndex + 1 === layers.length ? 0 : currentIndex + 1;\n  return layerImages[nextIndex];\n};\n\nvar getImageStyle = function getImageStyle(url) {\n  return url ? {\n    backgroundImage: \"url(\" + url + \")\",\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  } : null;\n};\n/**\n * The BaseLayerSwitcher component renders a button interface for switching the visible\n * [mobility-toolbox-js layer](https://mobility-toolbox-js.geops.io/api/identifiers%20html#ol-layers)\n * when defined as base layer.\n */\n\n\nfunction BaseLayerSwitcher(ref) {\n  var layers = ref.layers;\n  var layerImages = ref.layerImages;\n  var className = ref.className;\n  var altText = ref.altText;\n  var titles = ref.titles;\n  var closeButtonImage = ref.closeButtonImage;\n  var t = ref.t;\n  var baseLayers = layers.filter(function (layer) {\n    return layer.isBaseLayer;\n  });\n  var ref$1 = useState(false);\n  var switcherOpen = ref$1[0];\n  var setSwitcherOpen = ref$1[1];\n  var ref$2 = useState(true);\n  var isClosed = ref$2[0];\n  var setIsClosed = ref$2[1];\n  var ref$3 = useState(getVisibleLayer(baseLayers) || baseLayers[0]);\n  var currentLayer = ref$3[0];\n  var setCurrentLayer = ref$3[1];\n  /* Images are loaded from props if provided, fallback from layer */\n\n  var images = layerImages ? Object.keys(layerImages).map(function (layerImage) {\n    return layerImages[layerImage];\n  }) : baseLayers.map(function (layer) {\n    return layer.get('previewImage');\n  });\n  var openClass = switcherOpen ? ' rs-open' : '';\n  var hiddenStyle = switcherOpen && !isClosed ? 'visible' : 'hidden';\n\n  var handleSwitcherClick = function handleSwitcherClick() {\n    if (baseLayers.length === 2) {\n      /* On only two layer options the opener becomes a layer toggle button */\n      var nextLayer = baseLayers.find(function (layer) {\n        return !layer.visible;\n      });\n      currentLayer.setVisible(false);\n      setCurrentLayer(nextLayer);\n      nextLayer.setVisible(true);\n      return;\n    } // eslint-disable-next-line consistent-return\n\n\n    return setSwitcherOpen(true) && setIsClosed(false);\n  };\n\n  var onLayerSelect = function onLayerSelect(layer) {\n    if (!switcherOpen) {\n      setSwitcherOpen(true);\n      return;\n    }\n\n    setCurrentLayer(layer);\n    layer.setVisible(true);\n    baseLayers.filter(function (l) {\n      return l !== layer;\n    }).forEach(function (l) {\n      return l.setVisible(false);\n    });\n    setSwitcherOpen(false);\n  };\n  /* Get next image for closed button */\n\n\n  var nextImage = getNextImage(currentLayer, baseLayers, images);\n  useEffect(function () {\n    /* Ensure correct layer is active on app load */\n    if (currentLayer !== getVisibleLayer(baseLayers)) {\n      setCurrentLayer(getVisibleLayer(baseLayers) || baseLayers[0]);\n    }\n  }, [currentLayer, baseLayers]);\n  useEffect(function () {\n    /* Used for correct layer image render with animation */\n    var timeout;\n\n    if (!switcherOpen) {\n      timeout = setTimeout(function () {\n        setIsClosed(true);\n      }, 200);\n    } else {\n      timeout = setTimeout(function () {\n        setIsClosed(false);\n      }, 800);\n    }\n\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, [switcherOpen]);\n\n  if (!baseLayers || baseLayers.length < 2 || !currentLayer) {\n    return null;\n  }\n\n  var toggleBtn = React.createElement('div', {\n    className: \"rs-base-layer-switcher-btn-wrapper\"\n  }, React.createElement('div', {\n    className: \"rs-base-layer-switcher-close-btn\",\n    role: \"button\",\n    onClick: function onClick() {\n      return setSwitcherOpen(false);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return e.which === 13 && setSwitcherOpen(false);\n    },\n    tabIndex: switcherOpen ? '0' : '-1',\n    'aria-label': titles.closeSwitcher,\n    title: titles.closeSwitcher\n  }, closeButtonImage));\n  return React.createElement('div', {\n    className: \"\" + className + openClass\n  }, React.createElement('div', {\n    className: \"rs-base-layer-switcher-button rs-opener\" + openClass,\n    role: \"button\",\n    title: titles.openSwitcher,\n    'aria-label': titles.openSwitcher,\n    onClick: handleSwitcherClick,\n    onKeyPress: function onKeyPress(e) {\n      if (e.which === 13) {\n        handleSwitcherClick();\n      }\n    },\n    style: getImageStyle(nextImage),\n    tabIndex: \"0\"\n  }, React.createElement('div', {\n    className: \"rs-base-layer-switcher-title\"\n  }, baseLayers.length !== 2 ? titles.button : baseLayers.find(function (layer) {\n    return !layer.visible;\n  }) && t(baseLayers.find(function (layer) {\n    return !layer.visible;\n  }).name)), nextImage ? null : React.createElement('span', {\n    className: \"rs-alt-text\"\n  }, t(altText))), baseLayers.map(function (layer, idx) {\n    var layerName = layer.name;\n    var activeClass = layerName === currentLayer.name ? ' rs-active' : '';\n    var imageStyle = getImageStyle(layerImages ? layerImages[\"\" + layer.key] : layer.get('previewImage'));\n    return React.createElement('div', {\n      key: layer.key,\n      className: \"rs-base-layer-switcher-btn-wrapper\",\n      style: {\n        overflow: hiddenStyle,\n        zIndex: baseLayers.length - idx\n      }\n    }, React.createElement('div', {\n      className: \"rs-base-layer-switcher-button\" + openClass,\n      role: \"button\",\n      title: t(layerName),\n      'aria-label': t(layerName),\n      onClick: function onClick() {\n        return onLayerSelect(layer);\n      },\n      onKeyPress: function onKeyPress(e) {\n        if (e.which === 13) {\n          onLayerSelect(layer);\n        }\n      },\n      style: imageStyle,\n      tabIndex: switcherOpen ? '0' : '-1'\n    }, React.createElement('div', {\n      className: \"rs-base-layer-switcher-title\" + activeClass\n    }, t(layerName)), imageStyle ? null : React.createElement('span', {\n      className: \"rs-alt-text\"\n    }, t(altText))));\n  }), toggleBtn);\n}\n\nBaseLayerSwitcher.propTypes = propTypes;\nBaseLayerSwitcher.defaultProps = defaultProps;\nexport default BaseLayerSwitcher;","map":{"version":3,"sources":["../../../src/components/BaseLayerSwitcher/BaseLayerSwitcher.js"],"names":["const","let"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaChevronLeft } from 'react-icons/fa';\nimport { Layer } from 'mobility-toolbox-js/ol';\n\nimport './BaseLayerSwitcher.scss';\n\nconst propTypes = {\n  /**\n   * An array of [mobility-toolbox-js layers](https://mobility-toolbox-js.geops.io/api/identifiers%20html#ol-layers).\n   */\n  layers: PropTypes.arrayOf(PropTypes.instanceOf(Layer)).isRequired,\n\n  /**\n   * Object containing relative paths to the base layer images. Object\n   * keys need to correspond to layer keys\n   */\n  layerImages: PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * CSS class to apply on the container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Alternative text rendered if layer images can't be loaded\n   */\n  altText: PropTypes.string,\n\n  /**\n   * Button titles.\n   */\n  titles: PropTypes.shape({\n    button: PropTypes.string,\n    openSwitcher: PropTypes.string,\n    closeSwitcher: PropTypes.string,\n  }),\n\n  /**\n   * Image (node) rendered in the switcher close button.\n   */\n  closeButtonImage: PropTypes.node,\n\n  /**\n   * Translation function.\n   * @param {function} Translation function returning the translated string.\n   */\n  t: PropTypes.func,\n};\n\nconst defaultProps = {\n  className: 'rs-base-layer-switcher',\n  altText: 'Source not found',\n  titles: {\n    button: 'Base layers',\n    openSwitcher: 'Open Baselayer-Switcher',\n    closeSwitcher: 'Close Baselayer-Switcher',\n  },\n  closeButtonImage: <FaChevronLeft />,\n  layerImages: undefined,\n  t: (s) => s,\n};\n\nconst getVisibleLayer = (layers) => {\n  return layers.find((layer) => layer.visible);\n};\n\nconst getNextImage = (currentLayer, layers, layerImages) => {\n  const currentIndex = layers.indexOf(\n    layers.find((layer) => layer === currentLayer),\n  );\n  const nextIndex = currentIndex + 1 === layers.length ? 0 : currentIndex + 1;\n  return layerImages[nextIndex];\n};\n\nconst getImageStyle = (url) => {\n  return url\n    ? {\n        backgroundImage: `url(${url})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n      }\n    : null;\n};\n\n/**\n * The BaseLayerSwitcher component renders a button interface for switching the visible\n * [mobility-toolbox-js layer](https://mobility-toolbox-js.geops.io/api/identifiers%20html#ol-layers)\n * when defined as base layer.\n */\n\nfunction BaseLayerSwitcher({\n  layers,\n  layerImages,\n  className,\n  altText,\n  titles,\n  closeButtonImage,\n  t,\n}) {\n  const baseLayers = layers.filter((layer) => layer.isBaseLayer);\n  const [switcherOpen, setSwitcherOpen] = useState(false);\n  const [isClosed, setIsClosed] = useState(true);\n  const [currentLayer, setCurrentLayer] = useState(\n    getVisibleLayer(baseLayers) || baseLayers[0],\n  );\n\n  /* Images are loaded from props if provided, fallback from layer */\n  const images = layerImages\n    ? Object.keys(layerImages).map((layerImage) => layerImages[layerImage])\n    : baseLayers.map((layer) => layer.get('previewImage'));\n\n  const openClass = switcherOpen ? ' rs-open' : '';\n  const hiddenStyle = switcherOpen && !isClosed ? 'visible' : 'hidden';\n\n  const handleSwitcherClick = () => {\n    if (baseLayers.length === 2) {\n      /* On only two layer options the opener becomes a layer toggle button */\n      const nextLayer = baseLayers.find((layer) => !layer.visible);\n      currentLayer.setVisible(false);\n      setCurrentLayer(nextLayer);\n      nextLayer.setVisible(true);\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return setSwitcherOpen(true) && setIsClosed(false);\n  };\n\n  const onLayerSelect = (layer) => {\n    if (!switcherOpen) {\n      setSwitcherOpen(true);\n      return;\n    }\n    setCurrentLayer(layer);\n    layer.setVisible(true);\n    baseLayers.filter((l) => l !== layer).forEach((l) => l.setVisible(false));\n    setSwitcherOpen(false);\n  };\n\n  /* Get next image for closed button */\n  const nextImage = getNextImage(currentLayer, baseLayers, images);\n\n  useEffect(() => {\n    /* Ensure correct layer is active on app load */\n    if (currentLayer !== getVisibleLayer(baseLayers)) {\n      setCurrentLayer(getVisibleLayer(baseLayers) || baseLayers[0]);\n    }\n  }, [currentLayer, baseLayers]);\n\n  useEffect(() => {\n    /* Used for correct layer image render with animation */\n    let timeout;\n    if (!switcherOpen) {\n      timeout = setTimeout(() => {\n        setIsClosed(true);\n      }, 200);\n    } else {\n      timeout = setTimeout(() => {\n        setIsClosed(false);\n      }, 800);\n    }\n    return () => clearTimeout(timeout);\n  }, [switcherOpen]);\n\n  if (!baseLayers || baseLayers.length < 2 || !currentLayer) {\n    return null;\n  }\n\n  const toggleBtn = (\n    <div className=\"rs-base-layer-switcher-btn-wrapper\">\n      <div\n        className=\"rs-base-layer-switcher-close-btn\"\n        role=\"button\"\n        onClick={() => setSwitcherOpen(false)}\n        onKeyPress={(e) => e.which === 13 && setSwitcherOpen(false)}\n        tabIndex={switcherOpen ? '0' : '-1'}\n        aria-label={titles.closeSwitcher}\n        title={titles.closeSwitcher}\n      >\n        {closeButtonImage}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={`${className}${openClass}`}>\n      {\n        <div\n          className={`rs-base-layer-switcher-button rs-opener${openClass}`}\n          role=\"button\"\n          title={titles.openSwitcher}\n          aria-label={titles.openSwitcher}\n          onClick={handleSwitcherClick}\n          onKeyPress={(e) => {\n            if (e.which === 13) {\n              handleSwitcherClick();\n            }\n          }}\n          style={getImageStyle(nextImage)}\n          tabIndex=\"0\"\n        >\n          <div className=\"rs-base-layer-switcher-title\">\n            {baseLayers.length !== 2\n              ? titles.button\n              : baseLayers.find((layer) => !layer.visible) &&\n                t(baseLayers.find((layer) => !layer.visible).name)}\n          </div>\n          {nextImage ? null : <span className=\"rs-alt-text\">{t(altText)}</span>}\n        </div>\n      }\n      {baseLayers.map((layer, idx) => {\n        const layerName = layer.name;\n        const activeClass = layerName === currentLayer.name ? ' rs-active' : '';\n        const imageStyle = getImageStyle(\n          layerImages ? layerImages[`${layer.key}`] : layer.get('previewImage'),\n        );\n        return (\n          <div\n            key={layer.key}\n            className=\"rs-base-layer-switcher-btn-wrapper\"\n            style={{\n              overflow: hiddenStyle,\n              zIndex: baseLayers.length - idx,\n            }}\n          >\n            <div\n              className={`rs-base-layer-switcher-button${openClass}`}\n              role=\"button\"\n              title={t(layerName)}\n              aria-label={t(layerName)}\n              onClick={() => onLayerSelect(layer)}\n              onKeyPress={(e) => {\n                if (e.which === 13) {\n                  onLayerSelect(layer);\n                }\n              }}\n              style={imageStyle}\n              tabIndex={switcherOpen ? '0' : '-1'}\n            >\n              <div className={`rs-base-layer-switcher-title${activeClass}`}>\n                {t(layerName)}\n              </div>\n              {imageStyle ? null : (\n                <span className=\"rs-alt-text\">{t(altText)}</span>\n              )}\n            </div>\n          </div>\n        );\n      })}\n      {toggleBtn}\n    </div>\n  );\n}\n\nBaseLayerSwitcher.propTypes = propTypes;\nBaseLayerSwitcher.defaultProps = defaultProps;\n\nexport default BaseLayerSwitcher;\n"]},"metadata":{},"sourceType":"module"}