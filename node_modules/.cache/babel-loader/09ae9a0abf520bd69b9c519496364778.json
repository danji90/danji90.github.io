{"ast":null,"code":"import _slicedToArray from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/daniel/gitRepos/danji90.github.io/src/components/Navbar/Navbar.js\";\n\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IoMdArrowDropdown, IoMdArrowDropup } from 'react-icons/io';\nimport { AppBar, Tabs, Tab, List, ListItem, Hidden, SwipeableDrawer, Button, Popper, Paper, MenuList, MenuItem } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Menu as MenuBtn, Close } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setMenuOpen, setXpOpen } from '../../model/actions';\nimport Portrait from '../Portrait/Portrait';\nimport DropDown from '../DropDown/DropDown';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      backgroundColor: '#282c34',\n      height: 70,\n      alignItems: 'center'\n    },\n    tabs: {\n      color: 'white',\n      width: '80%',\n      margin: 'auto',\n      overflow: 'visible'\n    },\n    tabsFixed: {\n      overflow: 'visible !important'\n    },\n    tabLabel: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    collapse: {\n      position: 'fixed',\n      width: '100%',\n      top: 48,\n      height: 0,\n      overflow: 'hidden',\n      borderBottom: '1px solid #35353520',\n      zIndex: 1000\n    },\n    open: {\n      height: '100vh',\n      boxShadow: '0px 10px 15px #35353520'\n    },\n    list: {\n      width: '80vw',\n      padding: 0,\n      '& .active': {\n        fontWeight: 'bold'\n      }\n    },\n    listItem: {\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: 18\n    },\n    closeMenuBtn: {\n      position: 'fixed',\n      height: 20,\n      left: 6,\n      top: 25,\n      color: 'white',\n      zIndex: 1400\n    },\n    openMenuBtn: {\n      padding: 20,\n      color: 'white'\n    },\n    dropdownListItem: {\n      height: '100%',\n      width: '100%'\n    },\n    experienceDropdown: {\n      backgroundColor: '#282c34',\n      width: '100%'\n    },\n    experienceItem: {\n      fontSize: '1rem',\n      justifyContent: 'center',\n      margin: 'auto',\n      color: 'rgba(255, 255, 255, 0.7)',\n      '&:hover': {\n        color: 'rgba(255, 255, 255, 1)'\n      },\n      padding: '20px 0'\n    },\n    portraitWrapper: {\n      width: 200,\n      margin: 'auto'\n    }\n  };\n});\n\nvar renderExperienceMenu = function renderExperienceMenu(tabs, onItemClick, classes, xpOpen, anchor, dispatch, setMenuAnchor) {\n  return /*#__PURE__*/React.createElement(Popper, {\n    open: xpOpen,\n    anchorEl: anchor,\n    id: \"menu-list-grow\",\n    style: {\n      zIndex: 9999,\n      width: anchor.offsetWidth\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    onMouseLeave: function onMouseLeave(evt) {\n      var _evt$relatedTarget;\n\n      var movingTo = (_evt$relatedTarget = evt.relatedTarget) === null || _evt$relatedTarget === void 0 ? void 0 : _evt$relatedTarget.tagName;\n      if (movingTo === 'SPAN') return;\n      dispatch(setXpOpen(false));\n      setMenuAnchor(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    className: classes.experienceDropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, tabs.map(function (tab) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      className: classes.experienceItem,\n      key: tab.id,\n      onClick: function onClick() {\n        return onItemClick(tab);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, tab.name);\n  }))));\n};\n\nvar NavBar = function NavBar() {\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState('home'),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchor = _useState4[0],\n      setMenuAnchor = _useState4[1];\n\n  var sections = useSelector(function (state) {\n    return state.sections;\n  }); // const activeSection = useSelector((state) => state.activeSection);\n\n  var xpOpen = useSelector(function (state) {\n    return state.xpOpen;\n  });\n  var menuOpen = useSelector(function (state) {\n    return state.menuOpen;\n  });\n  var onItemClick = useCallback(function (section) {\n    if (section.id === 'experience') {\n      // dispatch(setActiveSection(activeSection));\n      dispatch(setXpOpen(!xpOpen));\n      return;\n    }\n\n    dispatch(setMenuOpen(false));\n    dispatch(setXpOpen(false));\n    window.location.hash = section.id;\n    var targetElement = document.getElementById(section.id);\n    targetElement && targetElement.scrollIntoView(); // dispatch(setActiveSection(section));\n  }, [dispatch, xpOpen]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    color: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, !menuOpen && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return dispatch(setMenuOpen(!menuOpen));\n    },\n    className: classes.openMenuBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    TabIndicatorProps: {\n      style: {\n        backgroundColor: '#63a000'\n      }\n    },\n    className: classes.tabs,\n    classes: {\n      fixed: classes.tabsFixed\n    },\n    value: value,\n    onChange: function onChange(event, newValue) {\n      setValue(newValue);\n    },\n    variant: \"fullWidth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, sections.filter(function (sect) {\n    return sect.tab;\n  }).map(function (sect) {\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: sect.id,\n      href: \"#\".concat(sect.id),\n      value: sect.id,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tabLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, sect.name, sect.id === 'experience' && (xpOpen ? /*#__PURE__*/React.createElement(IoMdArrowDropup, {\n        style: {\n          padding: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(IoMdArrowDropdown, {\n        style: {\n          padding: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }))),\n      className: classes.tab,\n      onMouseEnter: function onMouseEnter(evt) {\n        setValue(sect.id);\n        if (sect.id !== 'experience') return;\n        dispatch(setXpOpen(true));\n        setMenuAnchor(evt.currentTarget);\n      },\n      onMouseLeave: function onMouseLeave(evt) {\n        var _evt$relatedTarget2;\n\n        var movingTo = (_evt$relatedTarget2 = evt.relatedTarget) === null || _evt$relatedTarget2 === void 0 ? void 0 : _evt$relatedTarget2.tagName;\n        if (movingTo === 'SPAN' || movingTo === 'UL') return;\n        dispatch(setXpOpen(false));\n        setMenuAnchor(null);\n      },\n      \"aria-owns\": xpOpen ? 'menu-list-grow' : undefined,\n      \"aria-haspopup\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    });\n  })), anchor && renderExperienceMenu(sections.filter(function (item) {\n    return item.nav === 'experience' && item.id !== 'experience';\n  }), onItemClick, classes, xpOpen, anchor, dispatch, setMenuAnchor))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, menuOpen && /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.closeMenuBtn,\n    onClick: function onClick() {\n      dispatch(setXpOpen(false));\n      dispatch(setMenuOpen(false));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    open: menuOpen,\n    onClose: function onClose() {\n      dispatch(setXpOpen(false));\n      dispatch(setMenuOpen(false));\n    },\n    onOpen: function onOpen() {\n      return dispatch(setMenuOpen(true));\n    },\n    anchor: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.portraitWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Portrait, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, sections.filter(function (sect) {\n    return sect.tab;\n  }).map(function (sect, idx, arr) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: sect.id,\n      href: \"#\".concat(sect.id),\n      value: sect.id,\n      title: sect.name,\n      active: (value === sect.id).toString(),\n      button: sect.id !== 'experience',\n      divider: idx + 1 !== arr.length,\n      onClick: function onClick() {\n        return onItemClick(sect);\n      },\n      style: {\n        padding: sect.id !== 'experience' ? 25 : 0\n      },\n      className: classes.listItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, sect.id !== 'experience' ? sect.name : /*#__PURE__*/React.createElement(\"div\", {\n      key: sect.id,\n      className: classes.dropdownListItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      key: sect.id,\n      title: sect.name,\n      style: {\n        width: '100%',\n        height: 72,\n        fontSize: 18,\n        backgroundColor: 'white',\n        color: '#565656'\n      },\n      onClick: function onClick() {\n        return onItemClick(sect);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, sect.name, xpOpen ? /*#__PURE__*/React.createElement(IoMdArrowDropup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(IoMdArrowDropdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(DropDown, {\n      items: sections.filter(function (sec) {\n        return sec.nav === 'experience' && !sec.tab;\n      }),\n      onItemClick: onItemClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    })));\n  })))));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/src/components/Navbar/Navbar.js"],"names":["React","useState","useCallback","useDispatch","useSelector","IoMdArrowDropdown","IoMdArrowDropup","AppBar","Tabs","Tab","List","ListItem","Hidden","SwipeableDrawer","Button","Popper","Paper","MenuList","MenuItem","IconButton","Menu","MenuBtn","Close","makeStyles","setMenuOpen","setXpOpen","Portrait","DropDown","useStyles","theme","appBar","backgroundColor","height","alignItems","tabs","color","width","margin","overflow","tabsFixed","tabLabel","display","collapse","position","top","borderBottom","zIndex","open","boxShadow","list","padding","fontWeight","listItem","justifyContent","fontSize","closeMenuBtn","left","openMenuBtn","dropdownListItem","experienceDropdown","experienceItem","portraitWrapper","renderExperienceMenu","onItemClick","classes","xpOpen","anchor","dispatch","setMenuAnchor","offsetWidth","evt","movingTo","relatedTarget","tagName","map","tab","id","name","NavBar","value","setValue","sections","state","menuOpen","section","window","location","hash","targetElement","document","getElementById","scrollIntoView","style","fixed","event","newValue","filter","sect","currentTarget","undefined","item","nav","idx","arr","toString","length","sec"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IoMdArrowDropdown, IoMdArrowDropup } from 'react-icons/io';\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  List,\n  ListItem,\n  Hidden,\n  SwipeableDrawer,\n  Button,\n  Popper,\n  Paper,\n  MenuList,\n  MenuItem,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Menu as MenuBtn, Close } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setMenuOpen, setXpOpen } from '../../model/actions';\n\nimport Portrait from '../Portrait/Portrait';\nimport DropDown from '../DropDown/DropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: '#282c34',\n    height: 70,\n    alignItems: 'center',\n  },\n  tabs: {\n    color: 'white',\n    width: '80%',\n    margin: 'auto',\n    overflow: 'visible',\n  },\n  tabsFixed: {\n    overflow: 'visible !important',\n  },\n  tabLabel: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  collapse: {\n    position: 'fixed',\n    width: '100%',\n    top: 48,\n    height: 0,\n    overflow: 'hidden',\n    borderBottom: '1px solid #35353520',\n    zIndex: 1000,\n  },\n  open: {\n    height: '100vh',\n    boxShadow: '0px 10px 15px #35353520',\n  },\n  list: {\n    width: '80vw',\n    padding: 0,\n    '& .active': {\n      fontWeight: 'bold',\n    },\n  },\n  listItem: {\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: 18,\n  },\n  closeMenuBtn: {\n    position: 'fixed',\n    height: 20,\n    left: 6,\n    top: 25,\n    color: 'white',\n    zIndex: 1400,\n  },\n  openMenuBtn: {\n    padding: 20,\n    color: 'white',\n  },\n  dropdownListItem: {\n    height: '100%',\n    width: '100%',\n  },\n  experienceDropdown: {\n    backgroundColor: '#282c34',\n    width: '100%',\n  },\n  experienceItem: {\n    fontSize: '1rem',\n    justifyContent: 'center',\n    margin: 'auto',\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover': {\n      color: 'rgba(255, 255, 255, 1)',\n    },\n    padding: '20px 0',\n  },\n  portraitWrapper: {\n    width: 200,\n    margin: 'auto',\n  },\n}));\n\nconst renderExperienceMenu = (\n  tabs,\n  onItemClick,\n  classes,\n  xpOpen,\n  anchor,\n  dispatch,\n  setMenuAnchor,\n) => {\n  return (\n    <Popper\n      open={xpOpen}\n      anchorEl={anchor}\n      id=\"menu-list-grow\"\n      style={{ zIndex: 9999, width: anchor.offsetWidth }}\n    >\n      <Paper\n        onMouseLeave={(evt) => {\n          const movingTo = evt.relatedTarget?.tagName;\n          if (movingTo === 'SPAN') return;\n          dispatch(setXpOpen(false));\n          setMenuAnchor(null);\n        }}\n      >\n        <MenuList className={classes.experienceDropdown}>\n          {tabs.map((tab) => (\n            <MenuItem\n              className={classes.experienceItem}\n              key={tab.id}\n              onClick={() => onItemClick(tab)}\n            >\n              {tab.name}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Paper>\n    </Popper>\n  );\n};\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('home');\n  const [anchor, setMenuAnchor] = useState();\n  const sections = useSelector((state) => state.sections);\n  // const activeSection = useSelector((state) => state.activeSection);\n  const xpOpen = useSelector((state) => state.xpOpen);\n  const menuOpen = useSelector((state) => state.menuOpen);\n  const onItemClick = useCallback(\n    (section) => {\n      if (section.id === 'experience') {\n        // dispatch(setActiveSection(activeSection));\n        dispatch(setXpOpen(!xpOpen));\n        return;\n      }\n      dispatch(setMenuOpen(false));\n      dispatch(setXpOpen(false));\n      window.location.hash = section.id;\n      const targetElement = document.getElementById(section.id);\n      targetElement && targetElement.scrollIntoView();\n      // dispatch(setActiveSection(section));\n    },\n    [dispatch, xpOpen],\n  );\n\n  return (\n    <>\n      <AppBar className={classes.appBar} color=\"transparent\">\n        <Hidden mdUp>\n          {!menuOpen && (\n            <IconButton\n              onClick={() => dispatch(setMenuOpen(!menuOpen))}\n              className={classes.openMenuBtn}\n            >\n              <MenuBtn />\n            </IconButton>\n          )}\n        </Hidden>\n        <Hidden smDown>\n          <Tabs\n            TabIndicatorProps={{ style: { backgroundColor: '#63a000' } }}\n            className={classes.tabs}\n            classes={{ fixed: classes.tabsFixed }}\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            variant=\"fullWidth\"\n          >\n            {sections\n              .filter((sect) => sect.tab)\n              .map((sect) => {\n                return (\n                  <Tab\n                    key={sect.id}\n                    href={`#${sect.id}`}\n                    value={sect.id}\n                    label={(\n                      <span className={classes.tabLabel}>\n                        {sect.name}\n                        {sect.id === 'experience' &&\n                          (xpOpen ? (\n                            <IoMdArrowDropup style={{ padding: 5 }} />\n                          ) : (\n                            <IoMdArrowDropdown style={{ padding: 5 }} />\n                          ))}\n                      </span>\n                    )}\n                    className={classes.tab}\n                    onMouseEnter={(evt) => {\n                      setValue(sect.id);\n                      if (sect.id !== 'experience') return;\n                      dispatch(setXpOpen(true));\n                      setMenuAnchor(evt.currentTarget);\n                    }}\n                    onMouseLeave={(evt) => {\n                      const movingTo = evt.relatedTarget?.tagName;\n                      if (movingTo === 'SPAN' || movingTo === 'UL') return;\n                      dispatch(setXpOpen(false));\n                      setMenuAnchor(null);\n                    }}\n                    aria-owns={xpOpen ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                  />\n                );\n              })}\n          </Tabs>\n          {anchor &&\n            renderExperienceMenu(\n              sections.filter(\n                (item) => item.nav === 'experience' && item.id !== 'experience',\n              ),\n              onItemClick,\n              classes,\n              xpOpen,\n              anchor,\n              dispatch,\n              setMenuAnchor,\n            )}\n        </Hidden>\n      </AppBar>\n\n      <Hidden mdUp>\n        {menuOpen && (\n          <IconButton\n            className={classes.closeMenuBtn}\n            onClick={() => {\n              dispatch(setXpOpen(false));\n              dispatch(setMenuOpen(false));\n            }}\n          >\n            <Close />\n          </IconButton>\n        )}\n        <SwipeableDrawer\n          open={menuOpen}\n          onClose={() => {\n            dispatch(setXpOpen(false));\n            dispatch(setMenuOpen(false));\n          }}\n          onOpen={() => dispatch(setMenuOpen(true))}\n          anchor=\"right\"\n        >\n          <div className={classes.portraitWrapper}>\n            <Portrait />\n          </div>\n          <List className={classes.list}>\n            {sections\n              .filter((sect) => sect.tab)\n              .map((sect, idx, arr) => {\n                return (\n                  <ListItem\n                    key={sect.id}\n                    href={`#${sect.id}`}\n                    value={sect.id}\n                    title={sect.name}\n                    active={(value === sect.id).toString()}\n                    button={sect.id !== 'experience'}\n                    divider={idx + 1 !== arr.length}\n                    onClick={() => onItemClick(sect)}\n                    style={{ padding: sect.id !== 'experience' ? 25 : 0 }}\n                    className={classes.listItem}\n                  >\n                    {sect.id !== 'experience' ? (\n                      sect.name\n                    ) : (\n                      <div key={sect.id} className={classes.dropdownListItem}>\n                        <Button\n                          key={sect.id}\n                          title={sect.name}\n                          style={{\n                            width: '100%',\n                            height: 72,\n                            fontSize: 18,\n                            backgroundColor: 'white',\n                            color: '#565656',\n                          }}\n                          onClick={() => onItemClick(sect)}\n                        >\n                          {sect.name}\n                          {xpOpen ? <IoMdArrowDropup /> : <IoMdArrowDropdown />}\n                        </Button>\n                        <DropDown\n                          items={sections.filter(\n                            (sec) => sec.nav === 'experience' && !sec.tab,\n                          )}\n                          onItemClick={onItemClick}\n                        />\n                      </div>\n                    )}\n                  </ListItem>\n                );\n              })}\n          </List>\n        </SwipeableDrawer>\n      </Hidden>\n    </>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}