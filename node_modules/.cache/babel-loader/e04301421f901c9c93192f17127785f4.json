{"ast":null,"code":"/**\n * Get a Date object as UTC date string .\n * ex: 2019 09 01\n * @ignore\n */\nexport var getUTCDateString = function getUTCDateString() {\n  var now = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n  var month = (now.getUTCMonth() + 1).toString();\n  month = month.length === 1 ? \"0\".concat(month) : month;\n  var day = now.getUTCDate().toString();\n  day = day.length === 1 ? \"0\".concat(day) : day;\n  return [now.getUTCFullYear(), month, day].join('');\n};\n/**\n * Get the UTC time string of Date object.\n * ex: 09:05:01.123\n * @ignore\n */\n\nexport var getUTCTimeString = function getUTCTimeString(date) {\n  return [date.getUTCHours(), date.getUTCMinutes(), \"\".concat(date.getUTCSeconds(), \".\").concat(date.getUTCMilliseconds())].join(':');\n};\n/**\n * Returns a string representation of a number, with a zero if the number is lower than 10.\n * @ignore\n */\n\nexport var pad = function pad(integer) {\n  return integer < 10 ? \"0\".concat(integer) : integer;\n};\n/**\n * Returns a 'hh:mm' string from a time in ms.\n * @param {Number} timeInMs Time in milliseconds.\n * @ignore\n */\n\nexport var getHoursAndMinutes = function getHoursAndMinutes(timeInMs) {\n  if (!timeInMs || timeInMs <= 0) {\n    return '';\n  }\n\n  var date = new Date(timeInMs);\n  return \"\".concat(pad(date.getHours()), \":\").concat(pad(date.getMinutes()));\n};\n/**\n * Returns a string representing a delay.\n * @param {Number} timeInMs Delay time in milliseconds.\n * @ignore\n */\n\nexport var getDelayString = function getDelayString(timeInMs) {\n  var h = Math.floor(timeInMs / 3600000);\n  var m = Math.floor(timeInMs % 3600000 / 60000);\n  var s = Math.floor(timeInMs % 3600000 % 60000 / 1000);\n\n  if (s === 0 && h === 0 && m === 0) {\n    return '0';\n  }\n\n  if (s === 0 && h === 0) {\n    return \"\".concat(m, \"m\");\n  }\n\n  if (s === 0) {\n    return \"\".concat(h, \"h\").concat(m, \"m\");\n  }\n\n  if (m === 0 && h === 0) {\n    return \"\".concat(s, \"s\");\n  }\n\n  if (h === 0) {\n    return \"\".concat(m, \"m\").concat(s, \"s\");\n  }\n\n  return \"\".concat(h, \"h\").concat(m, \"m\").concat(s, \"s\");\n};","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/mobility-toolbox-js/common/timeUtils.js"],"names":["getUTCDateString","now","Date","month","getUTCMonth","toString","length","day","getUTCDate","getUTCFullYear","join","getUTCTimeString","date","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","pad","integer","getHoursAndMinutes","timeInMs","getHours","getMinutes","getDelayString","h","Math","floor","m","s"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAsB;AAAA,MAArBC,GAAqB,uEAAf,IAAIC,IAAJ,EAAe;AACpD,MAAIC,KAAK,GAAG,CAACF,GAAG,CAACG,WAAJ,KAAoB,CAArB,EAAwBC,QAAxB,EAAZ;AACAF,EAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,KAAiB,CAAjB,cAAyBH,KAAzB,IAAmCA,KAA3C;AACA,MAAII,GAAG,GAAGN,GAAG,CAACO,UAAJ,GAAiBH,QAAjB,EAAV;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACD,MAAJ,KAAe,CAAf,cAAuBC,GAAvB,IAA+BA,GAArC;AAEA,SAAO,CAACN,GAAG,CAACQ,cAAJ,EAAD,EAAuBN,KAAvB,EAA8BI,GAA9B,EAAmCG,IAAnC,CAAwC,EAAxC,CAAP;AACD,CAPM;AASP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,SAC9B,CACEA,IAAI,CAACC,WAAL,EADF,EAEED,IAAI,CAACE,aAAL,EAFF,YAGKF,IAAI,CAACG,aAAL,EAHL,cAG6BH,IAAI,CAACI,kBAAL,EAH7B,GAIEN,IAJF,CAIO,GAJP,CAD8B;AAAA,CAAzB;AAOP;AACA;AACA;AACA;;AACA,OAAO,IAAMO,GAAG,GAAG,SAANA,GAAM,CAACC,OAAD;AAAA,SAAcA,OAAO,GAAG,EAAV,cAAmBA,OAAnB,IAA+BA,OAA7C;AAAA,CAAZ;AAEP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAC9C,MAAI,CAACA,QAAD,IAAaA,QAAQ,IAAI,CAA7B,EAAgC;AAC9B,WAAO,EAAP;AACD;;AACD,MAAMR,IAAI,GAAG,IAAIV,IAAJ,CAASkB,QAAT,CAAb;AACA,mBAAUH,GAAG,CAACL,IAAI,CAACS,QAAL,EAAD,CAAb,cAAkCJ,GAAG,CAACL,IAAI,CAACU,UAAL,EAAD,CAArC;AACD,CANM;AAQP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACH,QAAD,EAAc;AAC1C,MAAMI,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,GAAG,OAAtB,CAAV;AACA,MAAMO,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAYN,QAAQ,GAAG,OAAZ,GAAuB,KAAlC,CAAV;AACA,MAAMQ,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAaN,QAAQ,GAAG,OAAZ,GAAuB,KAAxB,GAAiC,IAA5C,CAAV;;AAEA,MAAIQ,CAAC,KAAK,CAAN,IAAWJ,CAAC,KAAK,CAAjB,IAAsBG,CAAC,KAAK,CAAhC,EAAmC;AACjC,WAAO,GAAP;AACD;;AACD,MAAIC,CAAC,KAAK,CAAN,IAAWJ,CAAC,KAAK,CAArB,EAAwB;AACtB,qBAAUG,CAAV;AACD;;AACD,MAAIC,CAAC,KAAK,CAAV,EAAa;AACX,qBAAUJ,CAAV,cAAeG,CAAf;AACD;;AACD,MAAIA,CAAC,KAAK,CAAN,IAAWH,CAAC,KAAK,CAArB,EAAwB;AACtB,qBAAUI,CAAV;AACD;;AACD,MAAIJ,CAAC,KAAK,CAAV,EAAa;AACX,qBAAUG,CAAV,cAAeC,CAAf;AACD;;AACD,mBAAUJ,CAAV,cAAeG,CAAf,cAAoBC,CAApB;AACD,CArBM","sourcesContent":["/**\n * Get a Date object as UTC date string .\n * ex: 2019 09 01\n * @ignore\n */\nexport const getUTCDateString = (now = new Date()) => {\n  let month = (now.getUTCMonth() + 1).toString();\n  month = month.length === 1 ? `0${month}` : month;\n  let day = now.getUTCDate().toString();\n  day = day.length === 1 ? `0${day}` : day;\n\n  return [now.getUTCFullYear(), month, day].join('');\n};\n\n/**\n * Get the UTC time string of Date object.\n * ex: 09:05:01.123\n * @ignore\n */\nexport const getUTCTimeString = (date) =>\n  [\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    `${date.getUTCSeconds()}.${date.getUTCMilliseconds()}`,\n  ].join(':');\n\n/**\n * Returns a string representation of a number, with a zero if the number is lower than 10.\n * @ignore\n */\nexport const pad = (integer) => (integer < 10 ? `0${integer}` : integer);\n\n/**\n * Returns a 'hh:mm' string from a time in ms.\n * @param {Number} timeInMs Time in milliseconds.\n * @ignore\n */\nexport const getHoursAndMinutes = (timeInMs) => {\n  if (!timeInMs || timeInMs <= 0) {\n    return '';\n  }\n  const date = new Date(timeInMs);\n  return `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n};\n\n/**\n * Returns a string representing a delay.\n * @param {Number} timeInMs Delay time in milliseconds.\n * @ignore\n */\nexport const getDelayString = (timeInMs) => {\n  const h = Math.floor(timeInMs / 3600000);\n  const m = Math.floor((timeInMs % 3600000) / 60000);\n  const s = Math.floor(((timeInMs % 3600000) % 60000) / 1000);\n\n  if (s === 0 && h === 0 && m === 0) {\n    return '0';\n  }\n  if (s === 0 && h === 0) {\n    return `${m}m`;\n  }\n  if (s === 0) {\n    return `${h}h${m}m`;\n  }\n  if (m === 0 && h === 0) {\n    return `${s}s`;\n  }\n  if (h === 0) {\n    return `${m}m${s}s`;\n  }\n  return `${h}h${m}m${s}s`;\n};\n"]},"metadata":{},"sourceType":"module"}