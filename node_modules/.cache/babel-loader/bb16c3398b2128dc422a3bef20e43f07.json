{"ast":null,"code":"import { unByKey } from 'ol/Observable';\n/**\n * A layer service class to handle layer adding, removing and visiblity.\n */\n\nvar LayerService = function LayerService(layers) {\n  this.layers = layers;\n  this.callbacks = {};\n  this.keys = [];\n  this.listenChangeEvt();\n};\n\nLayerService.prototype.addLayer = function addLayer(layer) {\n  this.layers.push(layer);\n};\n\nLayerService.prototype.getLayers = function getLayers() {\n  return this.layers;\n};\n\nLayerService.prototype.setLayers = function setLayers(layers) {\n  this.layers = layers;\n  this.listenChangeEvt(); // When we change the layers we trigger an change:layers event\n\n  (this.callbacks['change:layers'] || []).forEach(function (cb) {\n    return cb(layers);\n  });\n};\n\nLayerService.prototype.getLayersAsFlatArray = function getLayersAsFlatArray(optLayers) {\n  var this$1 = this;\n  var layers = [];\n  (optLayers || this.getLayers() || []).forEach(function (l) {\n    layers.push(l);\n    var children = l.children;\n    layers = layers.concat(this$1.getLayersAsFlatArray(children));\n  });\n  return layers;\n};\n\nLayerService.prototype.getLayer = function getLayer(name) {\n  return this.getLayersAsFlatArray().find(function (l) {\n    return l.name === name;\n  });\n};\n\nLayerService.prototype.getParent = function getParent(child) {\n  return this.getLayersAsFlatArray().find(function (l) {\n    return !!l.children.includes(child);\n  });\n};\n\nLayerService.prototype.getParents = function getParents(child) {\n  var layer = child;\n  var parents = [];\n  var parentLayer;\n\n  do {\n    parentLayer = this.getParent(layer);\n\n    if (parentLayer) {\n      parents.push(parentLayer);\n      layer = parentLayer;\n    }\n  } while (parentLayer);\n\n  return parents;\n};\n\nLayerService.prototype.getRadioGroupLayers = function getRadioGroupLayers(radioGroupName) {\n  if (radioGroupName) {\n    return this.getLayersAsFlatArray().filter(function (l) {\n      return l.get('radioGroup') === radioGroupName;\n    });\n  }\n\n  return null;\n};\n\nLayerService.prototype.getBaseLayers = function getBaseLayers() {\n  return this.getLayersAsFlatArray().filter(function (l) {\n    return l.isBaseLayer;\n  });\n};\n\nLayerService.prototype.getQueryableLayers = function getQueryableLayers() {\n  return this.getLayersAsFlatArray().filter(function (layer) {\n    return layer.visible && layer.isQueryable;\n  });\n};\n\nLayerService.prototype.getFeatureInfoAtCoordinate = function getFeatureInfoAtCoordinate(coordinate, layers) {\n  var promises = (layers || this.getQueryableLayers()).map(function (layer) {\n    return layer.getFeatureInfoAtCoordinate(coordinate).then(function (featureInfo) {\n      return featureInfo;\n    });\n  });\n  return Promise.all(promises);\n};\n\nLayerService.prototype.on = function on(evt, callback) {\n  this.un(evt, callback);\n  this.callbacks[evt] = this.callbacks[evt] || [];\n  this.callbacks[evt].push(callback);\n};\n\nLayerService.prototype.un = function un(evt, callback) {\n  for (var i = 0; i < (this.callbacks[evt] || []).length; i += 1) {\n    if (callback === this.callbacks[evt][i]) {\n      this.callbacks[evt].splice(i, 1);\n      break;\n    }\n  }\n};\n\nLayerService.prototype.listenChangeEvt = function listenChangeEvt() {\n  var this$1 = this;\n\n  if (this.keys) {\n    unByKey(this.keys);\n    this.keys = [];\n  }\n\n  this.getLayersAsFlatArray().forEach(function (layer) {\n    this$1.keys.push(layer.on('change:copyright', function (evt) {\n      (this$1.callbacks['change:copyright'] || []).forEach(function (cb) {\n        return cb(evt.target);\n      });\n    }), layer.on('change:visible', function (evt) {\n      var ref = evt.target;\n      var visible = ref.visible; // Apply to siblings only if it's a radio group.\n\n      if (!evt.stopPropagationSiblings && layer.get('radioGroup') && visible) {\n        var siblings = this$1.getRadioGroupLayers(layer.get('radioGroup')).filter(function (l) {\n          return l !== layer;\n        });\n        siblings.forEach(function (s) {\n          if (visible && s.get('radioGroup') && evt.target.get('radioGroup') === s.get('radioGroup')) {\n            s.setVisible(false, false, true, true);\n          }\n        });\n      } // Apply to children\n\n\n      if (!evt.stopPropagationDown && layer.children) {\n        layer.children.forEach(function (child) {\n          child.setVisible(visible, false, true, false);\n        });\n      } // Apply to parent only if:\n      // - a child is visible\n      // - all children are hidden\n\n\n      var parentLayer = this$1.getParent(layer);\n\n      if (!evt.stopPropagationUp && parentLayer && (visible || !visible && !parentLayer.children.find(function (c) {\n        return c.visible;\n      }))) {\n        parentLayer.setVisible(visible, true, false, false);\n      }\n\n      (this$1.callbacks['change:visible'] || []).forEach(function (cb) {\n        return cb(evt.target);\n      });\n    }));\n  });\n};\n\nexport default LayerService;","map":{"version":3,"sources":["../src/LayerService.js"],"names":["let","this","const"],"mappings":"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","sourcesContent":["import { unByKey } from 'ol/Observable';\n\n/**\n * A layer service class to handle layer adding, removing and visiblity.\n */\nexport default class LayerService {\n  constructor(layers) {\n    this.layers = layers;\n    this.callbacks = {};\n    this.keys = [];\n    this.listenChangeEvt();\n  }\n\n  addLayer(layer) {\n    this.layers.push(layer);\n  }\n\n  getLayers() {\n    return this.layers;\n  }\n\n  setLayers(layers) {\n    this.layers = layers;\n    this.listenChangeEvt();\n    // When we change the layers we trigger an change:layers event\n    (this.callbacks['change:layers'] || []).forEach((cb) => cb(layers));\n  }\n\n  getLayersAsFlatArray(optLayers) {\n    let layers = [];\n    (optLayers || this.getLayers() || []).forEach((l) => {\n      layers.push(l);\n      const { children } = l;\n      layers = layers.concat(this.getLayersAsFlatArray(children));\n    });\n    return layers;\n  }\n\n  getLayer(name) {\n    return this.getLayersAsFlatArray().find((l) => l.name === name);\n  }\n\n  getParent(child) {\n    return this.getLayersAsFlatArray().find(\n      (l) => !!l.children.includes(child),\n    );\n  }\n\n  getParents(child) {\n    let layer = child;\n    const parents = [];\n\n    let parentLayer;\n    do {\n      parentLayer = this.getParent(layer);\n      if (parentLayer) {\n        parents.push(parentLayer);\n        layer = parentLayer;\n      }\n    } while (parentLayer);\n\n    return parents;\n  }\n\n  getRadioGroupLayers(radioGroupName) {\n    if (radioGroupName) {\n      return this.getLayersAsFlatArray().filter(\n        (l) => l.get('radioGroup') === radioGroupName,\n      );\n    }\n\n    return null;\n  }\n\n  getBaseLayers() {\n    return this.getLayersAsFlatArray().filter((l) => l.isBaseLayer);\n  }\n\n  getQueryableLayers() {\n    return this.getLayersAsFlatArray().filter(\n      (layer) => layer.visible && layer.isQueryable,\n    );\n  }\n\n  getFeatureInfoAtCoordinate(coordinate, layers) {\n    const promises = (layers || this.getQueryableLayers()).map((layer) => {\n      return layer\n        .getFeatureInfoAtCoordinate(coordinate)\n        .then((featureInfo) => {\n          return featureInfo;\n        });\n    });\n    return Promise.all(promises);\n  }\n\n  on(evt, callback) {\n    this.un(evt, callback);\n    this.callbacks[evt] = this.callbacks[evt] || [];\n    this.callbacks[evt].push(callback);\n  }\n\n  un(evt, callback) {\n    for (let i = 0; i < (this.callbacks[evt] || []).length; i += 1) {\n      if (callback === this.callbacks[evt][i]) {\n        this.callbacks[evt].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  listenChangeEvt() {\n    if (this.keys) {\n      unByKey(this.keys);\n      this.keys = [];\n    }\n    this.getLayersAsFlatArray().forEach((layer) => {\n      this.keys.push(\n        layer.on('change:copyright', (evt) => {\n          (this.callbacks['change:copyright'] || []).forEach((cb) =>\n            cb(evt.target),\n          );\n        }),\n        layer.on('change:visible', (evt) => {\n          const { visible } = evt.target;\n\n          // Apply to siblings only if it's a radio group.\n          if (\n            !evt.stopPropagationSiblings &&\n            layer.get('radioGroup') &&\n            visible\n          ) {\n            const siblings = this.getRadioGroupLayers(\n              layer.get('radioGroup'),\n            ).filter((l) => l !== layer);\n\n            siblings.forEach((s) => {\n              if (\n                visible &&\n                s.get('radioGroup') &&\n                evt.target.get('radioGroup') === s.get('radioGroup')\n              ) {\n                s.setVisible(false, false, true, true);\n              }\n            });\n          }\n\n          // Apply to children\n          if (!evt.stopPropagationDown && layer.children) {\n            layer.children.forEach((child) => {\n              child.setVisible(visible, false, true, false);\n            });\n          }\n\n          // Apply to parent only if:\n          //   - a child is visible\n          //   - all children are hidden\n          const parentLayer = this.getParent(layer);\n\n          if (\n            !evt.stopPropagationUp &&\n            parentLayer &&\n            (visible ||\n              (!visible && !parentLayer.children.find((c) => c.visible)))\n          ) {\n            parentLayer.setVisible(visible, true, false, false);\n          }\n\n          (this.callbacks['change:visible'] || []).forEach((cb) =>\n            cb(evt.target),\n          );\n        }),\n      );\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}