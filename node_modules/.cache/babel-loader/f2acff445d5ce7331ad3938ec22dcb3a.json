{"ast":null,"code":"import _defineProperty from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/daniel/gitRepos/danji90.github.io/src/components/Projects/Projects.js\";\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport parseHtml from 'html-react-parser';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Link, Divider } from '@material-ui/core';\nimport Container from '../Container/Container';\n\nvar images = require.context('../../assets/images/', true);\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    projectImage: {\n      width: '100%',\n      '&:hover': {\n        opacity: 0.8\n      }\n    },\n    project: _defineProperty({\n      margin: '25px 0',\n      display: 'flex'\n    }, theme.breakpoints.down('sm'), {\n      flexDirection: 'column'\n    }),\n    projectColumnImage: _defineProperty({\n      padding: '10px 20px 0 0',\n      width: '30%'\n    }, theme.breakpoints.down('sm'), {\n      width: '100%'\n    }),\n    projectColumnInfo: _defineProperty({\n      width: '70%'\n    }, theme.breakpoints.down('sm'), {\n      margin: '10px 0',\n      width: '100%'\n    }),\n    projectTools: {\n      padding: '10px 0 10px'\n    },\n    moreLink: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '10px 0'\n    }\n  };\n});\nvar propTypes = {\n  section: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  })\n};\nvar defaultProps = {\n  section: {}\n};\n\nvar renderLatestProject = function renderLatestProject(projectData, projectsCount, classes) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    key: \"latest\",\n    className: classes.latestProject,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    underline: \"none\",\n    href: projectData.weblink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h3\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, projectData.name)), /*#__PURE__*/React.createElement(Link, {\n    href: projectData.facility.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, projectData.facility.name)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: projectData.webLink,\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.projectImage,\n    src: images(\"./\".concat(projectData.images[0].name)),\n    alt: \"not found\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), renderProject(projectData, null, projectsCount, classes)));\n};\n\nvar renderProject = function renderProject(projectData, index, projectsCount, classes) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: projectData.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.project,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.projectColumnImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, projectData.images.filter(function (image) {\n    return !image.latest;\n  }).map(function (image) {\n    var imageLink = images(\"./\".concat(image.name));\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: image.name.split('.'),\n      href: projectData.webLink,\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imageLink,\n      alt: \"not found\",\n      className: classes.projectImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.projectColumnInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, projectData.latest ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    underline: \"none\",\n    href: projectData.weblink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, projectData.name)), /*#__PURE__*/React.createElement(Link, {\n    href: projectData.facility.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, projectData.facility.name))), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, parseHtml(projectData.description)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.projectTools,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Tools used: \"), projectData.tools.map(function (tool, idx) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: tool.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, tool.webLink ? /*#__PURE__*/React.createElement(Link, {\n      key: tool.name,\n      href: tool.webLink,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"\".concat(tool.name)) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"\".concat(tool.name)), \"\".concat(idx + 1 === projectData.tools.length ? '' : ', '));\n  })), /*#__PURE__*/React.createElement(Link, {\n    href: projectData.webLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: classes.moreLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaExternalLinkAlt, {\n    style: {\n      marginRight: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Find out more\")))), index + 1 !== projectsCount && /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 39\n    }\n  }));\n};\n\nfunction Projects(props) {\n  var classes = useStyles();\n  var projects = useSelector(function (state) {\n    return state.projects;\n  });\n  var section = props.section;\n  return /*#__PURE__*/React.createElement(Container, {\n    title: \"Projects\",\n    id: section.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, renderLatestProject(projects.find(function (project) {\n    return project.latest;\n  }), projects.length, classes), projects.filter(function (project) {\n    return !project.latest;\n  }).map(function (project, index, array) {\n    return renderProject(project, index, array.length, classes);\n  }));\n}\n\nProjects.propTypes = propTypes;\nProjects.defaultProps = defaultProps;\nexport default Projects;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/src/components/Projects/Projects.js"],"names":["React","PropTypes","useSelector","FaExternalLinkAlt","parseHtml","makeStyles","Typography","Link","Divider","Container","images","require","context","useStyles","theme","projectImage","width","opacity","project","margin","display","breakpoints","down","flexDirection","projectColumnImage","padding","projectColumnInfo","projectTools","moreLink","alignItems","propTypes","section","shape","id","oneOfType","string","number","defaultProps","renderLatestProject","projectData","projectsCount","classes","latestProject","weblink","name","facility","url","webLink","renderProject","index","filter","image","latest","map","imageLink","split","description","tools","tool","idx","length","marginRight","Projects","props","projects","state","find","array"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport parseHtml from 'html-react-parser';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Link, Divider } from '@material-ui/core';\n\nimport Container from '../Container/Container';\n\nconst images = require.context('../../assets/images/', true);\n\nconst useStyles = makeStyles((theme) => ({\n  projectImage: {\n    width: '100%',\n    '&:hover': {\n      opacity: 0.8,\n    },\n  },\n  project: {\n    margin: '25px 0',\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  projectColumnImage: {\n    padding: '10px 20px 0 0',\n    width: '30%',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  projectColumnInfo: {\n    width: '70%',\n    [theme.breakpoints.down('sm')]: {\n      margin: '10px 0',\n      width: '100%',\n    },\n  },\n  projectTools: {\n    padding: '10px 0 10px',\n  },\n  moreLink: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '10px 0',\n  },\n}));\n\nconst propTypes = {\n  section: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n};\n\nconst defaultProps = {\n  section: {},\n};\n\nconst renderLatestProject = (projectData, projectsCount, classes) => {\n  return (\n    <>\n      <div key=\"latest\" className={classes.latestProject}>\n        <Link underline=\"none\" href={projectData.weblink}>\n          <Typography color=\"textPrimary\" variant=\"h3\" align=\"center\">\n            {projectData.name}\n          </Typography>\n        </Link>\n        <Link href={projectData.facility.url}>\n          <Typography variant=\"h4\" align=\"center\">\n            {projectData.facility.name}\n          </Typography>\n        </Link>\n        <br />\n        <a href={projectData.webLink} target=\"_blank\">\n          <img\n            className={classes.projectImage}\n            src={images(`./${projectData.images[0].name}`)}\n            alt=\"not found\"\n          />\n        </a>\n        {renderProject(projectData, null, projectsCount, classes)}\n      </div>\n    </>\n  );\n};\n\nconst renderProject = (projectData, index, projectsCount, classes) => {\n  return (\n    <div key={projectData.id}>\n      <div className={classes.project}>\n        <div className={classes.projectColumnImage}>\n          {projectData.images\n            .filter((image) => !image.latest)\n            .map((image) => {\n              const imageLink = images(`./${image.name}`);\n              return (\n                <a\n                  key={image.name.split('.')}\n                  href={projectData.webLink}\n                  target=\"_blank\"\n                >\n                  <img\n                    src={imageLink}\n                    alt=\"not found\"\n                    className={classes.projectImage}\n                  />\n                </a>\n              );\n            })}\n        </div>\n        <div className={classes.projectColumnInfo}>\n          {projectData.latest ? null : (\n            <>\n              <Link underline=\"none\" href={projectData.weblink}>\n                <Typography color=\"textPrimary\" variant=\"h3\">\n                  {projectData.name}\n                </Typography>\n              </Link>\n              <Link href={projectData.facility.url}>\n                <Typography variant=\"h4\">\n                  {projectData.facility.name}\n                </Typography>\n              </Link>\n            </>\n          )}\n          <Typography>{parseHtml(projectData.description)}</Typography>\n          <Typography className={classes.projectTools}>\n            <strong>Tools used: </strong>\n            {projectData.tools.map((tool, idx) => {\n              return (\n                <span key={tool.name}>\n                  {tool.webLink ? (\n                    <Link\n                      key={tool.name}\n                      href={tool.webLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {`${tool.name}`}\n                    </Link>\n                  ) : (\n                    <span>{`${tool.name}`}</span>\n                  )}\n                  {`${idx + 1 === projectData.tools.length ? '' : ', '}`}\n                </span>\n              );\n            })}\n          </Typography>\n          <Link\n            href={projectData.webLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={classes.moreLink}\n          >\n            <FaExternalLinkAlt style={{ marginRight: 5 }} />\n            <Typography>Find out more</Typography>\n          </Link>\n        </div>\n      </div>\n      {index + 1 !== projectsCount && <Divider />}\n    </div>\n  );\n};\n\nfunction Projects(props) {\n  const classes = useStyles();\n  const projects = useSelector((state) => state.projects);\n  const { section } = props;\n  return (\n    <Container title=\"Projects\" id={section.id}>\n      {renderLatestProject(\n        projects.find((project) => project.latest),\n        projects.length,\n        classes,\n      )}\n      {projects\n        .filter((project) => !project.latest)\n        .map((project, index, array) =>\n          renderProject(project, index, array.length, classes),\n        )}\n    </Container>\n  );\n}\n\nProjects.propTypes = propTypes;\nProjects.defaultProps = defaultProps;\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}