{"ast":null,"code":"function objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdClose } from 'react-icons/md';\nimport OLMap from 'ol/Map';\nimport Feature from 'ol/Feature';\nimport { getCenter } from 'ol/extent';\nimport { unByKey } from 'ol/Observable';\nvar propTypes = {\n  /**\n   * React Children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * An [ol/map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html).\n   */\n  map: PropTypes.instanceOf(OLMap).isRequired,\n\n  /**\n   * An [ol/Feature](https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html).\n   */\n  feature: PropTypes.instanceOf(Feature),\n\n  /**\n   * Popup title.\n   */\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * If true, the popup is panned in the map's viewport.\n   */\n  panIntoView: PropTypes.bool,\n\n  /**\n   * Custom BoundingClientRect to fit popup into.\n   * Use if panIntoView is true. Default is the map's BoundingClientRect.\n   */\n  panRect: PropTypes.objectOf(PropTypes.number),\n\n  /**\n   * Coordinate position of the popup.\n   */\n  popupCoordinate: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Class name of the popup.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Title HTML attributes.\n   */\n  titles: PropTypes.shape({\n    closeButton: PropTypes.string\n  }),\n\n  /**\n   * Function triggered on close button click.\n   */\n  onCloseClick: PropTypes.func,\n\n  /**\n   * HTML tabIndex attribute.\n   */\n  tabIndex: PropTypes.string,\n\n  /**\n   * Render the header\n   */\n  renderHeader: PropTypes.func,\n\n  /**\n   * Render the close button\n   */\n  renderCloseButton: PropTypes.func,\n\n  /**\n   * Render the footer\n   */\n  renderFooter: PropTypes.func\n};\nvar defaultProps = {\n  header: null,\n  feature: null,\n  panIntoView: false,\n  panRect: null,\n  popupCoordinate: null,\n  className: 'rs-popup',\n  tabIndex: '',\n  titles: {\n    closeButton: 'Close'\n  },\n  onCloseClick: function onCloseClick() {},\n  renderHeader: null,\n  renderCloseButton: null,\n  renderFooter: function renderFooter() {\n    return null;\n  }\n};\n/**\n * The Popup component renders a popup over an\n * [ol/Feature](https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html)\n * on click.\n */\n\nvar Popup = /*@__PURE__*/function (PureComponent) {\n  function Popup(props) {\n    PureComponent.call(this, props);\n    this.state = {\n      popupElement: null,\n      top: 0,\n      left: 0\n    };\n    this.postrenderKey = null;\n  }\n\n  if (PureComponent) Popup.__proto__ = PureComponent;\n  Popup.prototype = Object.create(PureComponent && PureComponent.prototype);\n  Popup.prototype.constructor = Popup;\n\n  Popup.renderHeader = function renderHeader(props) {\n    var header = props.header;\n    var renderCloseButton = props.renderCloseButton;\n    return React.createElement('div', {\n      className: \"rs-popup-header\"\n    }, header, (renderCloseButton || Popup.renderCloseButton)(props));\n  };\n\n  Popup.renderCloseButton = function renderCloseButton(ref) {\n    var onCloseClick = ref.onCloseClick;\n    var titles = ref.titles;\n    return React.createElement('div', {\n      role: \"button\",\n      tabIndex: 0,\n      className: \"rs-popup-close-bt\",\n      title: titles.closeButton,\n      'aria-label': titles.closeButton,\n      onClick: function onClick() {\n        return onCloseClick();\n      },\n      onKeyPress: function onKeyPress(evt) {\n        return evt.which === 13 && onCloseClick();\n      }\n    }, React.createElement(MdClose, {\n      focusable: false\n    }));\n  };\n\n  Popup.prototype.componentDidMount = function componentDidMount() {\n    var this$1 = this;\n    var ref = this.props;\n    var map = ref.map;\n    this.updatePixelPosition();\n    this.postrenderKey = map.on('postrender', function () {\n      this$1.updatePixelPosition();\n    });\n  };\n\n  Popup.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var ref = this.props;\n    var feature = ref.feature;\n    var panIntoView = ref.panIntoView;\n    var popupCoordinate = ref.popupCoordinate;\n    var ref$1 = this.state;\n    var popupElement = ref$1.popupElement;\n\n    if (feature !== prevProps.feature || popupCoordinate !== prevProps.popupCoordinate) {\n      this.updatePixelPosition();\n    }\n\n    if (panIntoView && popupElement && popupElement !== prevState.popupElement) {\n      this.panIntoView();\n    }\n  };\n\n  Popup.prototype.componentWillUnmount = function componentWillUnmount() {\n    unByKey(this.postrenderKey);\n  };\n\n  Popup.prototype.panIntoView = function panIntoView() {\n    var ref = this.props;\n    var map = ref.map;\n    var panRect = ref.panRect;\n    var ref$1 = this.state;\n    var popupElement = ref$1.popupElement;\n    var mapRect = panRect || map.getTarget().getBoundingClientRect();\n    var popupRect = popupElement.getBoundingClientRect();\n    var ref$2 = map.getView().getCenter();\n    var x = ref$2[0];\n    var y = ref$2[1];\n    var res = map.getView().getResolution();\n    var newCenter = [x, y];\n\n    if (mapRect.top > popupRect.top) {\n      newCenter[1] = y + (mapRect.top - popupRect.top) * res;\n    }\n\n    if (mapRect.left > popupRect.left) {\n      newCenter[0] = x - (mapRect.left - popupRect.left) * res;\n    }\n\n    if (mapRect.right < popupRect.right) {\n      newCenter[0] = x + (popupRect.right - mapRect.right) * res;\n    }\n\n    if (mapRect.bottom < popupRect.bottom) {\n      newCenter[1] = y - (popupRect.bottom - mapRect.bottom) * res;\n    }\n\n    if (newCenter[0] !== x || newCenter[1] !== y) {\n      map.getView().animate({\n        center: newCenter,\n        duration: 500\n      });\n    }\n  };\n\n  Popup.prototype.updatePixelPosition = function updatePixelPosition() {\n    var ref = this.props;\n    var map = ref.map;\n    var feature = ref.feature;\n    var popupCoordinate = ref.popupCoordinate;\n    var coord = popupCoordinate;\n\n    if (feature && !coord) {\n      coord = getCenter(feature.getGeometry().getExtent());\n    }\n\n    if (coord) {\n      var pos = map.getPixelFromCoordinate(coord);\n\n      if (pos && pos.length === 2) {\n        this.setState({\n          left: pos[0],\n          top: pos[1]\n        });\n      }\n    }\n  };\n\n  Popup.prototype.render = function render() {\n    var this$1 = this;\n    var ref = this.props;\n    var feature = ref.feature;\n    var popupCoordinate = ref.popupCoordinate;\n    var children = ref.children;\n    var header = ref.header;\n    var titles = ref.titles;\n    var tabIndex = ref.tabIndex;\n    var renderHeader = ref.renderHeader;\n    var renderFooter = ref.renderFooter;\n    var rest = objectWithoutProperties(ref, [\"feature\", \"popupCoordinate\", \"children\", \"header\", \"titles\", \"tabIndex\", \"renderHeader\", \"renderFooter\"]);\n    var other = rest;\n\n    if (!feature && !popupCoordinate) {\n      return null;\n    }\n\n    delete other.panIntoView;\n    delete other.panRect;\n    delete other.map;\n    delete other.header;\n    delete other.onCloseClick;\n    delete other.renderCloseButton;\n    var ref$1 = this.state;\n    var top = ref$1.top;\n    var left = ref$1.left; // force re-render if the feature or the coordinate changes.\n    // this is needed to update the popupElement ref\n\n    var key = feature ? feature.getId() : popupCoordinate.join();\n    return React.createElement('div', Object.assign({}, {\n      className: \"rs-popup\",\n      style: {\n        left: left,\n        top: top\n      }\n    }, other), React.createElement('div', {\n      className: \"rs-popup-container\",\n      tabIndex: tabIndex,\n      key: key,\n      ref: function ref(popupElement) {\n        this$1.setState({\n          popupElement: popupElement\n        });\n      }\n    }, (renderHeader || Popup.renderHeader)(this.props), React.createElement('div', {\n      className: \"rs-popup-body\"\n    }, children), renderFooter(this.props)));\n  };\n\n  return Popup;\n}(PureComponent);\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\nexport default Popup;","map":{"version":3,"sources":["../../../src/components/Popup/Popup.js"],"names":["const","super","this","let"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdClose } from 'react-icons/md';\nimport OLMap from 'ol/Map';\nimport Feature from 'ol/Feature';\nimport { getCenter } from 'ol/extent';\nimport { unByKey } from 'ol/Observable';\n\nconst propTypes = {\n  /**\n   * React Children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * An [ol/map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html).\n   */\n  map: PropTypes.instanceOf(OLMap).isRequired,\n\n  /**\n   * An [ol/Feature](https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html).\n   */\n  feature: PropTypes.instanceOf(Feature),\n\n  /**\n   * Popup title.\n   */\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * If true, the popup is panned in the map's viewport.\n   */\n  panIntoView: PropTypes.bool,\n\n  /**\n   * Custom BoundingClientRect to fit popup into.\n   * Use if panIntoView is true. Default is the map's BoundingClientRect.\n   */\n  panRect: PropTypes.objectOf(PropTypes.number),\n\n  /**\n   * Coordinate position of the popup.\n   */\n  popupCoordinate: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Class name of the popup.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Title HTML attributes.\n   */\n  titles: PropTypes.shape({\n    closeButton: PropTypes.string,\n  }),\n\n  /**\n   * Function triggered on close button click.\n   */\n  onCloseClick: PropTypes.func,\n\n  /**\n   * HTML tabIndex attribute.\n   */\n  tabIndex: PropTypes.string,\n\n  /**\n   * Render the header\n   */\n  renderHeader: PropTypes.func,\n\n  /**\n   * Render the close button\n   */\n  renderCloseButton: PropTypes.func,\n\n  /**\n   * Render the footer\n   */\n  renderFooter: PropTypes.func,\n};\n\nconst defaultProps = {\n  header: null,\n  feature: null,\n  panIntoView: false,\n  panRect: null,\n  popupCoordinate: null,\n  className: 'rs-popup',\n  tabIndex: '',\n  titles: { closeButton: 'Close' },\n  onCloseClick: () => {},\n  renderHeader: null,\n  renderCloseButton: null,\n  renderFooter: () => null,\n};\n\n/**\n * The Popup component renders a popup over an\n * [ol/Feature](https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html)\n * on click.\n */\nclass Popup extends PureComponent {\n  static renderHeader(props) {\n    const { header, renderCloseButton } = props;\n    return (\n      <div className=\"rs-popup-header\">\n        {header}\n        {(renderCloseButton || Popup.renderCloseButton)(props)}\n      </div>\n    );\n  }\n\n  static renderCloseButton({ onCloseClick, titles }) {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className=\"rs-popup-close-bt\"\n        title={titles.closeButton}\n        aria-label={titles.closeButton}\n        onClick={() => onCloseClick()}\n        onKeyPress={(evt) => evt.which === 13 && onCloseClick()}\n      >\n        <MdClose focusable={false} />\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      popupElement: null,\n      top: 0,\n      left: 0,\n    };\n    this.postrenderKey = null;\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    this.updatePixelPosition();\n\n    this.postrenderKey = map.on('postrender', () => {\n      this.updatePixelPosition();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { feature, panIntoView, popupCoordinate } = this.props;\n    const { popupElement } = this.state;\n    if (\n      feature !== prevProps.feature ||\n      popupCoordinate !== prevProps.popupCoordinate\n    ) {\n      this.updatePixelPosition();\n    }\n\n    if (\n      panIntoView &&\n      popupElement &&\n      popupElement !== prevState.popupElement\n    ) {\n      this.panIntoView();\n    }\n  }\n\n  componentWillUnmount() {\n    unByKey(this.postrenderKey);\n  }\n\n  panIntoView() {\n    const { map, panRect } = this.props;\n    const { popupElement } = this.state;\n\n    const mapRect = panRect || map.getTarget().getBoundingClientRect();\n    const popupRect = popupElement.getBoundingClientRect();\n    const [x, y] = map.getView().getCenter();\n    const res = map.getView().getResolution();\n    const newCenter = [x, y];\n\n    if (mapRect.top > popupRect.top) {\n      newCenter[1] = y + (mapRect.top - popupRect.top) * res;\n    }\n\n    if (mapRect.left > popupRect.left) {\n      newCenter[0] = x - (mapRect.left - popupRect.left) * res;\n    }\n\n    if (mapRect.right < popupRect.right) {\n      newCenter[0] = x + (popupRect.right - mapRect.right) * res;\n    }\n\n    if (mapRect.bottom < popupRect.bottom) {\n      newCenter[1] = y - (popupRect.bottom - mapRect.bottom) * res;\n    }\n\n    if (newCenter[0] !== x || newCenter[1] !== y) {\n      map.getView().animate({ center: newCenter, duration: 500 });\n    }\n  }\n\n  updatePixelPosition() {\n    const { map, feature, popupCoordinate } = this.props;\n    let coord = popupCoordinate;\n\n    if (feature && !coord) {\n      coord = getCenter(feature.getGeometry().getExtent());\n    }\n\n    if (coord) {\n      const pos = map.getPixelFromCoordinate(coord);\n\n      if (pos && pos.length === 2) {\n        this.setState({\n          left: pos[0],\n          top: pos[1],\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      feature,\n      popupCoordinate,\n      children,\n      header,\n      titles,\n      tabIndex,\n      renderHeader,\n      renderFooter,\n      ...other\n    } = this.props;\n\n    if (!feature && !popupCoordinate) {\n      return null;\n    }\n\n    delete other.panIntoView;\n    delete other.panRect;\n    delete other.map;\n    delete other.header;\n    delete other.onCloseClick;\n    delete other.renderCloseButton;\n\n    const { top, left } = this.state;\n\n    // force re-render if the feature or the coordinate changes.\n    // this is needed to update the popupElement ref\n    const key = feature ? feature.getId() : popupCoordinate.join();\n    return (\n      <div\n        className=\"rs-popup\"\n        style={{\n          left,\n          top,\n        }}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...other}\n      >\n        <div\n          className=\"rs-popup-container\"\n          tabIndex={tabIndex}\n          key={key}\n          ref={(popupElement) => {\n            this.setState({ popupElement });\n          }}\n        >\n          {(renderHeader || Popup.renderHeader)(this.props)}\n          <div className=\"rs-popup-body\">{children}</div>\n          {renderFooter(this.props)}\n        </div>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}