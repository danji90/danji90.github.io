{"ast":null,"code":"import _objectSpread from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { unByKey } from 'ol/Observable';\nimport Group from 'ol/layer/Group';\nimport LayerCommon from '../../common/layers/Layer';\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @extends {Layer}\n */\n\nvar Layer = /*#__PURE__*/function (_LayerCommon) {\n  _inherits(Layer, _LayerCommon);\n\n  var _super = _createSuper(Layer);\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {ol/layer/Layer~Layer} options.olLayer The layer (required).\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string} [options.copyright=undefined] Copyright-Statement.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is the currently visible layer on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] If true feature information can be queried by the react-spatial LayerService. Default is true.\n   */\n  function Layer(options) {\n    var _this;\n\n    _classCallCheck(this, Layer);\n\n    _this = _super.call(this, options);\n\n    if (_this.olLayer) {\n      _this.olLayer.setVisible(_this.visible);\n    }\n\n    return _this;\n  }\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n\n\n  _createClass(Layer, [{\n    key: \"defineProperties\",\n    value: function defineProperties(options) {\n      _get(_getPrototypeOf(Layer.prototype), \"defineProperties\", this).call(this, options);\n\n      Object.defineProperties(this, {\n        olLayer: {\n          value: options.olLayer,\n          writable: true\n        },\n        olListenersKeys: {\n          value: []\n        }\n      });\n    }\n    /**\n     * Initialize the layer and listen to feature clicks.\n     * @param {ol/Map~Map} map\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(map) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(Layer.prototype), \"init\", this).call(this, map);\n\n      if (!this.map || !this.olLayer) {\n        return;\n      }\n\n      this.olListenersKeys.push(this.map.getLayers().on('remove', function (evt) {\n        if (evt.element === _this2.olLayer) {\n          _this2.terminate();\n        }\n      })); // We set the copyright to the source used by the layer.\n\n      if (this.copyrights) {\n        var attributions = this.copyrights || [];\n\n        if (this.olLayer instanceof Group) {\n          this.olLayer.getLayers().getArray().forEach(function (layer) {\n            layer.getSource().setAttributions(attributions);\n          });\n        } else {\n          this.olLayer.getSource().setAttributions(attributions);\n        }\n      }\n    }\n    /**\n     * Terminate what was initialized in init function. Remove layer, events...\n     */\n\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      unByKey(this.olListenersKeys);\n\n      _get(_getPrototypeOf(Layer.prototype), \"terminate\", this).call(this);\n    }\n    /**\n     * Change the visibility of the layer\n     *\n     * @param {boolean} visible Defines the visibility of the layer\n     * @param {boolean} [stopPropagationDown]\n     * @param {boolean} [stopPropagationUp]\n     * @param {boolean} [stopPropagationSiblings]\n     */\n\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      var stopPropagationDown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var stopPropagationUp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var stopPropagationSiblings = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (visible === this.visible) {\n        return;\n      }\n\n      _get(_getPrototypeOf(Layer.prototype), \"setVisible\", this).call(this, visible, stopPropagationDown, stopPropagationUp, stopPropagationSiblings);\n\n      if (this.olLayer) {\n        this.olLayer.setVisible(this.visible);\n      }\n    }\n    /**\n     * Create a copy of the Layer.\n     * @param {Object} newOptions Options to override\n     * @returns {Layer} A Layer\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone(newOptions) {\n      return new Layer(_objectSpread(_objectSpread({}, this.options), newOptions));\n    }\n  }]);\n\n  return Layer;\n}(LayerCommon);\n\nexport default Layer;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/mobility-toolbox-js/ol/layers/Layer.js"],"names":["unByKey","Group","LayerCommon","Layer","options","olLayer","setVisible","visible","Object","defineProperties","value","writable","olListenersKeys","map","push","getLayers","on","evt","element","terminate","copyrights","attributions","getArray","forEach","layer","getSource","setAttributions","stopPropagationDown","stopPropagationUp","stopPropagationSiblings","newOptions"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,K;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,iBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;;AAEA,QAAI,MAAKC,OAAT,EAAkB;AAChB,YAAKA,OAAL,CAAaC,UAAb,CAAwB,MAAKC,OAA7B;AACD;;AALkB;AAMpB;AAED;AACF;AACA;AACA;AACA;;;;;WACE,0BAAiBH,OAAjB,EAA0B;AACxB,kFAAuBA,OAAvB;;AACAI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BJ,QAAAA,OAAO,EAAE;AAAEK,UAAAA,KAAK,EAAEN,OAAO,CAACC,OAAjB;AAA0BM,UAAAA,QAAQ,EAAE;AAApC,SADmB;AAE5BC,QAAAA,eAAe,EAAE;AACfF,UAAAA,KAAK,EAAE;AADQ;AAFW,OAA9B;AAMD;AAED;AACF;AACA;AACA;;;;WACE,cAAKG,GAAL,EAAU;AAAA;;AACR,sEAAWA,GAAX;;AAEA,UAAI,CAAC,KAAKA,GAAN,IAAa,CAAC,KAAKR,OAAvB,EAAgC;AAC9B;AACD;;AAED,WAAKO,eAAL,CAAqBE,IAArB,CACE,KAAKD,GAAL,CAASE,SAAT,GAAqBC,EAArB,CAAwB,QAAxB,EAAkC,UAACC,GAAD,EAAS;AACzC,YAAIA,GAAG,CAACC,OAAJ,KAAgB,MAAI,CAACb,OAAzB,EAAkC;AAChC,UAAA,MAAI,CAACc,SAAL;AACD;AACF,OAJD,CADF,EAPQ,CAeR;;AACA,UAAI,KAAKC,UAAT,EAAqB;AACnB,YAAMC,YAAY,GAAG,KAAKD,UAAL,IAAmB,EAAxC;;AACA,YAAI,KAAKf,OAAL,YAAwBJ,KAA5B,EAAmC;AACjC,eAAKI,OAAL,CACGU,SADH,GAEGO,QAFH,GAGGC,OAHH,CAGW,UAACC,KAAD,EAAW;AAClBA,YAAAA,KAAK,CAACC,SAAN,GAAkBC,eAAlB,CAAkCL,YAAlC;AACD,WALH;AAMD,SAPD,MAOO;AACL,eAAKhB,OAAL,CAAaoB,SAAb,GAAyBC,eAAzB,CAAyCL,YAAzC;AACD;AACF;AACF;AAED;AACF;AACA;;;;WACE,qBAAY;AACVrB,MAAAA,OAAO,CAAC,KAAKY,eAAN,CAAP;;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,oBACEL,OADF,EAKE;AAAA,UAHAoB,mBAGA,uEAHsB,KAGtB;AAAA,UAFAC,iBAEA,uEAFoB,KAEpB;AAAA,UADAC,uBACA,uEAD0B,KAC1B;;AACA,UAAItB,OAAO,KAAK,KAAKA,OAArB,EAA8B;AAC5B;AACD;;AAED,4EACEA,OADF,EAEEoB,mBAFF,EAGEC,iBAHF,EAIEC,uBAJF;;AAOA,UAAI,KAAKxB,OAAT,EAAkB;AAChB,aAAKA,OAAL,CAAaC,UAAb,CAAwB,KAAKC,OAA7B;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;;WACE,eAAMuB,UAAN,EAAkB;AAChB,aAAO,IAAI3B,KAAJ,iCAAe,KAAKC,OAApB,GAAgC0B,UAAhC,EAAP;AACD;;;;EAtHiB5B,W;;AAwHpB,eAAeC,KAAf","sourcesContent":["import { unByKey } from 'ol/Observable';\nimport Group from 'ol/layer/Group';\nimport LayerCommon from '../../common/layers/Layer';\n\n/**\n * A class representing a layer to display on an OpenLayers map.\n *\n * @example\n * import { Layer } from 'mobility-toolbox-js/ol';\n *\n * const layer = new Layer({\n *   olLayer: ...,\n * });\n *\n * @see <a href=\"/example/ol-map\">Map example</a>\n *\n * @extends {Layer}\n */\nclass Layer extends LayerCommon {\n  /**\n   * Constructor.\n   *\n   * @param {Object} options\n   * @param {ol/layer/Layer~Layer} options.olLayer The layer (required).\n   * @param {string} [options.name=uuid()] Layer name. Default use a generated uuid.\n   * @param {string} [options.key=uuid().toLowerCase()] Layer key, will use options.name.toLowerCase() if not specified.\n   * @param {string} [options.copyright=undefined] Copyright-Statement.\n   * @param {Array<Layer>} [options.children=[]] Sublayers.\n   * @param {Object} [options.properties={}] Application-specific layer properties.\n   * @param {boolean} [options.visible=true] If true this layer is the currently visible layer on the map.\n   * @param {boolean} [options.isBaseLayer=false] If true this layer is a baseLayer.\n   * @param {boolean} [options.isQueryable=true] If true feature information can be queried by the react-spatial LayerService. Default is true.\n   */\n  constructor(options) {\n    super(options);\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Define layer's properties.\n   *\n   * @ignore\n   */\n  defineProperties(options) {\n    super.defineProperties(options);\n    Object.defineProperties(this, {\n      olLayer: { value: options.olLayer, writable: true },\n      olListenersKeys: {\n        value: [],\n      },\n    });\n  }\n\n  /**\n   * Initialize the layer and listen to feature clicks.\n   * @param {ol/Map~Map} map\n   */\n  init(map) {\n    super.init(map);\n\n    if (!this.map || !this.olLayer) {\n      return;\n    }\n\n    this.olListenersKeys.push(\n      this.map.getLayers().on('remove', (evt) => {\n        if (evt.element === this.olLayer) {\n          this.terminate();\n        }\n      }),\n    );\n\n    // We set the copyright to the source used by the layer.\n    if (this.copyrights) {\n      const attributions = this.copyrights || [];\n      if (this.olLayer instanceof Group) {\n        this.olLayer\n          .getLayers()\n          .getArray()\n          .forEach((layer) => {\n            layer.getSource().setAttributions(attributions);\n          });\n      } else {\n        this.olLayer.getSource().setAttributions(attributions);\n      }\n    }\n  }\n\n  /**\n   * Terminate what was initialized in init function. Remove layer, events...\n   */\n  terminate() {\n    unByKey(this.olListenersKeys);\n    super.terminate();\n  }\n\n  /**\n   * Change the visibility of the layer\n   *\n   * @param {boolean} visible Defines the visibility of the layer\n   * @param {boolean} [stopPropagationDown]\n   * @param {boolean} [stopPropagationUp]\n   * @param {boolean} [stopPropagationSiblings]\n   */\n  setVisible(\n    visible,\n    stopPropagationDown = false,\n    stopPropagationUp = false,\n    stopPropagationSiblings = false,\n  ) {\n    if (visible === this.visible) {\n      return;\n    }\n\n    super.setVisible(\n      visible,\n      stopPropagationDown,\n      stopPropagationUp,\n      stopPropagationSiblings,\n    );\n\n    if (this.olLayer) {\n      this.olLayer.setVisible(this.visible);\n    }\n  }\n\n  /**\n   * Create a copy of the Layer.\n   * @param {Object} newOptions Options to override\n   * @returns {Layer} A Layer\n   */\n  clone(newOptions) {\n    return new Layer({ ...this.options, ...newOptions });\n  }\n}\nexport default Layer;\n"]},"metadata":{},"sourceType":"module"}