{"ast":null,"code":"import _inherits from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/gitRepos/danji90.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable max-classes-per-file */\n\n/**\n * Copyright control interface.\n *\n */\nexport var CopyrightInterface = /*#__PURE__*/function () {\n  function CopyrightInterface() {\n    _classCallCheck(this, CopyrightInterface);\n  }\n\n  _createClass(CopyrightInterface, [{\n    key: \"getCopyrights\",\n    value:\n    /**\n     * Return an array of layer's copyright.\n     *\n     * @returns {String[]} A list of copyrights to render.\n     */\n    function getCopyrights() {}\n  }]);\n\n  return CopyrightInterface;\n}();\n/**\n * Mixin for CopyrightInterface.\n *\n * @param {Class} Base  A class to extend with {CopyrightInterface} functionnalities.\n * @return {Class}  A class that implements <CopyrightInterface> class and extends Base;\n * @private\n */\n\nvar CopyrightMixin = function CopyrightMixin(Base) {\n  return /*#__PURE__*/function (_Base) {\n    _inherits(_class, _Base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(_class, [{\n      key: \"render\",\n      value: function render() {\n        if (!this.element) {\n          return;\n        }\n\n        this.element.innerHTML = this.active ? this.getCopyrights().join(' | ') : '';\n      }\n    }, {\n      key: \"createDefaultElement\",\n      value: function createDefaultElement() {\n        this.element = document.createElement('div');\n        this.element.id = 'mbt-copyright';\n        Object.assign(this.element.style, {\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n          fontSize: '.8rem',\n          padding: '0 10px'\n        });\n      }\n    }]);\n\n    return _class;\n  }(Base);\n};\n\nexport default CopyrightMixin;","map":{"version":3,"sources":["/home/daniel/gitRepos/danji90.github.io/node_modules/mobility-toolbox-js/common/mixins/CopyrightMixin.js"],"names":["CopyrightInterface","CopyrightMixin","Base","element","innerHTML","active","getCopyrights","join","document","createElement","id","Object","assign","style","position","bottom","right","fontSize","padding"],"mappings":";;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAaA,kBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACE;AACF;AACA;AACA;AACA;AACE,6BAAgB,CAAE;AANpB;;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAEnB,kBAAS;AACP,YAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB;AACD;;AACD,aAAKA,OAAL,CAAaC,SAAb,GAAyB,KAAKC,MAAL,GACrB,KAAKC,aAAL,GAAqBC,IAArB,CAA0B,KAA1B,CADqB,GAErB,EAFJ;AAGD;AATkB;AAAA;AAAA,aAWnB,gCAAuB;AACrB,aAAKJ,OAAL,GAAeK,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACA,aAAKN,OAAL,CAAaO,EAAb,GAAkB,eAAlB;AACAC,QAAAA,MAAM,CAACC,MAAP,CAAc,KAAKT,OAAL,CAAaU,KAA3B,EAAkC;AAChCC,UAAAA,QAAQ,EAAE,UADsB;AAEhCC,UAAAA,MAAM,EAAE,CAFwB;AAGhCC,UAAAA,KAAK,EAAE,CAHyB;AAIhCC,UAAAA,QAAQ,EAAE,OAJsB;AAKhCC,UAAAA,OAAO,EAAE;AALuB,SAAlC;AAOD;AArBkB;;AAAA;AAAA,IACPhB,IADO;AAAA,CAAvB;;AAwBA,eAAeD,cAAf","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\n\n/**\n * Copyright control interface.\n *\n */\nexport class CopyrightInterface {\n  /**\n   * Return an array of layer's copyright.\n   *\n   * @returns {String[]} A list of copyrights to render.\n   */\n  getCopyrights() {}\n}\n\n/**\n * Mixin for CopyrightInterface.\n *\n * @param {Class} Base  A class to extend with {CopyrightInterface} functionnalities.\n * @return {Class}  A class that implements <CopyrightInterface> class and extends Base;\n * @private\n */\nconst CopyrightMixin = (Base) =>\n  class extends Base {\n    render() {\n      if (!this.element) {\n        return;\n      }\n      this.element.innerHTML = this.active\n        ? this.getCopyrights().join(' | ')\n        : '';\n    }\n\n    createDefaultElement() {\n      this.element = document.createElement('div');\n      this.element.id = 'mbt-copyright';\n      Object.assign(this.element.style, {\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        fontSize: '.8rem',\n        padding: '0 10px',\n      });\n    }\n  };\n\nexport default CopyrightMixin;\n"]},"metadata":{},"sourceType":"module"}