{"version":3,"file":"KML.js","sources":["../../src/utils/KML.js"],"sourcesContent":["import KML from 'ol/format/KML';\nimport { Feature } from 'ol';\nimport Point from 'ol/geom/Point';\nimport MultiPoint from 'ol/geom/MultiPoint';\nimport GeometryCollection from 'ol/geom/GeometryCollection';\nimport { Style, Text, Icon, Circle, Fill, Stroke } from 'ol/style';\nimport { asString } from 'ol/color';\nimport { kmlStyle } from './Styles';\nimport getPolygonPattern from './getPolygonPattern';\n\nconst applyTextStyleForIcon = (olIcon, olText) => {\n  const size = olIcon.getSize() || [48, 48];\n  const scale = olIcon.getScale() || 1;\n  const anchor = olIcon.getAnchor() || [\n    (size[0] * scale) / 2,\n    (size[1] * scale) / 2,\n  ];\n  const offset = [\n    scale * (size[0] - anchor[0]) + 5,\n    scale * (size[1] / 2 - anchor[1]),\n  ];\n  olText.setOffsetX(offset[0]);\n  olText.setOffsetY(offset[1]);\n  olText.setTextAlign('left');\n};\n\nconst getVertexCoord = (geom, start = true, index = 0) => {\n  const coords = geom.getCoordinates();\n  const len = coords.length - 1;\n  return start ? coords[index] : coords[len - index];\n};\n\nconst getLineIcon = (feature, icon, color, start = true) => {\n  const geom = feature.getGeometry();\n  const coordA = getVertexCoord(geom, start, 1);\n  const coordB = getVertexCoord(geom, start);\n  const dx = start ? coordA[0] - coordB[0] : coordB[0] - coordA[0];\n  const dy = start ? coordA[1] - coordB[1] : coordB[1] - coordA[1];\n  const rotation = Math.atan2(dy, dx);\n\n  return new Style({\n    geometry: (feat) => {\n      const ge = feat.getGeometry();\n      return new Point(getVertexCoord(ge, start));\n    },\n    image: new Icon({\n      src: icon.url,\n      color,\n      rotation: -rotation,\n      rotateWithView: true,\n      scale: icon.scale,\n      imgSize: icon.size, // ie 11\n    }),\n    zIndex: icon.zIndex,\n  });\n};\n\n// Clean the unneeded feature's style and properties created by the KML parser.\nconst sanitizeFeature = (feature) => {\n  const geom = feature.getGeometry();\n  let styles = feature.getStyleFunction();\n\n  // Store maxZoom in properties\n  if (feature.get('maxZoom')) {\n    feature.set('maxZoom', parseFloat(feature.get('maxZoom'), 10));\n  }\n\n  // Store minZoom in properties\n  if (feature.get('minZoom')) {\n    feature.set('minZoom', parseFloat(feature.get('minZoom'), 10));\n  }\n\n  // The use of clone is part of the scale fix line 156\n  const tmpStyles = styles(feature);\n  const style = (Array.isArray(tmpStyles) ? tmpStyles[0] : tmpStyles).clone();\n\n  let stroke = style.getStroke();\n  if (stroke && feature.get('lineDash')) {\n    stroke.setLineDash(\n      feature\n        .get('lineDash')\n        .split(',')\n        .map((l) => parseInt(l, 10)),\n    );\n  }\n\n  // The canvas draws a stroke width=1 by default if width=0, so we\n  // remove the stroke style in that case.\n  if (stroke && stroke.getWidth() === 0) {\n    stroke = undefined;\n  }\n\n  if (feature.get('zIndex')) {\n    style.setZIndex(parseInt(feature.get('zIndex'), 10));\n  }\n\n  // if the feature is a Point and we are offline, we use default vector\n  // style.\n  // if the feature is a Point and has a name with a text style, we\n  // create a correct text style.\n  // TODO Handle GeometryCollection displaying name on the first Point\n  // geometry.\n  if (style && (geom instanceof Point || geom instanceof MultiPoint)) {\n    let image = style.getImage();\n    let text = null;\n    let fill = style.getFill();\n\n    // If the feature has name we display it on the map as Google does\n    if (\n      feature.get('name') &&\n      style.getText() &&\n      style.getText().getScale() !== 0\n    ) {\n      if (image && image.getScale() === 0) {\n        // transparentCircle is used to allow selection\n        image = new Circle({\n          radius: 1,\n          fill: new Fill({ color: [0, 0, 0, 0] }),\n          stroke: new Stroke({ color: [0, 0, 0, 0] }),\n        });\n      }\n\n      // We replace empty white spaces used to keep normal spaces before and after the name.\n      let name = feature.get('name');\n      if (/\\u200B/g.test(name)) {\n        name = name.replace(/\\u200B/g, '');\n        feature.set('name', name);\n      }\n\n      text = new Text({\n        font: feature.get('textFont') || 'normal 16px Helvetica',\n        text: feature.get('name'),\n        fill: style.getText().getFill(),\n        // rotation unsupported by KML, taken instead from custom field.\n        rotation: feature.get('textRotation') || 0,\n        // since ol 6.3.1 : https://github.com/openlayers/openlayers/pull/10613/files#diff-1883da8b57e690db7ea0c35ce53c880aR925\n        // a default textstroke is added to mimic google earth.\n        // it was not the case before, the stroke was always null. So to keep\n        // the same behavior we don't copy the stroke style.\n        // TODO : maybe we should use this functionnality in the futur.\n        // stroke: style.getText().getStroke(),\n        scale: style.getText().getScale(),\n      });\n\n      if (feature.get('textStrokeColor') && feature.get('textStrokeWidth')) {\n        text.setStroke(\n          new Stroke({\n            color: feature.get('textStrokeColor'),\n            width: parseFloat(feature.get('textStrokeWidth')),\n          }),\n        );\n      }\n\n      if (feature.get('textAlign')) {\n        text.setTextAlign(feature.get('textAlign'));\n      }\n\n      if (feature.get('textOffsetX')) {\n        text.setOffsetX(parseFloat(feature.get('textOffsetX')));\n      }\n\n      if (feature.get('textOffsetY')) {\n        text.setOffsetY(parseFloat(feature.get('textOffsetY')));\n      }\n\n      if (feature.get('textBackgroundFillColor')) {\n        text.setBackgroundFill(\n          new Fill({\n            color: feature.get('textBackgroundFillColor'),\n          }),\n        );\n      }\n\n      if (feature.get('textPadding')) {\n        text.setPadding(\n          feature\n            .get('textPadding')\n            .split(',')\n            .map((n) => parseFloat(n)),\n        );\n      }\n\n      if (image instanceof Icon) {\n        applyTextStyleForIcon(image, text);\n      }\n    }\n\n    if (image instanceof Icon) {\n      /* Apply icon rotation if defined (by default only written as\n       * <heading> tag, which is not read as rotation value by the ol KML module)\n       */\n      image.setRotation(parseFloat(feature.get('iconRotation')) || 0);\n    }\n\n    fill = undefined;\n    stroke = undefined;\n\n    styles = (feat, resolution) => {\n      /* Options to be used for picture scaling with map, should have at least\n       * a resolution attribute (this is the map resolution at the zoom level when\n       * the picture is created), can take an optional constant for further scale\n       * adjustment.\n       * e.g. { resolution: 0.123, defaultScale: 1 / 6 }\n       */\n\n      if (feat.get('pictureOptions')) {\n        let pictureOptions = feat.get('pictureOptions');\n        if (typeof pictureOptions === 'string') {\n          pictureOptions = JSON.parse(pictureOptions);\n        }\n        feat.set('pictureOptions', pictureOptions);\n        if (pictureOptions.resolution) {\n          image.setScale(\n            (pictureOptions.resolution / resolution) *\n              pictureOptions.defaultScale || 1,\n          );\n        }\n      }\n\n      return new Style({\n        fill,\n        stroke,\n        image,\n        text,\n        zIndex: style.getZIndex(),\n      });\n    };\n  }\n\n  // Remove image and text styles for polygons and lines\n  if (\n    !(\n      geom instanceof Point ||\n      geom instanceof MultiPoint ||\n      geom instanceof GeometryCollection\n    )\n  ) {\n    styles = [\n      new Style({\n        fill: style.getFill(),\n        stroke,\n        image: null,\n        text: null,\n        zIndex: style.getZIndex(),\n      }),\n    ];\n\n    // Parse the fillPattern json string and store parsed object\n    let fillPattern = feature.get('fillPattern');\n    if (fillPattern) {\n      fillPattern = JSON.parse(fillPattern);\n      feature.set('fillPattern', fillPattern);\n\n      /* We set the fill pattern for polygons */\n      if (!style.getFill()) {\n        styles[0].setFill(new Fill());\n      }\n      const patternOrColor = fillPattern.empty\n        ? [0, 0, 0, 0]\n        : getPolygonPattern(fillPattern.id, fillPattern.color);\n      styles[0].getFill().setColor(patternOrColor);\n    }\n\n    // Add line's icons styles\n    if (feature.get('lineStartIcon')) {\n      styles.push(\n        getLineIcon(\n          feature,\n          JSON.parse(feature.get('lineStartIcon')),\n          stroke.getColor(),\n        ),\n      );\n    }\n\n    if (feature.get('lineEndIcon')) {\n      styles.push(\n        getLineIcon(\n          feature,\n          JSON.parse(feature.get('lineEndIcon')),\n          stroke.getColor(),\n          false,\n        ),\n      );\n    }\n  }\n  feature.setStyle(styles);\n};\n\n/**\n * Read a KML string.\n * @param {String} kmlString A string representing a KML file.\n * @param {<ol.Projection|String>} featureProjection The projection used by the map.\n */\nconst readFeatures = (kmlString, featureProjection) => {\n  const features = new KML().readFeatures(kmlString, {\n    featureProjection,\n  });\n  features.forEach((feature) => {\n    sanitizeFeature(feature);\n  });\n  return features;\n};\n\n/**\n * Create a KML string.\n * @param {VectorLayer} layer A react-spatial VectorLayer.\n * @param {<ol.Projection|String>} featureProjection The current projection used by the features.\n */\nconst writeFeatures = (layer, featureProjection, mapResolution) => {\n  let featString;\n  const { olLayer } = layer;\n  const exportFeatures = [];\n\n  olLayer.getSource().forEachFeature((feature) => {\n    // We silently ignore Circle elements as they are\n    // not supported in kml.\n    if (feature.getGeometry().getType() === 'Circle') {\n      return;\n    }\n\n    const clone = feature.clone();\n    clone.setId(feature.getId());\n    clone.getGeometry().setProperties(feature.getGeometry().getProperties());\n    clone.getGeometry().transform(featureProjection, 'EPSG:4326');\n\n    // We remove all ExtendedData not related to style.\n    Object.keys(feature.getProperties()).forEach((key) => {\n      if (!/^(geometry|name|description)$/.test(key)) {\n        clone.unset(key, true);\n      }\n    });\n\n    let styles;\n\n    if (feature.getStyleFunction()) {\n      styles = feature.getStyleFunction()(feature, mapResolution);\n    } else if (olLayer && olLayer.getStyleFunction()) {\n      styles = olLayer.getStyleFunction()(feature, mapResolution);\n    }\n\n    const mainStyle = styles[0] || styles;\n\n    const newStyle = {\n      fill: mainStyle.getFill(),\n      stroke: mainStyle.getStroke(),\n      text: mainStyle.getText(),\n      image: mainStyle.getImage(),\n      zIndex: mainStyle.getZIndex(),\n    };\n\n    if (newStyle.zIndex) {\n      clone.set('zIndex', newStyle.zIndex);\n    }\n\n    // If we see spaces at the beginning or at the end we add a empty\n    // white space at the beginning and at the end.\n    if (newStyle.text && /^\\s|\\s$/g.test(newStyle.text.getText())) {\n      newStyle.text.setText(`\\u200B${newStyle.text.getText()}\\u200B`);\n    }\n\n    // Set custom properties to be converted in extendedData in KML.\n    if (newStyle.text && newStyle.text.getRotation()) {\n      clone.set('textRotation', newStyle.text.getRotation());\n    }\n\n    if (newStyle.text && newStyle.text.getFont()) {\n      clone.set('textFont', newStyle.text.getFont());\n    }\n\n    if (newStyle.text && newStyle.text.getTextAlign()) {\n      clone.set('textAlign', newStyle.text.getTextAlign());\n    }\n\n    if (newStyle.text && newStyle.text.getOffsetX()) {\n      clone.set('textOffsetX', newStyle.text.getOffsetX());\n    }\n\n    if (newStyle.text && newStyle.text.getOffsetY()) {\n      clone.set('textOffsetY', newStyle.text.getOffsetY());\n    }\n\n    if (newStyle.text && newStyle.text.getStroke()) {\n      if (newStyle.text.getStroke().getColor()) {\n        clone.set(\n          'textStrokeColor',\n          asString(newStyle.text.getStroke().getColor()),\n        );\n      }\n\n      if (newStyle.text.getStroke().getWidth()) {\n        clone.set('textStrokeWidth', newStyle.text.getStroke().getWidth());\n      }\n    }\n\n    if (newStyle.text && newStyle.text.getBackgroundFill()) {\n      clone.set(\n        'textBackgroundFillColor',\n        asString(newStyle.text.getBackgroundFill().getColor()),\n      );\n    }\n\n    if (newStyle.text && newStyle.text.getPadding()) {\n      clone.set('textPadding', newStyle.text.getPadding().join());\n    }\n\n    if (newStyle.stroke && newStyle.stroke.getLineDash()) {\n      clone.set('lineDash', newStyle.stroke.getLineDash().join(','));\n    }\n\n    if (newStyle.image instanceof Circle) {\n      newStyle.image = null;\n    }\n\n    if (newStyle.image) {\n      const imgSource = newStyle.image.getSrc();\n      if (!/(http(s?)):\\/\\//gi.test(imgSource)) {\n        // eslint-disable-next-line no-console\n        console.log(\n          'Local image source not supported for KML export.' +\n            'Should use remote web server',\n        );\n      }\n\n      if (newStyle.image.getRotation()) {\n        // We set the icon rotation as extended data\n        clone.set('iconRotation', newStyle.image.getRotation());\n      }\n\n      // Set map resolution to use for icon-to-map proportional scaling\n      if (feature.get('pictureOptions')) {\n        clone.set(\n          'pictureOptions',\n          JSON.stringify(feature.get('pictureOptions')),\n        );\n      }\n    }\n\n    // In case a fill pattern should be applied (use fillPattern attribute to store pattern id, color etc)\n    if (feature.get('fillPattern')) {\n      clone.set('fillPattern', JSON.stringify(feature.get('fillPattern')));\n      newStyle.fill = null;\n    }\n\n    // maxZoom: maximum zoom level at which the feature is displayed\n    if (feature.get('maxZoom')) {\n      clone.set('maxZoom', parseFloat(feature.get('maxZoom'), 10));\n    }\n\n    // minZoom: minimum zoom level at which the feature is displayed\n    if (feature.get('minZoom')) {\n      clone.set('minZoom', parseFloat(feature.get('minZoom'), 10));\n    }\n\n    // If only text is displayed we must specify an\n    // image style with scale=0\n    if (newStyle.text && !newStyle.image) {\n      newStyle.image = new Icon({\n        src: 'noimage',\n        scale: 0,\n      });\n    }\n\n    // In case we use line's icon .\n    const extraLineStyles = (Array.isArray(styles) && styles.slice(1)) || [];\n    extraLineStyles.forEach((extraLineStyle) => {\n      if (\n        extraLineStyle &&\n        extraLineStyle.getImage() instanceof Icon &&\n        extraLineStyle.getGeometry()\n      ) {\n        const coord = extraLineStyle.getGeometry()(feature).getCoordinates();\n        const startCoord = feature.getGeometry().getFirstCoordinate();\n        if (coord[0] === startCoord[0] && coord[1] === startCoord[1]) {\n          clone.set(\n            'lineStartIcon',\n            JSON.stringify({\n              url: extraLineStyle.getImage().getSrc(),\n              scale: extraLineStyle.getImage().getScale(),\n              size: extraLineStyle.getImage().getSize(),\n              zIndex: extraLineStyle.getZIndex(),\n            }),\n          );\n        } else {\n          clone.set(\n            'lineEndIcon',\n            JSON.stringify({\n              url: extraLineStyle.getImage().getSrc(),\n              scale: extraLineStyle.getImage().getScale(),\n              size: extraLineStyle.getImage().getSize(),\n              zIndex: extraLineStyle.getZIndex(),\n            }),\n          );\n        }\n      }\n    });\n\n    const olStyle = new Style(newStyle);\n    clone.setStyle(olStyle);\n\n    if (\n      !(\n        clone.getGeometry() instanceof Point &&\n        olStyle.getText() &&\n        !olStyle.getText().getText()\n      )\n    ) {\n      exportFeatures.push(clone);\n    }\n  });\n\n  if (exportFeatures.length > 0) {\n    if (exportFeatures.length === 1) {\n      // force the add of a <Document> node\n      exportFeatures.push(new Feature());\n    }\n\n    featString = new KML({\n      extractStyles: true,\n      defaultStyle: [kmlStyle],\n    }).writeFeatures(exportFeatures);\n\n    // Remove no image hack\n    featString = featString.replace(\n      /<Icon>\\s*<href>noimage<\\/href>\\s*<\\/Icon>/g,\n      '',\n    );\n\n    // Remove empty placemark added to have\n    // <Document> tag\n    featString = featString.replace(/<Placemark\\/>/g, '');\n\n    // Add KML document name\n    if (layer.name) {\n      featString = featString.replace(\n        /<Document>/,\n        `<Document><name>${layer.name}</name>`,\n      );\n    }\n  }\n\n  return featString;\n};\n\nexport default { readFeatures, writeFeatures };\n"],"names":["const","let"],"mappings":"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"}