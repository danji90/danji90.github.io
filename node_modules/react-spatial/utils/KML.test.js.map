{"version":3,"file":"KML.test.js","sources":["../../src/utils/KML.test.js"],"sourcesContent":["import { configure } from 'enzyme';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Style } from 'ol/style';\nimport { get } from 'ol/proj';\nimport Adapter from 'enzyme-adapter-react-16';\nimport beautify from 'xml-beautifier';\nimport KML from './KML';\n\nconfigure({ adapter: new Adapter() });\nconst xmlns =\n  'xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd\"';\n\nconst expectWriteResult = (feats, str) => {\n  expect(\n    beautify(\n      KML.writeFeatures(\n        {\n          name: 'lala',\n          olLayer: new VectorLayer({\n            source: new VectorSource({\n              features: feats,\n            }),\n          }),\n        },\n        get('EPSG:4326'),\n      ),\n    ),\n  ).toEqual(beautify(str));\n};\n\ndescribe('KML', () => {\n  describe('readFeatures() and writeFeatures()', () => {\n    test('should read/write LineStyle and ExtendedData (linesDash, lineStartIcon and lineEndIcon).', () => {\n      const str = `\n        <kml ${xmlns}>\n          <Document>\n            <name>lala</name>\n            <Placemark>\n                <Style>\n                  <LineStyle>\n                    <color>ff056600</color>\n                    <width>1</width>\n                  </LineStyle>\n                </Style>\n                <ExtendedData>\n                  <Data name=\"lineDash\"><value>40,40</value></Data>\n                  <Data name=\"lineEndIcon\"><value>{\"url\":\"fooarrowend.png\",\"scale\":0.35,\"size\":[36,58],\"zIndex\":1}</value></Data>\n                  <Data name=\"lineStartIcon\"><value>{\"url\":\"fooarrowstart.png\",\"scale\":0.35,\"size\":[36,58],\"zIndex\":1}</value></Data>\n                </ExtendedData>\n                <LineString><coordinates>0,1,0 3,5,0 40,25,0</coordinates></LineString>\n            </Placemark>\n          </Document>\n        </kml>\n      `;\n      const feats = KML.readFeatures(str);\n      const styles = feats[0].getStyle();\n      expect(feats.length).toBe(1);\n      expect(styles.length).toBe(3);\n\n      // line stroke\n      const strokeStyle = styles[0].getStroke();\n      expect(strokeStyle.getColor()).toEqual([0, 102, 5, 1]);\n      expect(strokeStyle.getLineDash()).toEqual([40, 40]);\n\n      // line start icon\n      const lineStartStyle = styles[1];\n      expect(lineStartStyle.getImage().getRotation()).toEqual(\n        -0.9272952180016122,\n      );\n      expect(lineStartStyle.getImage().getColor()).toEqual([0, 102, 5, 1]);\n      expect(lineStartStyle.getImage().getRotateWithView()).toBe(true);\n      expect(lineStartStyle.getGeometry()(feats[0]).getCoordinates()).toEqual([\n        0,\n        1,\n        0,\n      ]);\n      expect(lineStartStyle.getZIndex()).toEqual(1);\n\n      // line end icon\n      const lineEndStyle = styles[2];\n      expect(lineEndStyle.getImage().getRotation()).toEqual(\n        -0.49555167348582857,\n      );\n      expect(lineEndStyle.getImage().getRotateWithView()).toBe(true);\n      expect(lineEndStyle.getImage().getColor()).toEqual([0, 102, 5, 1]);\n      expect(lineEndStyle.getGeometry()(feats[0]).getCoordinates()).toEqual([\n        40,\n        25,\n        0,\n      ]);\n      expect(lineEndStyle.getZIndex()).toEqual(1);\n\n      expectWriteResult(feats, str);\n    });\n\n    test('should read/write TextStyle and ExtendedData.', () => {\n      const str = `\n        <kml ${xmlns}>\n          <Document>\n            <name>lala</name>\n            <Placemark>\n              <name>   bar  </name>\n              <Style>\n                <IconStyle>\n                  <scale>0</scale>\n                </IconStyle>\n                <LabelStyle>\n                  <color>ff7e3420</color>\n                  <scale>2</scale>\n                </LabelStyle>\n              </Style>\n              <ExtendedData>\n                <Data name=\"textAlign\">\n                  <value>right</value>\n                </Data>\n                <Data name=\"textBackgroundFillColor\">\n                  <value>rgba(255,255,255,0.01)</value>\n                </Data>\n                <Data name=\"textFont\">\n                  <value>bold 16px arial</value>\n                </Data>\n                <Data name=\"textOffsetX\">\n                  <value>-90</value>\n                </Data>\n                <Data name=\"textOffsetY\">\n                  <value>30</value>\n                </Data>\n                <Data name=\"textPadding\">\n                  <value>5,6,7,8</value>\n                </Data>\n                <Data name=\"textRotation\">\n                  <value>2.303834612632515</value>\n                </Data>\n                <Data name=\"textStrokeColor\">\n                  <value>rgba(100,255,255,0.2)</value>\n                </Data>\n                <Data name=\"textStrokeWidth\">\n                  <value>3</value>\n                </Data>\n              </ExtendedData>\n              <Point>\n                <coordinates>0,0,0</coordinates>\n              </Point>\n            </Placemark>\n          </Document>\n        </kml>\n      `;\n      const feats = KML.readFeatures(str);\n      const style = feats[0].getStyleFunction()(feats[0], 1);\n      expect(feats.length).toBe(1);\n      expect(style instanceof Style).toBe(true);\n\n      // Text\n      const styleText = style.getText();\n      expect(styleText.getText()).toBe('bar'); // spaces are trimmed.\n      expect(styleText.getFont()).toEqual('bold 16px arial');\n      expect(styleText.getFill()).toEqual({ color_: [32, 52, 126, 1] });\n      expect(styleText.getStroke()).toEqual({\n        color_: 'rgba(100,255,255,0.2)',\n        width_: 3,\n        lineCap_: undefined,\n        lineDashOffset_: undefined,\n        lineDash_: null,\n        lineJoin_: undefined,\n        miterLimit_: undefined,\n      });\n      expect(styleText.getScale()).toEqual(2);\n      expect(styleText.getRotation()).toEqual('2.303834612632515');\n      expect(styleText.getPadding()).toEqual([5, 6, 7, 8]);\n      expect(styleText.getBackgroundFill()).toEqual({\n        color_: 'rgba(255,255,255,0.01)',\n      });\n      expect(styleText.getTextAlign()).toEqual('right');\n      expect(styleText.getOffsetX()).toEqual(-90);\n      expect(styleText.getOffsetY()).toEqual(30);\n      expectWriteResult(feats, str);\n    });\n\n    test('should read and write lineDash and fillPattern style for polygon', () => {\n      const str = `\n        <kml ${xmlns}>\n          <Document>\n            <name>lala</name>\n            <Placemark>\n                <description></description>\n                <Style>\n                    <LineStyle>\n                        <color>ff0000eb</color>\n                        <width>2</width>\n                    </LineStyle>\n                    <PolyStyle>\n                      <fill>0</fill>\n                    </PolyStyle>\n                </Style>\n                <ExtendedData>\n                    <Data name=\"fillPattern\">\n                        <value>{\"id\":3,\"color\":[235,0,0,1]}</value>\n                    </Data>\n                    <Data name=\"lineDash\">\n                        <value>1,1</value>\n                    </Data>\n                </ExtendedData>\n                <Polygon>\n                    <outerBoundaryIs>\n                        <LinearRing>\n                            <coordinates>8.521,47.381,0 8.529,47.375,0 8.531,47.382,0 8.521,47.381,0</coordinates>\n                        </LinearRing>\n                    </outerBoundaryIs>\n                </Polygon>\n            </Placemark>\n        </Document>\n      </kml>\n      `;\n      const feats = KML.readFeatures(str);\n      const styles = feats[0].getStyle();\n      expect(feats.length).toBe(1);\n      expect(styles.length).toBe(1);\n\n      // Polygon\n      const feature = feats[0];\n      const outlineStyle = styles[0].getStroke();\n      expect(outlineStyle.getColor()).toEqual([235, 0, 0, 1]);\n      expect(outlineStyle.getWidth()).toEqual(2);\n      const fillStyle = styles[0].getFill();\n      expect(feature.get('fillPattern')).toEqual({\n        id: 3,\n        color: [235, 0, 0, 1],\n      });\n      const color = fillStyle.getColor();\n      expect(color.canvas).toMatchSnapshot();\n      expect(color.id).toBe(3);\n      expect(color.color).toEqual([235, 0, 0, 1]);\n      expectWriteResult(feats, str);\n    });\n\n    test('should add zIndex and rotation to icon style and pictureOptions to feature properties.', () => {\n      const str = `\n      <kml ${xmlns}>\n        <Document>\n            <name>lala</name>\n            <Placemark>\n                <description></description>\n                <Style>\n                    <IconStyle>\n                        <heading>\n                          1.5707963267948966\n                        </heading>\n                        <Icon>\n                            <href>https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png</href>\n                            <gx:w>64</gx:w>\n                            <gx:h>64</gx:h>\n                        </Icon>\n                        <hotSpot x=\"20\" y=\"2\" xunits=\"pixels\" yunits=\"pixels\"/>\n                    </IconStyle>\n                </Style>\n                <ExtendedData>\n                    <Data name=\"iconRotation\">\n                      <value>1.5707963267948966</value>\n                    </Data>\n                    <Data name=\"maxZoom\">\n                      <value>18.5</value>\n                    </Data>\n                    <Data name=\"minZoom\">\n                      <value>15</value>\n                    </Data>\n                    <Data name=\"pictureOptions\">\n                      <value>{\"resolution\":4,\"defaultScale\":0.5}</value>\n                    </Data>\n                    <Data name=\"zIndex\">\n                        <value>1</value>\n                    </Data>\n                </ExtendedData>\n                <Point>\n                    <coordinates>0,0,0</coordinates>\n                </Point>\n            </Placemark>\n        </Document>\n      </kml>\n      `;\n      const feats = KML.readFeatures(str);\n      const style = feats[0].getStyleFunction()(feats[0], 1);\n      expect(style.getZIndex()).toBe(1);\n      expect(style.getImage().getRotation()).toBe(1.5707963267948966);\n      expect(feats[0].get('pictureOptions')).toEqual({\n        resolution: 4,\n        defaultScale: 0.5,\n      });\n      expect(feats[0].get('maxZoom')).toEqual(18.5);\n      expect(feats[0].get('minZoom')).toEqual(15);\n      expectWriteResult(feats, str);\n    });\n  });\n});\n"],"names":["const"],"mappings":"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"}