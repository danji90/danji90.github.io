{"version":3,"file":"BaseLayerSwitcher.test.js","sources":["../../../src/components/BaseLayerSwitcher/BaseLayerSwitcher.test.js"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { configure, mount } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport 'jest-canvas-mock';\nimport renderer from 'react-test-renderer';\nimport { Layer } from 'mobility-toolbox-js/ol';\nimport BaseLayerSwitcher from './BaseLayerSwitcher';\n\nconfigure({ adapter: new Adapter() });\n\ndescribe('BaseLayerSwitcher', () => {\n  let layers;\n  const layerImages = {\n    layerFoo: 'foo',\n    layerBar: 'bar',\n    layerFoobar: 'foobar',\n  };\n\n  beforeEach(() => {\n    layers = [\n      new Layer({\n        name: 'bl1',\n        isBaseLayer: true,\n      }),\n      new Layer({\n        name: 'bl2',\n        isBaseLayer: true,\n        visible: false,\n      }),\n      new Layer({\n        name: 'bl3',\n        isBaseLayer: true,\n        visible: false,\n      }),\n    ];\n  });\n\n  describe('matches snapshots', () => {\n    test('using default properties.', () => {\n      const component = renderer.create(\n        <BaseLayerSwitcher layers={layers} layerImages={layerImages} />,\n      );\n      const tree = component.toJSON();\n      expect(tree).toMatchSnapshot();\n    });\n  });\n\n  test('the correct baselayer is visible on mount', () => {\n    const comp = mount(\n      <BaseLayerSwitcher layers={layers} layerImages={layerImages} />,\n    );\n    expect(comp.props().layers[0].visible).toBe(true);\n  });\n\n  test('removes open class and switches layer on click', () => {\n    const comp = mount(\n      <BaseLayerSwitcher layers={layers} layerImages={layerImages} />,\n    );\n    comp.find('.rs-opener').at(0).simulate('click');\n    comp.find('.rs-base-layer-switcher-button').at(3).simulate('click');\n    expect(\n      comp.props().layers.filter((layer) => layer.isBaseLayer)[2].visible,\n    ).toBe(true);\n    expect(comp.find('.rs-base-layer-switcher rs-open').exists()).toBe(false);\n  });\n\n  test('toggles base map instead of opening when only two base layers', () => {\n    const comp = mount(<BaseLayerSwitcher layers={layers.slice(0, 2)} />);\n    expect(\n      comp.props().layers.filter((layer) => layer.isBaseLayer)[0].visible,\n    ).toBe(true);\n    comp.find('.rs-opener').at(0).simulate('click');\n    expect(\n      comp.props().layers.filter((layer) => layer.isBaseLayer)[1].visible,\n    ).toBe(true);\n    expect(comp.find('.rs-base-layer-switcher rs-open').exists()).toBe(false);\n  });\n});\n"],"names":["let","const"],"mappings":"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"}