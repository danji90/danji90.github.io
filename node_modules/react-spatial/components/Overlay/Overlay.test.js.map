{"version":3,"file":"Overlay.test.js","sources":["../../../src/components/Overlay/Overlay.test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { act } from 'react-dom/test-utils';\nimport { configure, mount } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport Adapter from 'enzyme-adapter-react-16';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { Resizable } from 're-resizable';\nimport Overlay from './Overlay';\n\njest.mock('resize-observer-polyfill');\n\nconfigure({ adapter: new Adapter() });\n\nconst propTypes = {\n  isMobileResizable: PropTypes.bool,\n  thresholdWidthForMobile: PropTypes.number,\n};\n\nconst defaultProps = {\n  isMobileResizable: undefined,\n  thresholdWidthForMobile: undefined,\n};\n\nconst BasicComponent = ({ thresholdWidthForMobile, isMobileResizable }) => {\n  const [ref, setRef] = useState(null);\n\n  return (\n    <>\n      <div\n        ref={(node) => {\n          if (node !== ref) {\n            setRef(node);\n          }\n        }}\n        className=\"observer\"\n      />\n      <Overlay\n        observe={ref}\n        thresholdWidthForMobile={thresholdWidthForMobile}\n        isMobileResizable={isMobileResizable}\n      >\n        Test content\n      </Overlay>\n    </>\n  );\n};\nBasicComponent.propTypes = propTypes;\nBasicComponent.defaultProps = defaultProps;\n\ndescribe('Overlay', () => {\n  test('should match snapshot.', () => {\n    const component = renderer.create(<Overlay>Test content</Overlay>);\n    const tree = component.toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n  test('should react on observe resize.', () => {\n    const wrapper = mount(<BasicComponent />);\n    const target = wrapper.find('.observer').getDOMNode();\n\n    act(() => {\n      // The mock class set the onResize property, we just have to run it to\n      // simulate a resize\n      ResizeObserver.onResize([\n        {\n          target,\n          contentRect: {\n            width: 200,\n            height: 200,\n          },\n        },\n      ]);\n    });\n    wrapper.update();\n\n    expect(wrapper.find('.tm-overlay').length > 0).toBe(false);\n    expect(wrapper.find('.tm-overlay-mobile').length > 0).toBe(true);\n  });\n\n  test('should force mobile overlay display on big screen.', () => {\n    const wrapper = mount(\n      <BasicComponent thresholdWidthForMobile={Infinity} />,\n    );\n    const target = wrapper.find('.observer').getDOMNode();\n\n    act(() => {\n      ResizeObserver.onResize([\n        {\n          target,\n          contentRect: {\n            width: 1200,\n            height: 200,\n          },\n        },\n      ]);\n    });\n    wrapper.update();\n\n    expect(wrapper.find('.tm-overlay').length > 0).toBe(false);\n    expect(wrapper.find('.tm-overlay-mobile').length > 0).toBe(true);\n  });\n\n  test('should allow resizing with top handler on mobile.', () => {\n    const wrapper = mount(<BasicComponent />);\n    const target = wrapper.find('.observer').getDOMNode();\n\n    // Force resize to make it mobile.\n    act(() => {\n      ResizeObserver.onResize([\n        {\n          target,\n          contentRect: {\n            width: 200,\n            height: 200,\n          },\n        },\n      ]);\n    });\n    wrapper.update();\n\n    const resizableProps = wrapper.find(Resizable).props();\n\n    expect(resizableProps.enable.top).toBe(true);\n  });\n\n  test('should not allow resizing with top handler on mobile.', () => {\n    const wrapper = mount(<BasicComponent isMobileResizable={false} />);\n    const target = wrapper.find('.observer').getDOMNode();\n\n    // Force resize to make it mobile.\n    act(() => {\n      ResizeObserver.onResize([\n        {\n          target,\n          contentRect: {\n            width: 200,\n            height: 200,\n          },\n        },\n      ]);\n    });\n    wrapper.update();\n\n    const resizableProps = wrapper.find(Resizable).props();\n\n    expect(resizableProps.enable.top).toBe(false);\n  });\n});\n"],"names":["const"],"mappings":"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"}