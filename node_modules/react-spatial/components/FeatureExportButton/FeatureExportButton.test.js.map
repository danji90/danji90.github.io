{"version":3,"file":"FeatureExportButton.test.js","sources":["../../../src/components/FeatureExportButton/FeatureExportButton.test.js"],"sourcesContent":["import 'jest-canvas-mock';\nimport React from 'react';\nimport renderer from 'react-test-renderer';\nimport { configure, mount, shallow } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { Layer } from 'mobility-toolbox-js/ol';\nimport GPX from 'ol/format/GPX';\nimport VectorSource from 'ol/source/Vector';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\nimport Text from 'ol/style/Text';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Circle from 'ol/geom/Circle';\nimport Point from 'ol/geom/Point';\nimport LineString from 'ol/geom/LineString';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport FeatureExportButton from '.';\n\nconfigure({ adapter: new Adapter() });\n\nconst layer = new Layer({\n  name: 'Sample layer',\n  olLayer: new VectorLayer({\n    source: new VectorSource({\n      features: [\n        new Feature({\n          geometry: new Point([819103.972418, 6120013.078324]),\n        }),\n      ],\n    }),\n  }),\n});\n\ndescribe('FeatureExportButton', () => {\n  describe('should match snapshot', () => {\n    test('with default attributes.', () => {\n      const component = renderer.create(<FeatureExportButton layer={layer} />);\n      const tree = component.toJSON();\n      expect(tree).toMatchSnapshot();\n    });\n\n    test('should match snapshot with cutom attributes.', () => {\n      const component = renderer.create(\n        <FeatureExportButton\n          layer={layer}\n          className=\"foo\"\n          title=\"bar\"\n          // eslint-disable-next-line jsx-a11y/tabindex-no-positive\n          tabIndex={2}\n        />,\n      );\n      const tree = component.toJSON();\n      expect(tree).toMatchSnapshot();\n    });\n\n    test('should match snapshot with children passed.', () => {\n      const component = renderer.create(\n        <FeatureExportButton layer={layer}>\n          <div>Foo</div>\n        </FeatureExportButton>,\n      );\n      const tree = component.toJSON();\n      expect(tree).toMatchSnapshot();\n    });\n  });\n\n  describe('triggers onClick', () => {\n    // Use library 'jest-environment-jsdom-fourteen'\n    // to allow jest test of format.writeFeatures(feats).\n    const renderLayer = (featNumbers) => {\n      const featsArray = [];\n      for (let i = 0; i < featNumbers; i += 1) {\n        featsArray.push(\n          new Feature({\n            geometry: new Point([819103.972418, 6120013.078324]),\n          }),\n        );\n      }\n\n      return new Layer({\n        name: 'ExportLayer',\n        olLayer: new VectorLayer({\n          source: new VectorSource({\n            features: featsArray,\n          }),\n        }),\n      });\n    };\n\n    const iconLayer = renderLayer(1);\n\n    const textStyle = new Style({\n      text: new Text({\n        text: 'text name',\n        font: 'normal 16px Helvetica',\n        stroke: new Stroke({\n          color: [255, 255, 255, 1],\n          width: 3,\n        }),\n      }),\n    });\n\n    test('should be trigger click function.', () => {\n      const wrapper = shallow(<FeatureExportButton layer={iconLayer} />);\n      const spy = jest.spyOn(FeatureExportButton, 'exportFeatures');\n      wrapper.find('.rs-feature-export-button').simulate('click');\n      expect(spy).toHaveBeenCalledTimes(1);\n    });\n\n    test('should use attributes for parsing', () => {\n      const wrapper = mount(\n        <FeatureExportButton\n          format={GPX}\n          projection=\"EPSG:4326\"\n          layer={iconLayer}\n        />,\n      );\n      const spy = jest.spyOn(FeatureExportButton, 'exportFeatures');\n      wrapper.find('.rs-feature-export-button').simulate('click');\n      expect(spy).toHaveBeenCalledWith(iconLayer, 'EPSG:4326', GPX);\n    });\n\n    describe('#createFeatureString()', () => {\n      describe('using KMLFormat', () => {\n        test('should export kml by default.', () => {\n          const exportString = FeatureExportButton.createFeatureString(\n            iconLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          expect(exportString).toMatchSnapshot();\n        });\n\n        const iconStyle = new Style({\n          image: new Icon({\n            anchor: [0.5, 46],\n            anchorXUnits: 'fraction',\n            anchorYUnits: 'pixels',\n            src: 'https://openlayers.org/en/latest/examples/data/icon.png',\n          }),\n        });\n\n        iconLayer.olLayer.getSource().forEachFeature((f) => {\n          f.setStyle(iconStyle);\n        });\n\n        test('should export icon style in kml.', () => {\n          const exportString = FeatureExportButton.createFeatureString(\n            iconLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedString =\n            '<Style><IconStyle><Icon><href>' +\n            'https://openlayers.org/en/latest/examples/data/icon.png' +\n            '</href></Icon></IconStyle></Style>';\n          expect(exportString.match(/<Style>(.*?)<\\/Style>/g)[0]).toBe(\n            expectedString,\n          );\n        });\n\n        test('should export with layer name.', () => {\n          const namedlayer = renderLayer(1);\n          const exportString = FeatureExportButton.createFeatureString(\n            namedlayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedname = '<name>ExportLayer</name>';\n          expect(exportString.match(/<name>(.*?)<\\/name>/g)[0]).toBe(\n            expectedname,\n          );\n        });\n\n        test('should export without layer name.', () => {\n          const unnamedlayer = renderLayer(1);\n          const exportString = FeatureExportButton.createFeatureString(\n            unnamedlayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          expect(\n            /<document><name>ExportLayer<\\/name>/g.test(exportString),\n          ).toBe(false);\n        });\n\n        test('should export text style in kml.', () => {\n          const textlayer = renderLayer(2);\n\n          textlayer.olLayer.getSource().forEachFeature((f) => {\n            f.setStyle(textStyle);\n          });\n          const exportString = FeatureExportButton.createFeatureString(\n            textlayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedStyle =\n            '<Style><IconStyle><scale>0</scale></IconStyle>' +\n            '<LabelStyle><color>ff333333</color></LabelStyle></Style>';\n          expect(exportString.match(/<Style>(.*?)<\\/Style>/g)[0]).toBe(\n            expectedStyle,\n          );\n        });\n\n        test('should only export none-empty text style in kml.', () => {\n          const textlayer = renderLayer(2);\n\n          textlayer.olLayer.getSource().forEachFeature((f) => {\n            f.setStyle(textStyle);\n          });\n          const exportString1 = FeatureExportButton.createFeatureString(\n            textlayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n\n          expect(\n            exportString1.match(/<Placemark>(.*?)<\\/Placemark>/g).length,\n          ).toBe(2);\n\n          const newStyle = new Style({\n            text: new Text({\n              text: '',\n              font: 'normal 16px Helvetica',\n              stroke: new Stroke({\n                color: [255, 255, 255, 1],\n                width: 3,\n              }),\n            }),\n          });\n          // Set empty string as name for first feature\n          textlayer.olLayer.getSource().getFeatures()[0].setStyle(newStyle);\n\n          const exportString2 = FeatureExportButton.createFeatureString(\n            textlayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n\n          expect(\n            exportString2.match(/<Placemark>(.*?)<\\/Placemark>/g).length,\n          ).toBe(1);\n        });\n\n        test(\"should not export 'Cirle geom' (kml unsupported).\", () => {\n          const circleLayer = new Layer({\n            name: 'ExportLayer',\n            olLayer: new VectorLayer({\n              source: new VectorSource({\n                features: [\n                  new Feature({\n                    geometry: new Circle({\n                      center: [843119.531243, 6111943.000197],\n                      radius: 1000,\n                    }),\n                  }),\n                ],\n              }),\n            }),\n          });\n\n          const circleStyle = new Style({\n            stroke: new Stroke({\n              color: 'red',\n              width: 3,\n            }),\n            fill: new Fill({\n              color: 'rgba(255, 0, 0, 0.1)',\n            }),\n          });\n\n          circleLayer.olLayer.getSource().forEachFeature((f) => {\n            f.setStyle(circleStyle);\n          });\n          const exportString = FeatureExportButton.createFeatureString(\n            circleLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          expect(exportString).toBe(undefined);\n        });\n\n        test('should export extended data.', () => {\n          const extendedLayer = renderLayer(1);\n\n          const style = new Style({\n            stroke: new Stroke({\n              color: [0, 0, 0, 1],\n              lineDash: [40, 40],\n            }),\n            text: new Text({\n              text: 'text name',\n              font: 'normal 18px Arial',\n              rotation: 0.5,\n              backgroundFill: new Fill({\n                color: 'rgba(255,255,255,0.01)',\n              }),\n            }),\n          });\n\n          extendedLayer.olLayer.getSource().forEachFeature((f) => {\n            f.setStyle(style);\n          });\n          const exportString = FeatureExportButton.createFeatureString(\n            extendedLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedStyle =\n            '<ExtendedData><Data name=\"lineDash\"><value>40,40</value></Data>' +\n            '<Data name=\"textBackgroundFillColor\"><value>rgba(255,255,255,0.01)</value></Data>' +\n            '<Data name=\"textFont\"><value>normal 18px Arial</value></Data>' +\n            '<Data name=\"textRotation\"><value>0.5</value></Data></ExtendedData>';\n          expect(\n            exportString.match(/<ExtendedData>(.*?)<\\/ExtendedData>/g)[0],\n          ).toBe(expectedStyle);\n        });\n\n        test('should not export others extended data than style.', () => {\n          const extendedLayer = renderLayer(1);\n\n          const style = new Style({\n            stroke: new Stroke({\n              color: [0, 0, 0, 1],\n              lineDash: [40, 40],\n            }),\n            text: new Text({\n              text: 'text name',\n              font: 'normal 18px Arial',\n              rotation: 0.5,\n              backgroundFill: new Fill({\n                color: 'rgba(255,255,255,0.01)',\n              }),\n            }),\n          });\n\n          extendedLayer.olLayer.getSource().forEachFeature((f) => {\n            f.setStyle(style);\n            f.set('foo', 'bar');\n          });\n          const exportString = FeatureExportButton.createFeatureString(\n            extendedLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedStyle =\n            '<ExtendedData><Data name=\"lineDash\"><value>40,40</value></Data>' +\n            '<Data name=\"textBackgroundFillColor\"><value>rgba(255,255,255,0.01)</value></Data>' +\n            '<Data name=\"textFont\"><value>normal 18px Arial</value></Data>' +\n            '<Data name=\"textRotation\"><value>0.5</value></Data></ExtendedData>';\n          expect(\n            exportString.match(/<ExtendedData>(.*?)<\\/ExtendedData>/g)[0],\n          ).toBe(expectedStyle);\n        });\n\n        test('should export lineStartIcon and lineEndIcon style.', () => {\n          const extendedLayer = renderLayer(1);\n          const line = new Feature({\n            geometry: new LineString([\n              [0, 1],\n              [2, 3],\n              [4, 5],\n            ]),\n          });\n          extendedLayer.olLayer.getSource().addFeatures([line]);\n\n          const style = [\n            new Style({\n              stroke: new Stroke({\n                color: [0, 0, 0, 1],\n                lineDash: [40, 40],\n              }),\n            }),\n            new Style({\n              geometry: () => {\n                return new Point([4, 5]);\n              },\n              image: new Icon({\n                src: 'fooarrowend.png',\n              }),\n            }),\n            new Style({\n              geometry: () => {\n                return new Point([0, 1]);\n              },\n              image: new Icon({\n                src: 'fooarrowstart.png',\n              }),\n            }),\n          ];\n          line.setStyle(style);\n\n          const exportString = FeatureExportButton.createFeatureString(\n            extendedLayer,\n            FeatureExportButton.defaultProps.projection,\n            FeatureExportButton.defaultProps.format,\n          );\n          const expectedStyle =\n            '<ExtendedData><Data name=\"lineDash\"><value>40,40</value></Data>' +\n            '<Data name=\"lineEndIcon\">' +\n            '<value>{\"url\":\"fooarrowend.png\",\"scale\":1,\"size\":null}</value></Data>' +\n            '<Data name=\"lineStartIcon\">' +\n            '<value>{\"url\":\"fooarrowstart.png\",\"scale\":1,\"size\":null}</value></Data>' +\n            '</ExtendedData>';\n\n          expect(\n            exportString.match(/<ExtendedData>(.*?)<\\/ExtendedData>/g)[0],\n          ).toBe(expectedStyle);\n        });\n      });\n    });\n  });\n});\n"],"names":["const","let"],"mappings":"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"}