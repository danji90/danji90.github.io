function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }
import React, { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import OLMap from 'ol/Map';
import { unByKey } from 'ol/Observable';
import degrees from 'radians-degrees';
import NorthArrowSimple from '../../images/northArrow.svg';
import NorthArrowCircle from '../../images/northArrowCircle.svg';

var propTypes = {
  /**
   * An [ol/map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html).
   */
  map: PropTypes.instanceOf(OLMap).isRequired,

  /**
   * Rotation of the north arrow in degrees.
   */
  rotationOffset: PropTypes.number,

  /**
   * Display circle around the north arrow. Not used if pass children.
   */
  circled: PropTypes.bool,

  /**
   *  Children content of the north arrow.
   */
  children: PropTypes.node,
};

var defaultProps = {
  rotationOffset: 0,
  circled: false,
  children: null,
};

var getRotation = function (map, rotationOffset) { return degrees(map.getView().getRotation()) + rotationOffset; };

/**
 * This NorthArrow component inserts an arrow pointing north into an
 * [ol/map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html).
 */
function NorthArrow(ref) {
  var map = ref.map;
  var rotationOffset = ref.rotationOffset;
  var circled = ref.circled;
  var children = ref.children;
  var rest = objectWithoutProperties( ref, ["map", "rotationOffset", "circled", "children"] );
  var other = rest;

  var ref$1 = useState(rotationOffset);
  var rotation = ref$1[0];
  var setRotation = ref$1[1];

  useEffect(function () {
    if (!map) {
      return null;
    }
    var key = map.on('postrender', function () {
      setRotation(getRotation(map, rotationOffset));
    });
    return function () {
      unByKey(key);
    };
  }, [map, rotationOffset]);

  return (
    React.createElement( 'div', Object.assign({},
      { className: "rs-north-arrow" }, other, { style: { transform: ("rotate(" + rotation + "deg)") } }),
      children || (circled ? React.createElement( NorthArrowCircle, null ) : React.createElement( NorthArrowSimple, null ))
    )
  );
}

NorthArrow.propTypes = propTypes;
NorthArrow.defaultProps = defaultProps;

export default React.memo(NorthArrow);

//# sourceMappingURL=NorthArrow.js.map