import React, { lazy, Suspense } from 'react';
import PropTypes from 'prop-types';
import { makeStyles } from '@material-ui/core';

var ext = '_round-blue-01.svg';
var iconForMot = {};
[
  'bus',
  'ferry',
  'gondola',
  'tram',
  'rail',
  'funicular',
  'cable_car',
  'subway' ].forEach(function (mot) {
  iconForMot[mot] = lazy(function () { return import(("../../images/mots/" + mot + ext)); });
});

var useStyles = makeStyles(function (theme) {
  return {
    flex: {
      display: 'flex',
      alignItems: 'center',
    },
    icon: {
      marginRight: theme.spacing(2),
    },
  };
});

function StopsFinderOption(ref) {
  var option = ref.option;

  var classes = useStyles();

  return (
    React.createElement( Suspense, { fallback: React.createElement( 'div', null ) },
      React.createElement( 'div', { className: classes.flex },
        Object.entries(option.properties.mot).map(function (ref) {
          var key = ref[0];
          var value = ref[1];

          if (value) {
            var MotIcon = iconForMot[key];
            return (
              React.createElement( 'span', { className: classes.icon },
                React.createElement( MotIcon, null )
              )
            );
          }
          return React.createElement( React.Fragment, null );
        }),
        React.createElement( 'span', null, option.properties.name )
      )
    )
  );
}

StopsFinderOption.propTypes = {
  option: PropTypes.object.isRequired,
};

export default React.memo(StopsFinderOption);

//# sourceMappingURL=StopsFinderOption.js.map