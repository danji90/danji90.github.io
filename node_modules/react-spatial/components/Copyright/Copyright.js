function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }
import React, { useMemo, useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import { Map } from 'ol';
import CopyrightControl from 'mobility-toolbox-js/ol/controls/CopyrightControl';

var propTypes = {
  /**
   * A map.
   */
  map: PropTypes.instanceOf(Map).isRequired,

  /**
   * Format function. Called with an array of copyrights from visible layers
   * and returns the copyright.
   */
  format: PropTypes.func,

  /**
   * CSS class of th root element
   */
  className: PropTypes.string,
};

var defaultProps = {
  format: function (copyrights) { return copyrights.join(' | '); },
  className: 'rs-copyright',
};

/**
 * The Copyright component uses the
 * [mobility-toolbox-js CopyrightControl](https://mobility-toolbox-js.geops.io/api/class/src/mapbox/controls/CopyrightControl%20js~CopyrightControl%20html-offset-anchor)
 * to render the layer copyrights.
 */
function Copyright(ref) {
  var map = ref.map;
  var format = ref.format;
  var rest = objectWithoutProperties( ref, ["map", "format"] );
  var other = rest;

  var ref$1 = useState([]);
  var copyrights = ref$1[0];
  var setCopyrights = ref$1[1];

  var control = useMemo(function () {
    return new CopyrightControl({
      target: document.createElement('div'),
      element: document.createElement('div'),
      render: function render() {
        // eslint-disable-next-line react/no-this-in-sfc
        var newCopyrights = this.getCopyrights();
        if (copyrights.toString() !== newCopyrights.toString()) {
          setCopyrights(newCopyrights);
        }
      },
    });
  }, []);

  // Ensure the control is not associated to the wrong map
  useEffect(function () {
    if (!control) {
      return function () {};
    }

    control.map = map;

    return function () {
      control.map = null;
    };
  }, [map, control]);

  if (!control || !control.getCopyrights().length) {
    return null;
  }

  return (
    React.createElement( 'div', Object.assign({},
      // eslint-disable-next-line react/jsx-props-no-spreading
      other, { dangerouslySetInnerHTML: {
        __html: format(copyrights) || '',
      } }))
  );
}

Copyright.propTypes = propTypes;
Copyright.defaultProps = defaultProps;

export default React.memo(Copyright);

//# sourceMappingURL=Copyright.js.map