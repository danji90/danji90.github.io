function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }
import React, { useRef, useEffect } from 'react';
import PropTypes from 'prop-types';
import OLScaleLine from 'ol/control/ScaleLine';
import OLMap from 'ol/Map';

var propTypes = {
  /**
   * ol/map.
   */
  map: PropTypes.instanceOf(OLMap).isRequired,

  /**
   * Options for ol/control/ScaleLine.
   * See https://openlayers.org/en/latest/apidoc/module-ol_control_ScaleLine-ScaleLine.html
   */
  options: PropTypes.object,
};

var defaultProps = {
  options: {},
};

/**
 * The ScaleLine component creates an
 * [ol/control/ScaleLine](https://openlayers.org/en/latest/apidoc/module-ol_control_ScaleLine-ScaleLine.html)
 * for an [ol/map](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html).
 */
function ScaleLine(ref$1) {
  var map = ref$1.map;
  var options = ref$1.options;
  var rest = objectWithoutProperties( ref$1, ["map", "options"] );
  var other = rest;

  var ref = useRef();

  useEffect(function () {
    var control = new OLScaleLine(Object.assign({}, options,
      {target: ref.current}));

    map.addControl(control);
    return function () {
      map.removeControl(control);
    };
  }, [map]);

  // eslint-disable-next-line react/jsx-props-no-spreading
  return React.createElement( 'div', Object.assign({}, { className: "rs-scale-line", ref: ref }, other));
}

ScaleLine.propTypes = propTypes;
ScaleLine.defaultProps = defaultProps;

export default React.memo(ScaleLine);

//# sourceMappingURL=ScaleLine.js.map