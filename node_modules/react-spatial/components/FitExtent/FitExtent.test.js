import React from 'react';
import renderer from 'react-test-renderer';
import { configure, shallow } from 'enzyme';
import Adapter from 'enzyme-adapter-react-16';
import OLView from 'ol/View';
import OLMap from 'ol/Map';
import FitExtent from './FitExtent';

configure({ adapter: new Adapter() });

var extent = [1, 2, 3, 4];

test('Button should match snapshot.', function () {
  var map = new OLMap({});
  var component = renderer.create(
    React.createElement( FitExtent, { map: map, extent: extent }, "FitExtent")
  );
  var tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Should fit the extent.', function () {
  var map = new OLMap({ view: new OLView({ zoom: 7, center: [0, 0] }) });
  var wrapper = shallow(
    React.createElement( FitExtent, { map: map, extent: extent, className: "fit-ext" }, "FitExtent")
  );
  wrapper.find('.fit-ext').first().simulate('click', {});
  var calculatedExtent = map.getView().calculateExtent(map.getSize());

  expect(calculatedExtent).toStrictEqual([1, 2, 3, 4]);
});

test('Should fit the extent on return.', function () {
  var map = new OLMap({ view: new OLView({ zoom: 7, center: [0, 0] }) });
  var wrapper = shallow(
    React.createElement( FitExtent, { map: map, extent: extent, className: "fit-ext" }, "FitExtent")
  );
  wrapper.find('.fit-ext').first().simulate('click', { which: 13 });
  var calculatedExtent = map.getView().calculateExtent(map.getSize());

  expect(calculatedExtent).toStrictEqual([1, 2, 3, 4]);
});

//# sourceMappingURL=FitExtent.test.js.map