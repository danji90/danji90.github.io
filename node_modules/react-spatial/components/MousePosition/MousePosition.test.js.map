{"version":3,"file":"MousePosition.test.js","sources":["../../../src/components/MousePosition/MousePosition.test.js"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport renderer from 'react-test-renderer';\nimport { configure, mount } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport 'jest-canvas-mock';\nimport OLMap from 'ol/Map';\nimport OLMousePosition from 'ol/control/MousePosition';\nimport MousePosition from './MousePosition';\n\nconfigure({ adapter: new Adapter() });\nconst expectSnapshot = (props) => {\n  const map = new OLMap({});\n  const component = renderer.create(<MousePosition map={map} {...props} />);\n  const tree = component.toJSON();\n  expect(tree).toMatchSnapshot();\n};\n\ndescribe('MousePosition', () => {\n  describe('matches snapshots', () => {\n    test('using default values.', () => {\n      expectSnapshot({});\n    });\n\n    test('using no projections.', () => {\n      expectSnapshot({\n        projections: [],\n      });\n    });\n\n    test('using only one projection', () => {\n      expectSnapshot({\n        projections: [{ label: 'foo', value: 'foo' }],\n      });\n    });\n\n    test('using multiple projections.', () => {\n      expectSnapshot({\n        projections: [\n          { label: 'foo', value: 'foo' },\n          { label: 'bar', value: 'bar' },\n        ],\n      });\n    });\n  });\n\n  test('add MousePosition control to the map.', () => {\n    const map = new OLMap({});\n    const spy = jest.spyOn(map, 'removeControl');\n    const spy2 = jest.spyOn(map, 'addControl');\n    const fn = jest.fn();\n    mount(\n      <MousePosition\n        map={map}\n        projections={[\n          {\n            label: 'EPSG:4326',\n            value: 'EPSG:4326',\n            format: fn,\n          },\n        ]}\n      />,\n    );\n    const ctrl = spy2.mock.calls[0][0];\n    expect(spy).toHaveBeenCalledTimes(0);\n    expect(spy2).toHaveBeenCalledTimes(1);\n    expect(ctrl).toBeInstanceOf(OLMousePosition);\n    expect(ctrl.getProjection().getCode()).toBe('EPSG:4326');\n    expect(ctrl.getCoordinateFormat()).toBe(fn);\n  });\n\n  test('add/remove MousePosition control on mount/unmount.', () => {\n    const map = new OLMap({});\n    const spy = jest.spyOn(map, 'removeControl');\n    const spy2 = jest.spyOn(map, 'addControl');\n    const wrapper = mount(<MousePosition map={map} />);\n    expect(spy).toHaveBeenCalledTimes(0);\n    expect(spy2).toHaveBeenCalledTimes(1);\n    wrapper.unmount();\n    expect(spy).toHaveBeenCalledTimes(1);\n    expect(spy.mock.calls[0][0]).toBe(spy2.mock.calls[0][0]);\n  });\n\n  test('triggers onChange when select projection.', () => {\n    const map = new OLMap({});\n    const onChange = jest.fn(() => {});\n    const wrapper = mount(\n      <MousePosition\n        map={map}\n        onChange={onChange}\n        projections={[\n          {\n            label: 'EPSG:4326',\n            value: 'EPSG:4326',\n            format: jest.fn(),\n          },\n        ]}\n      />,\n    );\n    // onChange triggered on instantiation.\n    expect(onChange).toHaveBeenCalledTimes(0);\n    wrapper.find('select').simulate('change', {});\n    expect(onChange).toHaveBeenCalledTimes(1);\n  });\n\n  test('applies new format and value when we select a new projection.', () => {\n    const map = new OLMap({});\n    const spy = jest.spyOn(map, 'addControl');\n    const projs = [\n      {\n        label: 'EPSG:4326',\n        value: 'EPSG:4326',\n        format: jest.fn(),\n      },\n      {\n        label: 'EPSG:3857',\n        value: 'EPSG:3857',\n        format: jest.fn(),\n      },\n    ];\n    const wrapper = mount(<MousePosition map={map} projections={projs} />);\n\n    const ctrl = spy.mock.calls[0][0];\n    expect(ctrl.getProjection().getCode()).toBe(projs[0].value);\n    expect(ctrl.getCoordinateFormat()).toBe(projs[0].format);\n    wrapper\n      .find('select')\n      .simulate('change', { target: { value: 'EPSG:3857' } });\n    expect(ctrl.getProjection().getCode()).toBe(projs[1].value);\n    expect(ctrl.getCoordinateFormat()).toBe(projs[1].format);\n  });\n});\n"],"names":["const"],"mappings":"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"}